{"code":"(this[\"webpackJsonpcs-central\"]=this[\"webpackJsonpcs-central\"]||[]).push([[133],{611:function(a,n,s){\"use strict\";function t(a){a.languages.tap={fail:/not ok[^#{\\n\\r]*/,pass:/ok[^#{\\n\\r]*/,pragma:/pragma [+-][a-z]+/,bailout:/bail out!.*/i,version:/TAP version \\d+/i,plan:/\\d+\\.\\.\\d+(?: +#.*)?/,subtest:{pattern:/# Subtest(?:: .*)?/,greedy:!0},punctuation:/[{}]/,directive:/#.*/,yamlish:{pattern:/(^[^\\S\\r\\n]*)---(?:\\r\\n?|\\n)(?:.*(?:\\r\\n?|\\n))*?[^\\S\\r\\n]*\\.\\.\\.$/m,lookbehind:!0,inside:a.languages.yaml,alias:\"language-yaml\"}}}a.exports=t,t.displayName=\"tap\",t.aliases=[]}}]);","name":"static/js/react-syntax-highlighter_languages_refractor_tap.bf94c683.chunk.js","map":{"version":3,"sources":["static/js/react-syntax-highlighter_languages_refractor_tap.bf94c683.chunk.js"],"names":["this","push","611","module","exports","__webpack_require__","tap","Prism","languages","fail","pass","pragma","bailout","version","plan","subtest","pattern","greedy","punctuation","directive","yamlish","lookbehind","inside","yaml","alias","displayName","aliases"],"mappings":"CAACA,KAAK,0BAA4BA,KAAK,2BAA6B,IAAIC,KAAK,CAAC,CAAC,KAAK,CAE9EC,IACA,SAAUC,EAAQC,EAASC,GAEjC,aAOA,SAASC,EAAIC,GACXA,EAAMC,UAAUF,IAAM,CACpBG,KAAM,mBACNC,KAAM,eACNC,OAAQ,oBACRC,QAAS,eACTC,QAAS,mBACTC,KAAM,uBACNC,QAAS,CACPC,QAAS,qBACTC,QAAQ,GAEVC,YAAa,OACbC,UAAW,MACXC,QAAS,CACPJ,QAAS,qEACTK,YAAY,EACZC,OAAQf,EAAMC,UAAUe,KACxBC,MAAO,kBAtBbrB,EAAOC,QAAUE,EACjBA,EAAImB,YAAc,MAClBnB,EAAIoB,QAAU"},"input":"(this[\"webpackJsonpcs-central\"] = this[\"webpackJsonpcs-central\"] || []).push([[133],{\n\n/***/ 611:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nmodule.exports = tap;\ntap.displayName = 'tap';\ntap.aliases = [];\n\nfunction tap(Prism) {\n  Prism.languages.tap = {\n    fail: /not ok[^#{\\n\\r]*/,\n    pass: /ok[^#{\\n\\r]*/,\n    pragma: /pragma [+-][a-z]+/,\n    bailout: /bail out!.*/i,\n    version: /TAP version \\d+/i,\n    plan: /\\d+\\.\\.\\d+(?: +#.*)?/,\n    subtest: {\n      pattern: /# Subtest(?:: .*)?/,\n      greedy: true\n    },\n    punctuation: /[{}]/,\n    directive: /#.*/,\n    yamlish: {\n      pattern: /(^[^\\S\\r\\n]*)---(?:\\r\\n?|\\n)(?:.*(?:\\r\\n?|\\n))*?[^\\S\\r\\n]*\\.\\.\\.$/m,\n      lookbehind: true,\n      inside: Prism.languages.yaml,\n      alias: 'language-yaml'\n    }\n  };\n}\n\n/***/ })\n\n}]);","inputSourceMap":{"version":3,"sources":["/Users/destul/Desktop/cs-central/node_modules/refractor/lang/tap.js"],"names":["module","exports","tap","displayName","aliases","Prism","languages","fail","pass","pragma","bailout","version","plan","subtest","pattern","greedy","punctuation","directive","yamlish","lookbehind","inside","yaml","alias"],"mappings":";;;;;;AAAA;;AAEAA,MAAM,CAACC,OAAP,GAAiBC,GAAjB;AACAA,GAAG,CAACC,WAAJ,GAAkB,KAAlB;AACAD,GAAG,CAACE,OAAJ,GAAc,EAAd;;AACA,SAASF,GAAT,CAAaG,KAAb,EAAoB;AAClBA,OAAK,CAACC,SAAN,CAAgBJ,GAAhB,GAAsB;AACpBK,QAAI,EAAE,kBADc;AAEpBC,QAAI,EAAE,cAFc;AAGpBC,UAAM,EAAE,mBAHY;AAIpBC,WAAO,EAAE,cAJW;AAKpBC,WAAO,EAAE,kBALW;AAMpBC,QAAI,EAAE,sBANc;AAOpBC,WAAO,EAAE;AACPC,aAAO,EAAE,oBADF;AAEPC,YAAM,EAAE;AAFD,KAPW;AAWpBC,eAAW,EAAE,MAXO;AAYpBC,aAAS,EAAE,KAZS;AAapBC,WAAO,EAAE;AACPJ,aAAO,EAAE,oEADF;AAEPK,gBAAU,EAAE,IAFL;AAGPC,YAAM,EAAEf,KAAK,CAACC,SAAN,CAAgBe,IAHjB;AAIPC,WAAK,EAAE;AAJA;AAbW,GAAtB;AAoBD,C","file":"x","sourcesContent":["'use strict'\n\nmodule.exports = tap\ntap.displayName = 'tap'\ntap.aliases = []\nfunction tap(Prism) {\n  Prism.languages.tap = {\n    fail: /not ok[^#{\\n\\r]*/,\n    pass: /ok[^#{\\n\\r]*/,\n    pragma: /pragma [+-][a-z]+/,\n    bailout: /bail out!.*/i,\n    version: /TAP version \\d+/i,\n    plan: /\\d+\\.\\.\\d+(?: +#.*)?/,\n    subtest: {\n      pattern: /# Subtest(?:: .*)?/,\n      greedy: true\n    },\n    punctuation: /[{}]/,\n    directive: /#.*/,\n    yamlish: {\n      pattern: /(^[^\\S\\r\\n]*)---(?:\\r\\n?|\\n)(?:.*(?:\\r\\n?|\\n))*?[^\\S\\r\\n]*\\.\\.\\.$/m,\n      lookbehind: true,\n      inside: Prism.languages.yaml,\n      alias: 'language-yaml'\n    }\n  }\n}\n"]}}