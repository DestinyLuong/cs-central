{"code":"(this[\"webpackJsonpcs-central\"]=this[\"webpackJsonpcs-central\"]||[]).push([[42],{528:function(e,n,t){\"use strict\";function a(e){e.languages.fsharp=e.languages.extend(\"clike\",{comment:[{pattern:/(^|[^\\\\])\\(\\*[\\s\\S]*?\\*\\)/,lookbehind:!0},{pattern:/(^|[^\\\\:])\\/\\/.*/,lookbehind:!0}],string:{pattern:/(?:\"\"\"[\\s\\S]*?\"\"\"|@\"(?:\"\"|[^\"])*\"|\"(?:\\\\[\\s\\S]|[^\\\\\"])*\")B?|'(?:[^\\\\']|\\\\(?:.|\\d{3}|x[a-fA-F\\d]{2}|u[a-fA-F\\d]{4}|U[a-fA-F\\d]{8}))'B?/,greedy:!0},\"class-name\":{pattern:/(\\b(?:exception|inherit|interface|new|of|type)\\s+|\\w\\s*:\\s*|\\s:\\??>\\s*)[.\\w]+\\b(?:\\s*(?:->|\\*)\\s*[.\\w]+\\b)*(?!\\s*[:.])/,lookbehind:!0,inside:{operator:/->|\\*/,punctuation:/\\./}},keyword:/\\b(?:let|return|use|yield)(?:!\\B|\\b)|\\b(abstract|and|as|assert|base|begin|class|default|delegate|do|done|downcast|downto|elif|else|end|exception|extern|false|finally|for|fun|function|global|if|in|inherit|inline|interface|internal|lazy|match|member|module|mutable|namespace|new|not|null|of|open|or|override|private|public|rec|select|static|struct|then|to|true|try|type|upcast|val|void|when|while|with|asr|land|lor|lsl|lsr|lxor|mod|sig|atomic|break|checked|component|const|constraint|constructor|continue|eager|event|external|fixed|functor|include|method|mixin|object|parallel|process|protected|pure|sealed|tailcall|trait|virtual|volatile)\\b/,number:[/\\b0x[\\da-fA-F]+(?:un|lf|LF)?\\b/,/\\b0b[01]+(?:y|uy)?\\b/,/(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:[fm]|e[+-]?\\d+)?\\b/i,/\\b\\d+(?:[IlLsy]|u[lsy]?|UL)?\\b/],operator:/([<>~&^])\\1\\1|([*.:<>&])\\2|<-|->|[!=:]=|<?\\|{1,3}>?|\\??(?:<=|>=|<>|[-+*/%=<>])\\??|[!?^&]|~[+~-]|:>|:\\?>?/}),e.languages.insertBefore(\"fsharp\",\"keyword\",{preprocessor:{pattern:/^[^\\r\\n\\S]*#.*/m,alias:\"property\",inside:{directive:{pattern:/(\\s*#)\\b(?:else|endif|if|light|line|nowarn)\\b/,lookbehind:!0,alias:\"keyword\"}}}}),e.languages.insertBefore(\"fsharp\",\"punctuation\",{\"computation-expression\":{pattern:/[_a-z]\\w*(?=\\s*\\{)/i,alias:\"keyword\"}}),e.languages.insertBefore(\"fsharp\",\"string\",{annotation:{pattern:/\\[<.+?>\\]/,inside:{punctuation:/^\\[<|>\\]$/,\"class-name\":{pattern:/^\\w+$|(^|;\\s*)[A-Z]\\w*(?=\\()/,lookbehind:!0},\"annotation-content\":{pattern:/[\\s\\S]+/,inside:e.languages.fsharp}}}})}e.exports=a,a.displayName=\"fsharp\",a.aliases=[]}}]);","name":"static/js/react-syntax-highlighter_languages_refractor_fsharp.e95e034c.chunk.js","map":{"version":3,"sources":["static/js/react-syntax-highlighter_languages_refractor_fsharp.e95e034c.chunk.js"],"names":["this","push","528","module","exports","__webpack_require__","fsharp","Prism","languages","extend","comment","pattern","lookbehind","string","greedy","class-name","inside","operator","punctuation","keyword","number","insertBefore","preprocessor","alias","directive","computation-expression","annotation","annotation-content","displayName","aliases"],"mappings":"CAACA,KAAK,0BAA4BA,KAAK,2BAA6B,IAAIC,KAAK,CAAC,CAAC,IAAI,CAE7EC,IACA,SAAUC,EAAQC,EAASC,GAEjC,aAOA,SAASC,EAAOC,GACdA,EAAMC,UAAUF,OAASC,EAAMC,UAAUC,OAAO,QAAS,CACvDC,QAAS,CAAC,CACRC,QAAS,4BACTC,YAAY,GACX,CACDD,QAAS,mBACTC,YAAY,IAEdC,OAAQ,CACNF,QAAS,wIACTG,QAAQ,GAEVC,aAAc,CACZJ,QAAS,yHACTC,YAAY,EACZI,OAAQ,CACNC,SAAU,QACVC,YAAa,OAGjBC,QAAS,koBACTC,OAAQ,CAAC,iCAAkC,uBAAwB,gDAAiD,kCACpHH,SAAU,6GAEZV,EAAMC,UAAUa,aAAa,SAAU,UAAW,CAChDC,aAAc,CACZX,QAAS,kBACTY,MAAO,WACPP,OAAQ,CACNQ,UAAW,CACTb,QAAS,gDACTC,YAAY,EACZW,MAAO,eAKfhB,EAAMC,UAAUa,aAAa,SAAU,cAAe,CACpDI,yBAA0B,CACxBd,QAAS,sBACTY,MAAO,aAGXhB,EAAMC,UAAUa,aAAa,SAAU,SAAU,CAC/CK,WAAY,CACVf,QAAS,YACTK,OAAQ,CACNE,YAAa,YACbH,aAAc,CACZJ,QAAS,+BACTC,YAAY,GAEde,qBAAsB,CACpBhB,QAAS,UACTK,OAAQT,EAAMC,UAAUF,YA3DlCH,EAAOC,QAAUE,EACjBA,EAAOsB,YAAc,SACrBtB,EAAOuB,QAAU"},"input":"(this[\"webpackJsonpcs-central\"] = this[\"webpackJsonpcs-central\"] || []).push([[42],{\n\n/***/ 528:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nmodule.exports = fsharp;\nfsharp.displayName = 'fsharp';\nfsharp.aliases = [];\n\nfunction fsharp(Prism) {\n  Prism.languages.fsharp = Prism.languages.extend('clike', {\n    comment: [{\n      pattern: /(^|[^\\\\])\\(\\*[\\s\\S]*?\\*\\)/,\n      lookbehind: true\n    }, {\n      pattern: /(^|[^\\\\:])\\/\\/.*/,\n      lookbehind: true\n    }],\n    string: {\n      pattern: /(?:\"\"\"[\\s\\S]*?\"\"\"|@\"(?:\"\"|[^\"])*\"|\"(?:\\\\[\\s\\S]|[^\\\\\"])*\")B?|'(?:[^\\\\']|\\\\(?:.|\\d{3}|x[a-fA-F\\d]{2}|u[a-fA-F\\d]{4}|U[a-fA-F\\d]{8}))'B?/,\n      greedy: true\n    },\n    'class-name': {\n      pattern: /(\\b(?:exception|inherit|interface|new|of|type)\\s+|\\w\\s*:\\s*|\\s:\\??>\\s*)[.\\w]+\\b(?:\\s*(?:->|\\*)\\s*[.\\w]+\\b)*(?!\\s*[:.])/,\n      lookbehind: true,\n      inside: {\n        operator: /->|\\*/,\n        punctuation: /\\./\n      }\n    },\n    keyword: /\\b(?:let|return|use|yield)(?:!\\B|\\b)|\\b(abstract|and|as|assert|base|begin|class|default|delegate|do|done|downcast|downto|elif|else|end|exception|extern|false|finally|for|fun|function|global|if|in|inherit|inline|interface|internal|lazy|match|member|module|mutable|namespace|new|not|null|of|open|or|override|private|public|rec|select|static|struct|then|to|true|try|type|upcast|val|void|when|while|with|asr|land|lor|lsl|lsr|lxor|mod|sig|atomic|break|checked|component|const|constraint|constructor|continue|eager|event|external|fixed|functor|include|method|mixin|object|parallel|process|protected|pure|sealed|tailcall|trait|virtual|volatile)\\b/,\n    number: [/\\b0x[\\da-fA-F]+(?:un|lf|LF)?\\b/, /\\b0b[01]+(?:y|uy)?\\b/, /(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:[fm]|e[+-]?\\d+)?\\b/i, /\\b\\d+(?:[IlLsy]|u[lsy]?|UL)?\\b/],\n    operator: /([<>~&^])\\1\\1|([*.:<>&])\\2|<-|->|[!=:]=|<?\\|{1,3}>?|\\??(?:<=|>=|<>|[-+*/%=<>])\\??|[!?^&]|~[+~-]|:>|:\\?>?/\n  });\n  Prism.languages.insertBefore('fsharp', 'keyword', {\n    preprocessor: {\n      pattern: /^[^\\r\\n\\S]*#.*/m,\n      alias: 'property',\n      inside: {\n        directive: {\n          pattern: /(\\s*#)\\b(?:else|endif|if|light|line|nowarn)\\b/,\n          lookbehind: true,\n          alias: 'keyword'\n        }\n      }\n    }\n  });\n  Prism.languages.insertBefore('fsharp', 'punctuation', {\n    'computation-expression': {\n      pattern: /[_a-z]\\w*(?=\\s*\\{)/i,\n      alias: 'keyword'\n    }\n  });\n  Prism.languages.insertBefore('fsharp', 'string', {\n    annotation: {\n      pattern: /\\[<.+?>\\]/,\n      inside: {\n        punctuation: /^\\[<|>\\]$/,\n        'class-name': {\n          pattern: /^\\w+$|(^|;\\s*)[A-Z]\\w*(?=\\()/,\n          lookbehind: true\n        },\n        'annotation-content': {\n          pattern: /[\\s\\S]+/,\n          inside: Prism.languages.fsharp\n        }\n      }\n    }\n  });\n}\n\n/***/ })\n\n}]);","inputSourceMap":{"version":3,"sources":["/Users/destul/Desktop/cs-central/node_modules/refractor/lang/fsharp.js"],"names":["module","exports","fsharp","displayName","aliases","Prism","languages","extend","comment","pattern","lookbehind","string","greedy","inside","operator","punctuation","keyword","number","insertBefore","preprocessor","alias","directive","annotation"],"mappings":";;;;;;AAAA;;AAEAA,MAAM,CAACC,OAAP,GAAiBC,MAAjB;AACAA,MAAM,CAACC,WAAP,GAAqB,QAArB;AACAD,MAAM,CAACE,OAAP,GAAiB,EAAjB;;AACA,SAASF,MAAT,CAAgBG,KAAhB,EAAuB;AACrBA,OAAK,CAACC,SAAN,CAAgBJ,MAAhB,GAAyBG,KAAK,CAACC,SAAN,CAAgBC,MAAhB,CAAuB,OAAvB,EAAgC;AACvDC,WAAO,EAAE,CACP;AACEC,aAAO,EAAE,2BADX;AAEEC,gBAAU,EAAE;AAFd,KADO,EAKP;AACED,aAAO,EAAE,kBADX;AAEEC,gBAAU,EAAE;AAFd,KALO,CAD8C;AAWvDC,UAAM,EAAE;AACNF,aAAO,EAAE,uIADH;AAENG,YAAM,EAAE;AAFF,KAX+C;AAevD,kBAAc;AACZH,aAAO,EAAE,wHADG;AAEZC,gBAAU,EAAE,IAFA;AAGZG,YAAM,EAAE;AACNC,gBAAQ,EAAE,OADJ;AAENC,mBAAW,EAAE;AAFP;AAHI,KAfyC;AAuBvDC,WAAO,EAAE,ioBAvB8C;AAwBvDC,UAAM,EAAE,CACN,gCADM,EAEN,sBAFM,EAGN,+CAHM,EAIN,gCAJM,CAxB+C;AA8BvDH,YAAQ,EAAE;AA9B6C,GAAhC,CAAzB;AAgCAT,OAAK,CAACC,SAAN,CAAgBY,YAAhB,CAA6B,QAA7B,EAAuC,SAAvC,EAAkD;AAChDC,gBAAY,EAAE;AACZV,aAAO,EAAE,iBADG;AAEZW,WAAK,EAAE,UAFK;AAGZP,YAAM,EAAE;AACNQ,iBAAS,EAAE;AACTZ,iBAAO,EAAE,+CADA;AAETC,oBAAU,EAAE,IAFH;AAGTU,eAAK,EAAE;AAHE;AADL;AAHI;AADkC,GAAlD;AAaAf,OAAK,CAACC,SAAN,CAAgBY,YAAhB,CAA6B,QAA7B,EAAuC,aAAvC,EAAsD;AACpD,8BAA0B;AACxBT,aAAO,EAAE,qBADe;AAExBW,WAAK,EAAE;AAFiB;AAD0B,GAAtD;AAMAf,OAAK,CAACC,SAAN,CAAgBY,YAAhB,CAA6B,QAA7B,EAAuC,QAAvC,EAAiD;AAC/CI,cAAU,EAAE;AACVb,aAAO,EAAE,WADC;AAEVI,YAAM,EAAE;AACNE,mBAAW,EAAE,WADP;AAEN,sBAAc;AACZN,iBAAO,EAAE,8BADG;AAEZC,oBAAU,EAAE;AAFA,SAFR;AAMN,8BAAsB;AACpBD,iBAAO,EAAE,SADW;AAEpBI,gBAAM,EAAER,KAAK,CAACC,SAAN,CAAgBJ;AAFJ;AANhB;AAFE;AADmC,GAAjD;AAgBD,C","file":"x","sourcesContent":["'use strict'\n\nmodule.exports = fsharp\nfsharp.displayName = 'fsharp'\nfsharp.aliases = []\nfunction fsharp(Prism) {\n  Prism.languages.fsharp = Prism.languages.extend('clike', {\n    comment: [\n      {\n        pattern: /(^|[^\\\\])\\(\\*[\\s\\S]*?\\*\\)/,\n        lookbehind: true\n      },\n      {\n        pattern: /(^|[^\\\\:])\\/\\/.*/,\n        lookbehind: true\n      }\n    ],\n    string: {\n      pattern: /(?:\"\"\"[\\s\\S]*?\"\"\"|@\"(?:\"\"|[^\"])*\"|\"(?:\\\\[\\s\\S]|[^\\\\\"])*\")B?|'(?:[^\\\\']|\\\\(?:.|\\d{3}|x[a-fA-F\\d]{2}|u[a-fA-F\\d]{4}|U[a-fA-F\\d]{8}))'B?/,\n      greedy: true\n    },\n    'class-name': {\n      pattern: /(\\b(?:exception|inherit|interface|new|of|type)\\s+|\\w\\s*:\\s*|\\s:\\??>\\s*)[.\\w]+\\b(?:\\s*(?:->|\\*)\\s*[.\\w]+\\b)*(?!\\s*[:.])/,\n      lookbehind: true,\n      inside: {\n        operator: /->|\\*/,\n        punctuation: /\\./\n      }\n    },\n    keyword: /\\b(?:let|return|use|yield)(?:!\\B|\\b)|\\b(abstract|and|as|assert|base|begin|class|default|delegate|do|done|downcast|downto|elif|else|end|exception|extern|false|finally|for|fun|function|global|if|in|inherit|inline|interface|internal|lazy|match|member|module|mutable|namespace|new|not|null|of|open|or|override|private|public|rec|select|static|struct|then|to|true|try|type|upcast|val|void|when|while|with|asr|land|lor|lsl|lsr|lxor|mod|sig|atomic|break|checked|component|const|constraint|constructor|continue|eager|event|external|fixed|functor|include|method|mixin|object|parallel|process|protected|pure|sealed|tailcall|trait|virtual|volatile)\\b/,\n    number: [\n      /\\b0x[\\da-fA-F]+(?:un|lf|LF)?\\b/,\n      /\\b0b[01]+(?:y|uy)?\\b/,\n      /(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:[fm]|e[+-]?\\d+)?\\b/i,\n      /\\b\\d+(?:[IlLsy]|u[lsy]?|UL)?\\b/\n    ],\n    operator: /([<>~&^])\\1\\1|([*.:<>&])\\2|<-|->|[!=:]=|<?\\|{1,3}>?|\\??(?:<=|>=|<>|[-+*/%=<>])\\??|[!?^&]|~[+~-]|:>|:\\?>?/\n  })\n  Prism.languages.insertBefore('fsharp', 'keyword', {\n    preprocessor: {\n      pattern: /^[^\\r\\n\\S]*#.*/m,\n      alias: 'property',\n      inside: {\n        directive: {\n          pattern: /(\\s*#)\\b(?:else|endif|if|light|line|nowarn)\\b/,\n          lookbehind: true,\n          alias: 'keyword'\n        }\n      }\n    }\n  })\n  Prism.languages.insertBefore('fsharp', 'punctuation', {\n    'computation-expression': {\n      pattern: /[_a-z]\\w*(?=\\s*\\{)/i,\n      alias: 'keyword'\n    }\n  })\n  Prism.languages.insertBefore('fsharp', 'string', {\n    annotation: {\n      pattern: /\\[<.+?>\\]/,\n      inside: {\n        punctuation: /^\\[<|>\\]$/,\n        'class-name': {\n          pattern: /^\\w+$|(^|;\\s*)[A-Z]\\w*(?=\\()/,\n          lookbehind: true\n        },\n        'annotation-content': {\n          pattern: /[\\s\\S]+/,\n          inside: Prism.languages.fsharp\n        }\n      }\n    }\n  })\n}\n"]}}