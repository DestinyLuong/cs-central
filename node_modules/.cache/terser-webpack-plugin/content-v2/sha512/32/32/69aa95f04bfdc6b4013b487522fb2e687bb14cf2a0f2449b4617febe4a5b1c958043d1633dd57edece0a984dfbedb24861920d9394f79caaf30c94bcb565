{"code":"(this[\"webpackJsonpcs-central\"]=this[\"webpackJsonpcs-central\"]||[]).push([[38,81,120],{445:function(e,n,t){\"use strict\";function r(e){!function(e){function n(e,n){return\"___\"+e.toUpperCase()+n+\"___\"}Object.defineProperties(e.languages[\"markup-templating\"]={},{buildPlaceholders:{value:function(t,r,i,a){if(t.language===r){var s=t.tokenStack=[];t.code=t.code.replace(i,(function(e){if(\"function\"===typeof a&&!a(e))return e;for(var i,o=s.length;-1!==t.code.indexOf(i=n(r,o));)++o;return s[o]=e,i})),t.grammar=e.languages.markup}}},tokenizePlaceholders:{value:function(t,r){if(t.language===r&&t.tokenStack){t.grammar=e.languages[r];var i=0,a=Object.keys(t.tokenStack);!function s(o){for(var l=0;l<o.length&&!(i>=a.length);l++){var u=o[l];if(\"string\"===typeof u||u.content&&\"string\"===typeof u.content){var g=a[i],d=t.tokenStack[g],p=\"string\"===typeof u?u:u.content,c=n(r,g),b=p.indexOf(c);if(b>-1){++i;var f=p.substring(0,b),m=new e.Token(r,e.tokenize(d,t.grammar),\"language-\"+r,d),y=p.substring(b+c.length),k=[];f&&k.push.apply(k,s([f])),k.push(m),y&&k.push.apply(k,s([y])),\"string\"===typeof u?o.splice.apply(o,[l,1].concat(k)):u.content=k}}else u.content&&s(u.content)}return o}(t.tokens)}}}})}(e)}e.exports=r,r.displayName=\"markupTemplating\",r.aliases=[]},449:function(e,n,t){\"use strict\";function r(e){!function(e){e.languages.ruby=e.languages.extend(\"clike\",{comment:[/#.*/,{pattern:/^=begin\\s[\\s\\S]*?^=end/m,greedy:!0}],keyword:/\\b(?:alias|and|BEGIN|begin|break|case|class|def|define_method|defined|do|each|else|elsif|END|end|ensure|false|for|if|in|module|new|next|nil|not|or|protected|private|public|raise|redo|require|rescue|retry|return|self|super|then|throw|true|undef|unless|until|when|while|yield)\\b/});var n={pattern:/#\\{[^}]+\\}/,inside:{delimiter:{pattern:/^#\\{|\\}$/,alias:\"tag\"},rest:e.languages.ruby}};delete e.languages.ruby.function,e.languages.insertBefore(\"ruby\",\"keyword\",{regex:[{pattern:/%r([^a-zA-Z0-9\\s{(\\[<])(?:(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1[gim]{0,3}/,greedy:!0,inside:{interpolation:n}},{pattern:/%r\\((?:[^()\\\\]|\\\\[\\s\\S])*\\)[gim]{0,3}/,greedy:!0,inside:{interpolation:n}},{pattern:/%r\\{(?:[^#{}\\\\]|#(?:\\{[^}]+\\})?|\\\\[\\s\\S])*\\}[gim]{0,3}/,greedy:!0,inside:{interpolation:n}},{pattern:/%r\\[(?:[^\\[\\]\\\\]|\\\\[\\s\\S])*\\][gim]{0,3}/,greedy:!0,inside:{interpolation:n}},{pattern:/%r<(?:[^<>\\\\]|\\\\[\\s\\S])*>[gim]{0,3}/,greedy:!0,inside:{interpolation:n}},{pattern:/(^|[^/])\\/(?!\\/)(\\[.+?]|\\\\.|[^/\\\\\\r\\n])+\\/[gim]{0,3}(?=\\s*($|[\\r\\n,.;})]))/,lookbehind:!0,greedy:!0}],variable:/[@$]+[a-zA-Z_]\\w*(?:[?!]|\\b)/,symbol:{pattern:/(^|[^:]):[a-zA-Z_]\\w*(?:[?!]|\\b)/,lookbehind:!0},\"method-definition\":{pattern:/(\\bdef\\s+)[\\w.]+/,lookbehind:!0,inside:{function:/\\w+$/,rest:e.languages.ruby}}}),e.languages.insertBefore(\"ruby\",\"number\",{builtin:/\\b(?:Array|Bignum|Binding|Class|Continuation|Dir|Exception|FalseClass|File|Stat|Fixnum|Float|Hash|Integer|IO|MatchData|Method|Module|NilClass|Numeric|Object|Proc|Range|Regexp|String|Struct|TMS|Symbol|ThreadGroup|Thread|Time|TrueClass)\\b/,constant:/\\b[A-Z]\\w*(?:[?!]|\\b)/}),e.languages.ruby.string=[{pattern:/%[qQiIwWxs]?([^a-zA-Z0-9\\s{(\\[<])(?:(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1/,greedy:!0,inside:{interpolation:n}},{pattern:/%[qQiIwWxs]?\\((?:[^()\\\\]|\\\\[\\s\\S])*\\)/,greedy:!0,inside:{interpolation:n}},{pattern:/%[qQiIwWxs]?\\{(?:[^#{}\\\\]|#(?:\\{[^}]+\\})?|\\\\[\\s\\S])*\\}/,greedy:!0,inside:{interpolation:n}},{pattern:/%[qQiIwWxs]?\\[(?:[^\\[\\]\\\\]|\\\\[\\s\\S])*\\]/,greedy:!0,inside:{interpolation:n}},{pattern:/%[qQiIwWxs]?<(?:[^<>\\\\]|\\\\[\\s\\S])*>/,greedy:!0,inside:{interpolation:n}},{pattern:/(\"|')(?:#\\{[^}]+\\}|\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,greedy:!0,inside:{interpolation:n}}],e.languages.rb=e.languages.ruby}(e)}e.exports=r,r.displayName=\"ruby\",r.aliases=[\"rb\"]},524:function(e,n,t){\"use strict\";var r=t(445),i=t(449);function a(e){e.register(r),e.register(i),function(e){e.languages.erb=e.languages.extend(\"ruby\",{}),e.languages.insertBefore(\"erb\",\"comment\",{delimiter:{pattern:/^<%=?|%>$/,alias:\"punctuation\"}}),e.hooks.add(\"before-tokenize\",(function(n){e.languages[\"markup-templating\"].buildPlaceholders(n,\"erb\",/<%=?(?:[^\\r\\n]|[\\r\\n](?!=begin)|[\\r\\n]=begin\\s[\\s\\S]*?^=end)+?%>/gm)})),e.hooks.add(\"after-tokenize\",(function(n){e.languages[\"markup-templating\"].tokenizePlaceholders(n,\"erb\")}))}(e)}e.exports=a,a.displayName=\"erb\",a.aliases=[]}}]);","name":"static/js/react-syntax-highlighter_languages_refractor_erb.c1495fe7.chunk.js","map":{"version":3,"sources":["static/js/react-syntax-highlighter_languages_refractor_erb.c1495fe7.chunk.js"],"names":["this","push","445","module","exports","__webpack_require__","markupTemplating","Prism","getPlaceholder","language","index","toUpperCase","Object","defineProperties","languages","buildPlaceholders","value","env","placeholderPattern","replaceFilter","tokenStack","code","replace","match","placeholder","i","length","indexOf","grammar","markup","tokenizePlaceholders","j","keys","walkTokens","tokens","token","content","k","t","s","before","substring","middle","Token","tokenize","after","replacement","apply","splice","concat","displayName","aliases","449","ruby","extend","comment","pattern","greedy","keyword","interpolation","inside","delimiter","alias","rest","function","insertBefore","regex","lookbehind","variable","symbol","method-definition","builtin","constant","string","rb","524","refractorMarkupTemplating","refractorRuby","erb","register","hooks","add"],"mappings":"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"},"input":"(this[\"webpackJsonpcs-central\"] = this[\"webpackJsonpcs-central\"] || []).push([[38,81,120],{\n\n/***/ 445:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nmodule.exports = markupTemplating;\nmarkupTemplating.displayName = 'markupTemplating';\nmarkupTemplating.aliases = [];\n\nfunction markupTemplating(Prism) {\n  ;\n\n  (function (Prism) {\n    /**\n     * Returns the placeholder for the given language id and index.\n     *\n     * @param {string} language\n     * @param {string|number} index\n     * @returns {string}\n     */\n    function getPlaceholder(language, index) {\n      return '___' + language.toUpperCase() + index + '___';\n    }\n\n    Object.defineProperties(Prism.languages['markup-templating'] = {}, {\n      buildPlaceholders: {\n        /**\n         * Tokenize all inline templating expressions matching `placeholderPattern`.\n         *\n         * If `replaceFilter` is provided, only matches of `placeholderPattern` for which `replaceFilter` returns\n         * `true` will be replaced.\n         *\n         * @param {object} env The environment of the `before-tokenize` hook.\n         * @param {string} language The language id.\n         * @param {RegExp} placeholderPattern The matches of this pattern will be replaced by placeholders.\n         * @param {(match: string) => boolean} [replaceFilter]\n         */\n        value: function value(env, language, placeholderPattern, replaceFilter) {\n          if (env.language !== language) {\n            return;\n          }\n\n          var tokenStack = env.tokenStack = [];\n          env.code = env.code.replace(placeholderPattern, function (match) {\n            if (typeof replaceFilter === 'function' && !replaceFilter(match)) {\n              return match;\n            }\n\n            var i = tokenStack.length;\n            var placeholder; // Check for existing strings\n\n            while (env.code.indexOf(placeholder = getPlaceholder(language, i)) !== -1) {\n              ++i;\n            } // Create a sparse array\n\n\n            tokenStack[i] = match;\n            return placeholder;\n          }); // Switch the grammar to markup\n\n          env.grammar = Prism.languages.markup;\n        }\n      },\n      tokenizePlaceholders: {\n        /**\n         * Replace placeholders with proper tokens after tokenizing.\n         *\n         * @param {object} env The environment of the `after-tokenize` hook.\n         * @param {string} language The language id.\n         */\n        value: function value(env, language) {\n          if (env.language !== language || !env.tokenStack) {\n            return;\n          } // Switch the grammar back\n\n\n          env.grammar = Prism.languages[language];\n          var j = 0;\n          var keys = Object.keys(env.tokenStack);\n\n          function walkTokens(tokens) {\n            for (var i = 0; i < tokens.length; i++) {\n              // all placeholders are replaced already\n              if (j >= keys.length) {\n                break;\n              }\n\n              var token = tokens[i];\n\n              if (typeof token === 'string' || token.content && typeof token.content === 'string') {\n                var k = keys[j];\n                var t = env.tokenStack[k];\n                var s = typeof token === 'string' ? token : token.content;\n                var placeholder = getPlaceholder(language, k);\n                var index = s.indexOf(placeholder);\n\n                if (index > -1) {\n                  ++j;\n                  var before = s.substring(0, index);\n                  var middle = new Prism.Token(language, Prism.tokenize(t, env.grammar), 'language-' + language, t);\n                  var after = s.substring(index + placeholder.length);\n                  var replacement = [];\n\n                  if (before) {\n                    replacement.push.apply(replacement, walkTokens([before]));\n                  }\n\n                  replacement.push(middle);\n\n                  if (after) {\n                    replacement.push.apply(replacement, walkTokens([after]));\n                  }\n\n                  if (typeof token === 'string') {\n                    tokens.splice.apply(tokens, [i, 1].concat(replacement));\n                  } else {\n                    token.content = replacement;\n                  }\n                }\n              } else if (token.content\n              /* && typeof token.content !== 'string' */\n              ) {\n                  walkTokens(token.content);\n                }\n            }\n\n            return tokens;\n          }\n\n          walkTokens(env.tokens);\n        }\n      }\n    });\n  })(Prism);\n}\n\n/***/ }),\n\n/***/ 449:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nmodule.exports = ruby;\nruby.displayName = 'ruby';\nruby.aliases = ['rb'];\n\nfunction ruby(Prism) {\n  /**\n   * Original by Samuel Flores\n   *\n   * Adds the following new token classes:\n   *      constant, builtin, variable, symbol, regex\n   */\n  ;\n\n  (function (Prism) {\n    Prism.languages.ruby = Prism.languages.extend('clike', {\n      comment: [/#.*/, {\n        pattern: /^=begin\\s[\\s\\S]*?^=end/m,\n        greedy: true\n      }],\n      keyword: /\\b(?:alias|and|BEGIN|begin|break|case|class|def|define_method|defined|do|each|else|elsif|END|end|ensure|false|for|if|in|module|new|next|nil|not|or|protected|private|public|raise|redo|require|rescue|retry|return|self|super|then|throw|true|undef|unless|until|when|while|yield)\\b/\n    });\n    var interpolation = {\n      pattern: /#\\{[^}]+\\}/,\n      inside: {\n        delimiter: {\n          pattern: /^#\\{|\\}$/,\n          alias: 'tag'\n        },\n        rest: Prism.languages.ruby\n      }\n    };\n    delete Prism.languages.ruby.function;\n    Prism.languages.insertBefore('ruby', 'keyword', {\n      regex: [{\n        pattern: /%r([^a-zA-Z0-9\\s{(\\[<])(?:(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1[gim]{0,3}/,\n        greedy: true,\n        inside: {\n          interpolation: interpolation\n        }\n      }, {\n        pattern: /%r\\((?:[^()\\\\]|\\\\[\\s\\S])*\\)[gim]{0,3}/,\n        greedy: true,\n        inside: {\n          interpolation: interpolation\n        }\n      }, {\n        // Here we need to specifically allow interpolation\n        pattern: /%r\\{(?:[^#{}\\\\]|#(?:\\{[^}]+\\})?|\\\\[\\s\\S])*\\}[gim]{0,3}/,\n        greedy: true,\n        inside: {\n          interpolation: interpolation\n        }\n      }, {\n        pattern: /%r\\[(?:[^\\[\\]\\\\]|\\\\[\\s\\S])*\\][gim]{0,3}/,\n        greedy: true,\n        inside: {\n          interpolation: interpolation\n        }\n      }, {\n        pattern: /%r<(?:[^<>\\\\]|\\\\[\\s\\S])*>[gim]{0,3}/,\n        greedy: true,\n        inside: {\n          interpolation: interpolation\n        }\n      }, {\n        pattern: /(^|[^/])\\/(?!\\/)(\\[.+?]|\\\\.|[^/\\\\\\r\\n])+\\/[gim]{0,3}(?=\\s*($|[\\r\\n,.;})]))/,\n        lookbehind: true,\n        greedy: true\n      }],\n      variable: /[@$]+[a-zA-Z_]\\w*(?:[?!]|\\b)/,\n      symbol: {\n        pattern: /(^|[^:]):[a-zA-Z_]\\w*(?:[?!]|\\b)/,\n        lookbehind: true\n      },\n      'method-definition': {\n        pattern: /(\\bdef\\s+)[\\w.]+/,\n        lookbehind: true,\n        inside: {\n          function: /\\w+$/,\n          rest: Prism.languages.ruby\n        }\n      }\n    });\n    Prism.languages.insertBefore('ruby', 'number', {\n      builtin: /\\b(?:Array|Bignum|Binding|Class|Continuation|Dir|Exception|FalseClass|File|Stat|Fixnum|Float|Hash|Integer|IO|MatchData|Method|Module|NilClass|Numeric|Object|Proc|Range|Regexp|String|Struct|TMS|Symbol|ThreadGroup|Thread|Time|TrueClass)\\b/,\n      constant: /\\b[A-Z]\\w*(?:[?!]|\\b)/\n    });\n    Prism.languages.ruby.string = [{\n      pattern: /%[qQiIwWxs]?([^a-zA-Z0-9\\s{(\\[<])(?:(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1/,\n      greedy: true,\n      inside: {\n        interpolation: interpolation\n      }\n    }, {\n      pattern: /%[qQiIwWxs]?\\((?:[^()\\\\]|\\\\[\\s\\S])*\\)/,\n      greedy: true,\n      inside: {\n        interpolation: interpolation\n      }\n    }, {\n      // Here we need to specifically allow interpolation\n      pattern: /%[qQiIwWxs]?\\{(?:[^#{}\\\\]|#(?:\\{[^}]+\\})?|\\\\[\\s\\S])*\\}/,\n      greedy: true,\n      inside: {\n        interpolation: interpolation\n      }\n    }, {\n      pattern: /%[qQiIwWxs]?\\[(?:[^\\[\\]\\\\]|\\\\[\\s\\S])*\\]/,\n      greedy: true,\n      inside: {\n        interpolation: interpolation\n      }\n    }, {\n      pattern: /%[qQiIwWxs]?<(?:[^<>\\\\]|\\\\[\\s\\S])*>/,\n      greedy: true,\n      inside: {\n        interpolation: interpolation\n      }\n    }, {\n      pattern: /(\"|')(?:#\\{[^}]+\\}|\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n      greedy: true,\n      inside: {\n        interpolation: interpolation\n      }\n    }];\n    Prism.languages.rb = Prism.languages.ruby;\n  })(Prism);\n}\n\n/***/ }),\n\n/***/ 524:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar refractorMarkupTemplating = __webpack_require__(445);\n\nvar refractorRuby = __webpack_require__(449);\n\nmodule.exports = erb;\nerb.displayName = 'erb';\nerb.aliases = [];\n\nfunction erb(Prism) {\n  Prism.register(refractorMarkupTemplating);\n  Prism.register(refractorRuby);\n\n  (function (Prism) {\n    Prism.languages.erb = Prism.languages.extend('ruby', {});\n    Prism.languages.insertBefore('erb', 'comment', {\n      delimiter: {\n        pattern: /^<%=?|%>$/,\n        alias: 'punctuation'\n      }\n    });\n    Prism.hooks.add('before-tokenize', function (env) {\n      var erbPattern = /<%=?(?:[^\\r\\n]|[\\r\\n](?!=begin)|[\\r\\n]=begin\\s[\\s\\S]*?^=end)+?%>/gm;\n      Prism.languages['markup-templating'].buildPlaceholders(env, 'erb', erbPattern);\n    });\n    Prism.hooks.add('after-tokenize', function (env) {\n      Prism.languages['markup-templating'].tokenizePlaceholders(env, 'erb');\n    });\n  })(Prism);\n}\n\n/***/ })\n\n}]);","inputSourceMap":{"version":3,"sources":["/Users/destul/Desktop/cs-central/node_modules/refractor/lang/markup-templating.js","/Users/destul/Desktop/cs-central/node_modules/refractor/lang/ruby.js","/Users/destul/Desktop/cs-central/node_modules/refractor/lang/erb.js"],"names":["module","exports","markupTemplating","displayName","aliases","Prism","getPlaceholder","language","index","toUpperCase","Object","defineProperties","languages","buildPlaceholders","value","env","placeholderPattern","replaceFilter","tokenStack","code","replace","match","i","length","placeholder","indexOf","grammar","markup","tokenizePlaceholders","j","keys","walkTokens","tokens","token","content","k","t","s","before","substring","middle","Token","tokenize","after","replacement","push","apply","splice","concat","ruby","extend","comment","pattern","greedy","keyword","interpolation","inside","delimiter","alias","rest","function","insertBefore","regex","lookbehind","variable","symbol","builtin","constant","string","rb","refractorMarkupTemplating","require","refractorRuby","erb","register","hooks","add","erbPattern"],"mappings":"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","file":"x","sourcesContent":["'use strict'\n\nmodule.exports = markupTemplating\nmarkupTemplating.displayName = 'markupTemplating'\nmarkupTemplating.aliases = []\nfunction markupTemplating(Prism) {\n  ;(function(Prism) {\n    /**\n     * Returns the placeholder for the given language id and index.\n     *\n     * @param {string} language\n     * @param {string|number} index\n     * @returns {string}\n     */\n    function getPlaceholder(language, index) {\n      return '___' + language.toUpperCase() + index + '___'\n    }\n    Object.defineProperties((Prism.languages['markup-templating'] = {}), {\n      buildPlaceholders: {\n        /**\n         * Tokenize all inline templating expressions matching `placeholderPattern`.\n         *\n         * If `replaceFilter` is provided, only matches of `placeholderPattern` for which `replaceFilter` returns\n         * `true` will be replaced.\n         *\n         * @param {object} env The environment of the `before-tokenize` hook.\n         * @param {string} language The language id.\n         * @param {RegExp} placeholderPattern The matches of this pattern will be replaced by placeholders.\n         * @param {(match: string) => boolean} [replaceFilter]\n         */\n        value: function(env, language, placeholderPattern, replaceFilter) {\n          if (env.language !== language) {\n            return\n          }\n          var tokenStack = (env.tokenStack = [])\n          env.code = env.code.replace(placeholderPattern, function(match) {\n            if (typeof replaceFilter === 'function' && !replaceFilter(match)) {\n              return match\n            }\n            var i = tokenStack.length\n            var placeholder // Check for existing strings\n            while (\n              env.code.indexOf((placeholder = getPlaceholder(language, i))) !==\n              -1\n            )\n              ++i // Create a sparse array\n            tokenStack[i] = match\n            return placeholder\n          }) // Switch the grammar to markup\n          env.grammar = Prism.languages.markup\n        }\n      },\n      tokenizePlaceholders: {\n        /**\n         * Replace placeholders with proper tokens after tokenizing.\n         *\n         * @param {object} env The environment of the `after-tokenize` hook.\n         * @param {string} language The language id.\n         */\n        value: function(env, language) {\n          if (env.language !== language || !env.tokenStack) {\n            return\n          } // Switch the grammar back\n          env.grammar = Prism.languages[language]\n          var j = 0\n          var keys = Object.keys(env.tokenStack)\n          function walkTokens(tokens) {\n            for (var i = 0; i < tokens.length; i++) {\n              // all placeholders are replaced already\n              if (j >= keys.length) {\n                break\n              }\n              var token = tokens[i]\n              if (\n                typeof token === 'string' ||\n                (token.content && typeof token.content === 'string')\n              ) {\n                var k = keys[j]\n                var t = env.tokenStack[k]\n                var s = typeof token === 'string' ? token : token.content\n                var placeholder = getPlaceholder(language, k)\n                var index = s.indexOf(placeholder)\n                if (index > -1) {\n                  ++j\n                  var before = s.substring(0, index)\n                  var middle = new Prism.Token(\n                    language,\n                    Prism.tokenize(t, env.grammar),\n                    'language-' + language,\n                    t\n                  )\n                  var after = s.substring(index + placeholder.length)\n                  var replacement = []\n                  if (before) {\n                    replacement.push.apply(replacement, walkTokens([before]))\n                  }\n                  replacement.push(middle)\n                  if (after) {\n                    replacement.push.apply(replacement, walkTokens([after]))\n                  }\n                  if (typeof token === 'string') {\n                    tokens.splice.apply(tokens, [i, 1].concat(replacement))\n                  } else {\n                    token.content = replacement\n                  }\n                }\n              } else if (\n                token.content\n                /* && typeof token.content !== 'string' */\n              ) {\n                walkTokens(token.content)\n              }\n            }\n            return tokens\n          }\n          walkTokens(env.tokens)\n        }\n      }\n    })\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = ruby\nruby.displayName = 'ruby'\nruby.aliases = ['rb']\nfunction ruby(Prism) {\n  /**\n   * Original by Samuel Flores\n   *\n   * Adds the following new token classes:\n   *      constant, builtin, variable, symbol, regex\n   */\n  ;(function(Prism) {\n    Prism.languages.ruby = Prism.languages.extend('clike', {\n      comment: [\n        /#.*/,\n        {\n          pattern: /^=begin\\s[\\s\\S]*?^=end/m,\n          greedy: true\n        }\n      ],\n      keyword: /\\b(?:alias|and|BEGIN|begin|break|case|class|def|define_method|defined|do|each|else|elsif|END|end|ensure|false|for|if|in|module|new|next|nil|not|or|protected|private|public|raise|redo|require|rescue|retry|return|self|super|then|throw|true|undef|unless|until|when|while|yield)\\b/\n    })\n    var interpolation = {\n      pattern: /#\\{[^}]+\\}/,\n      inside: {\n        delimiter: {\n          pattern: /^#\\{|\\}$/,\n          alias: 'tag'\n        },\n        rest: Prism.languages.ruby\n      }\n    }\n    delete Prism.languages.ruby.function\n    Prism.languages.insertBefore('ruby', 'keyword', {\n      regex: [\n        {\n          pattern: /%r([^a-zA-Z0-9\\s{(\\[<])(?:(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1[gim]{0,3}/,\n          greedy: true,\n          inside: {\n            interpolation: interpolation\n          }\n        },\n        {\n          pattern: /%r\\((?:[^()\\\\]|\\\\[\\s\\S])*\\)[gim]{0,3}/,\n          greedy: true,\n          inside: {\n            interpolation: interpolation\n          }\n        },\n        {\n          // Here we need to specifically allow interpolation\n          pattern: /%r\\{(?:[^#{}\\\\]|#(?:\\{[^}]+\\})?|\\\\[\\s\\S])*\\}[gim]{0,3}/,\n          greedy: true,\n          inside: {\n            interpolation: interpolation\n          }\n        },\n        {\n          pattern: /%r\\[(?:[^\\[\\]\\\\]|\\\\[\\s\\S])*\\][gim]{0,3}/,\n          greedy: true,\n          inside: {\n            interpolation: interpolation\n          }\n        },\n        {\n          pattern: /%r<(?:[^<>\\\\]|\\\\[\\s\\S])*>[gim]{0,3}/,\n          greedy: true,\n          inside: {\n            interpolation: interpolation\n          }\n        },\n        {\n          pattern: /(^|[^/])\\/(?!\\/)(\\[.+?]|\\\\.|[^/\\\\\\r\\n])+\\/[gim]{0,3}(?=\\s*($|[\\r\\n,.;})]))/,\n          lookbehind: true,\n          greedy: true\n        }\n      ],\n      variable: /[@$]+[a-zA-Z_]\\w*(?:[?!]|\\b)/,\n      symbol: {\n        pattern: /(^|[^:]):[a-zA-Z_]\\w*(?:[?!]|\\b)/,\n        lookbehind: true\n      },\n      'method-definition': {\n        pattern: /(\\bdef\\s+)[\\w.]+/,\n        lookbehind: true,\n        inside: {\n          function: /\\w+$/,\n          rest: Prism.languages.ruby\n        }\n      }\n    })\n    Prism.languages.insertBefore('ruby', 'number', {\n      builtin: /\\b(?:Array|Bignum|Binding|Class|Continuation|Dir|Exception|FalseClass|File|Stat|Fixnum|Float|Hash|Integer|IO|MatchData|Method|Module|NilClass|Numeric|Object|Proc|Range|Regexp|String|Struct|TMS|Symbol|ThreadGroup|Thread|Time|TrueClass)\\b/,\n      constant: /\\b[A-Z]\\w*(?:[?!]|\\b)/\n    })\n    Prism.languages.ruby.string = [\n      {\n        pattern: /%[qQiIwWxs]?([^a-zA-Z0-9\\s{(\\[<])(?:(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1/,\n        greedy: true,\n        inside: {\n          interpolation: interpolation\n        }\n      },\n      {\n        pattern: /%[qQiIwWxs]?\\((?:[^()\\\\]|\\\\[\\s\\S])*\\)/,\n        greedy: true,\n        inside: {\n          interpolation: interpolation\n        }\n      },\n      {\n        // Here we need to specifically allow interpolation\n        pattern: /%[qQiIwWxs]?\\{(?:[^#{}\\\\]|#(?:\\{[^}]+\\})?|\\\\[\\s\\S])*\\}/,\n        greedy: true,\n        inside: {\n          interpolation: interpolation\n        }\n      },\n      {\n        pattern: /%[qQiIwWxs]?\\[(?:[^\\[\\]\\\\]|\\\\[\\s\\S])*\\]/,\n        greedy: true,\n        inside: {\n          interpolation: interpolation\n        }\n      },\n      {\n        pattern: /%[qQiIwWxs]?<(?:[^<>\\\\]|\\\\[\\s\\S])*>/,\n        greedy: true,\n        inside: {\n          interpolation: interpolation\n        }\n      },\n      {\n        pattern: /(\"|')(?:#\\{[^}]+\\}|\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n        greedy: true,\n        inside: {\n          interpolation: interpolation\n        }\n      }\n    ]\n    Prism.languages.rb = Prism.languages.ruby\n  })(Prism)\n}\n","'use strict'\nvar refractorMarkupTemplating = require('./markup-templating.js')\nvar refractorRuby = require('./ruby.js')\nmodule.exports = erb\nerb.displayName = 'erb'\nerb.aliases = []\nfunction erb(Prism) {\n  Prism.register(refractorMarkupTemplating)\n  Prism.register(refractorRuby)\n  ;(function(Prism) {\n    Prism.languages.erb = Prism.languages.extend('ruby', {})\n    Prism.languages.insertBefore('erb', 'comment', {\n      delimiter: {\n        pattern: /^<%=?|%>$/,\n        alias: 'punctuation'\n      }\n    })\n    Prism.hooks.add('before-tokenize', function(env) {\n      var erbPattern = /<%=?(?:[^\\r\\n]|[\\r\\n](?!=begin)|[\\r\\n]=begin\\s[\\s\\S]*?^=end)+?%>/gm\n      Prism.languages['markup-templating'].buildPlaceholders(\n        env,\n        'erb',\n        erbPattern\n      )\n    })\n    Prism.hooks.add('after-tokenize', function(env) {\n      Prism.languages['markup-templating'].tokenizePlaceholders(env, 'erb')\n    })\n  })(Prism)\n}\n"]}}