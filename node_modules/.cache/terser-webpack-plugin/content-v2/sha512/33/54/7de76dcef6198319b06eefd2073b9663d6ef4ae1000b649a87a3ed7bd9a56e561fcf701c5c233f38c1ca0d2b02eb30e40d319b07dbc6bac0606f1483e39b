{"code":"(this[\"webpackJsonpcs-central\"]=this[\"webpackJsonpcs-central\"]||[]).push([[13],{504:function(e,t,n){\"use strict\";function i(e){e.languages.autoit={comment:[/;.*/,{pattern:/(^\\s*)#(?:comments-start|cs)[\\s\\S]*?^\\s*#(?:comments-end|ce)/m,lookbehind:!0}],url:{pattern:/(^\\s*#include\\s+)(?:<[^\\r\\n>]+>|\"[^\\r\\n\"]+\")/m,lookbehind:!0},string:{pattern:/([\"'])(?:\\1\\1|(?!\\1)[^\\r\\n])*\\1/,greedy:!0,inside:{variable:/([%$@])\\w+\\1/}},directive:{pattern:/(^\\s*)#\\w+/m,lookbehind:!0,alias:\"keyword\"},function:/\\b\\w+(?=\\()/,variable:/[$@]\\w+/,keyword:/\\b(?:Case|Const|Continue(?:Case|Loop)|Default|Dim|Do|Else(?:If)?|End(?:Func|If|Select|Switch|With)|Enum|Exit(?:Loop)?|For|Func|Global|If|In|Local|Next|Null|ReDim|Select|Static|Step|Switch|Then|To|Until|Volatile|WEnd|While|With)\\b/i,number:/\\b(?:0x[\\da-f]+|\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?)\\b/i,boolean:/\\b(?:True|False)\\b/i,operator:/<[=>]?|[-+*\\/=&>]=?|[?^]|\\b(?:And|Or|Not)\\b/i,punctuation:/[\\[\\]().,:]/}}e.exports=i,i.displayName=\"autoit\",i.aliases=[]}}]);","name":"static/js/react-syntax-highlighter_languages_refractor_autoit.cb6a7f92.chunk.js","map":{"version":3,"sources":["static/js/react-syntax-highlighter_languages_refractor_autoit.cb6a7f92.chunk.js"],"names":["this","push","504","module","exports","__webpack_require__","autoit","Prism","languages","comment","pattern","lookbehind","url","string","greedy","inside","variable","directive","alias","function","keyword","number","boolean","operator","punctuation","displayName","aliases"],"mappings":"CAACA,KAAK,0BAA4BA,KAAK,2BAA6B,IAAIC,KAAK,CAAC,CAAC,IAAI,CAE7EC,IACA,SAAUC,EAAQC,EAASC,GAEjC,aAOA,SAASC,EAAOC,GACdA,EAAMC,UAAUF,OAAS,CACvBG,QAAS,CAAC,MAAO,CAEfC,QAAS,gEACTC,YAAY,IAEdC,IAAK,CACHF,QAAS,gDACTC,YAAY,GAEdE,OAAQ,CACNH,QAAS,kCACTI,QAAQ,EACRC,OAAQ,CACNC,SAAU,iBAGdC,UAAW,CACTP,QAAS,cACTC,YAAY,EACZO,MAAO,WAETC,SAAU,cAEVH,SAAU,UACVI,QAAS,yOACTC,OAAQ,kDACRC,QAAS,sBACTC,SAAU,+CACVC,YAAa,eAlCjBrB,EAAOC,QAAUE,EACjBA,EAAOmB,YAAc,SACrBnB,EAAOoB,QAAU"},"input":"(this[\"webpackJsonpcs-central\"] = this[\"webpackJsonpcs-central\"] || []).push([[13],{\n\n/***/ 504:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nmodule.exports = autoit;\nautoit.displayName = 'autoit';\nautoit.aliases = [];\n\nfunction autoit(Prism) {\n  Prism.languages.autoit = {\n    comment: [/;.*/, {\n      // The multi-line comments delimiters can actually be commented out with \";\"\n      pattern: /(^\\s*)#(?:comments-start|cs)[\\s\\S]*?^\\s*#(?:comments-end|ce)/m,\n      lookbehind: true\n    }],\n    url: {\n      pattern: /(^\\s*#include\\s+)(?:<[^\\r\\n>]+>|\"[^\\r\\n\"]+\")/m,\n      lookbehind: true\n    },\n    string: {\n      pattern: /([\"'])(?:\\1\\1|(?!\\1)[^\\r\\n])*\\1/,\n      greedy: true,\n      inside: {\n        variable: /([%$@])\\w+\\1/\n      }\n    },\n    directive: {\n      pattern: /(^\\s*)#\\w+/m,\n      lookbehind: true,\n      alias: 'keyword'\n    },\n    function: /\\b\\w+(?=\\()/,\n    // Variables and macros\n    variable: /[$@]\\w+/,\n    keyword: /\\b(?:Case|Const|Continue(?:Case|Loop)|Default|Dim|Do|Else(?:If)?|End(?:Func|If|Select|Switch|With)|Enum|Exit(?:Loop)?|For|Func|Global|If|In|Local|Next|Null|ReDim|Select|Static|Step|Switch|Then|To|Until|Volatile|WEnd|While|With)\\b/i,\n    number: /\\b(?:0x[\\da-f]+|\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?)\\b/i,\n    boolean: /\\b(?:True|False)\\b/i,\n    operator: /<[=>]?|[-+*\\/=&>]=?|[?^]|\\b(?:And|Or|Not)\\b/i,\n    punctuation: /[\\[\\]().,:]/\n  };\n}\n\n/***/ })\n\n}]);","inputSourceMap":{"version":3,"sources":["/Users/destul/Desktop/cs-central/node_modules/refractor/lang/autoit.js"],"names":["module","exports","autoit","displayName","aliases","Prism","languages","comment","pattern","lookbehind","url","string","greedy","inside","variable","directive","alias","function","keyword","number","boolean","operator","punctuation"],"mappings":";;;;;;AAAA;;AAEAA,MAAM,CAACC,OAAP,GAAiBC,MAAjB;AACAA,MAAM,CAACC,WAAP,GAAqB,QAArB;AACAD,MAAM,CAACE,OAAP,GAAiB,EAAjB;;AACA,SAASF,MAAT,CAAgBG,KAAhB,EAAuB;AACrBA,OAAK,CAACC,SAAN,CAAgBJ,MAAhB,GAAyB;AACvBK,WAAO,EAAE,CACP,KADO,EAEP;AACE;AACAC,aAAO,EAAE,+DAFX;AAGEC,gBAAU,EAAE;AAHd,KAFO,CADc;AASvBC,OAAG,EAAE;AACHF,aAAO,EAAE,+CADN;AAEHC,gBAAU,EAAE;AAFT,KATkB;AAavBE,UAAM,EAAE;AACNH,aAAO,EAAE,iCADH;AAENI,YAAM,EAAE,IAFF;AAGNC,YAAM,EAAE;AACNC,gBAAQ,EAAE;AADJ;AAHF,KAbe;AAoBvBC,aAAS,EAAE;AACTP,aAAO,EAAE,aADA;AAETC,gBAAU,EAAE,IAFH;AAGTO,WAAK,EAAE;AAHE,KApBY;AAyBvBC,YAAQ,EAAE,aAzBa;AA0BvB;AACAH,YAAQ,EAAE,SA3Ba;AA4BvBI,WAAO,EAAE,wOA5Bc;AA6BvBC,UAAM,EAAE,iDA7Be;AA8BvBC,WAAO,EAAE,qBA9Bc;AA+BvBC,YAAQ,EAAE,8CA/Ba;AAgCvBC,eAAW,EAAE;AAhCU,GAAzB;AAkCD,C","file":"x","sourcesContent":["'use strict'\n\nmodule.exports = autoit\nautoit.displayName = 'autoit'\nautoit.aliases = []\nfunction autoit(Prism) {\n  Prism.languages.autoit = {\n    comment: [\n      /;.*/,\n      {\n        // The multi-line comments delimiters can actually be commented out with \";\"\n        pattern: /(^\\s*)#(?:comments-start|cs)[\\s\\S]*?^\\s*#(?:comments-end|ce)/m,\n        lookbehind: true\n      }\n    ],\n    url: {\n      pattern: /(^\\s*#include\\s+)(?:<[^\\r\\n>]+>|\"[^\\r\\n\"]+\")/m,\n      lookbehind: true\n    },\n    string: {\n      pattern: /([\"'])(?:\\1\\1|(?!\\1)[^\\r\\n])*\\1/,\n      greedy: true,\n      inside: {\n        variable: /([%$@])\\w+\\1/\n      }\n    },\n    directive: {\n      pattern: /(^\\s*)#\\w+/m,\n      lookbehind: true,\n      alias: 'keyword'\n    },\n    function: /\\b\\w+(?=\\()/,\n    // Variables and macros\n    variable: /[$@]\\w+/,\n    keyword: /\\b(?:Case|Const|Continue(?:Case|Loop)|Default|Dim|Do|Else(?:If)?|End(?:Func|If|Select|Switch|With)|Enum|Exit(?:Loop)?|For|Func|Global|If|In|Local|Next|Null|ReDim|Select|Static|Step|Switch|Then|To|Until|Volatile|WEnd|While|With)\\b/i,\n    number: /\\b(?:0x[\\da-f]+|\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?)\\b/i,\n    boolean: /\\b(?:True|False)\\b/i,\n    operator: /<[=>]?|[-+*\\/=&>]=?|[?^]|\\b(?:And|Or|Not)\\b/i,\n    punctuation: /[\\[\\]().,:]/\n  }\n}\n"]}}