{"code":"(this[\"webpackJsonpcs-central\"]=this[\"webpackJsonpcs-central\"]||[]).push([[115],{595:function(e,n,a){\"use strict\";function t(e){e.languages.reason=e.languages.extend(\"clike\",{comment:{pattern:/(^|[^\\\\])\\/\\*[\\s\\S]*?\\*\\//,lookbehind:!0},string:{pattern:/\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\r\\n\"])*\"/,greedy:!0},\"class-name\":/\\b[A-Z]\\w*/,keyword:/\\b(?:and|as|assert|begin|class|constraint|do|done|downto|else|end|exception|external|for|fun|function|functor|if|in|include|inherit|initializer|lazy|let|method|module|mutable|new|nonrec|object|of|open|or|private|rec|sig|struct|switch|then|to|try|type|val|virtual|when|while|with)\\b/,operator:/\\.{3}|:[:=]|\\|>|->|=(?:==?|>)?|<=?|>=?|[|^?'#!~`]|[+\\-*\\/]\\.?|\\b(?:mod|land|lor|lxor|lsl|lsr|asr)\\b/}),e.languages.insertBefore(\"reason\",\"class-name\",{character:{pattern:/'(?:\\\\x[\\da-f]{2}|\\\\o[0-3][0-7][0-7]|\\\\\\d{3}|\\\\.|[^'\\\\\\r\\n])'/,alias:\"string\"},constructor:{pattern:/\\b[A-Z]\\w*\\b(?!\\s*\\.)/,alias:\"variable\"},label:{pattern:/\\b[a-z]\\w*(?=::)/,alias:\"symbol\"}}),delete e.languages.reason.function}e.exports=t,t.displayName=\"reason\",t.aliases=[]}}]);","name":"static/js/react-syntax-highlighter_languages_refractor_reason.342aaf6d.chunk.js","map":{"version":3,"sources":["static/js/react-syntax-highlighter_languages_refractor_reason.342aaf6d.chunk.js"],"names":["this","push","595","module","exports","__webpack_require__","reason","Prism","languages","extend","comment","pattern","lookbehind","string","greedy","class-name","keyword","operator","insertBefore","character","alias","constructor","label","function","displayName","aliases"],"mappings":"CAACA,KAAK,0BAA4BA,KAAK,2BAA6B,IAAIC,KAAK,CAAC,CAAC,KAAK,CAE9EC,IACA,SAAUC,EAAQC,EAASC,GAEjC,aAOA,SAASC,EAAOC,GACdA,EAAMC,UAAUF,OAASC,EAAMC,UAAUC,OAAO,QAAS,CACvDC,QAAS,CACPC,QAAS,4BACTC,YAAY,GAEdC,OAAQ,CACNF,QAAS,sCACTG,QAAQ,GAGVC,aAAc,aACdC,QAAS,4RACTC,SAAU,wGAEZV,EAAMC,UAAUU,aAAa,SAAU,aAAc,CACnDC,UAAW,CACTR,QAAS,gEACTS,MAAO,UAETC,YAAa,CAEXV,QAAS,wBACTS,MAAO,YAETE,MAAO,CACLX,QAAS,mBACTS,MAAO,mBAIJb,EAAMC,UAAUF,OAAOiB,SAnChCpB,EAAOC,QAAUE,EACjBA,EAAOkB,YAAc,SACrBlB,EAAOmB,QAAU"},"input":"(this[\"webpackJsonpcs-central\"] = this[\"webpackJsonpcs-central\"] || []).push([[115],{\n\n/***/ 595:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nmodule.exports = reason;\nreason.displayName = 'reason';\nreason.aliases = [];\n\nfunction reason(Prism) {\n  Prism.languages.reason = Prism.languages.extend('clike', {\n    comment: {\n      pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?\\*\\//,\n      lookbehind: true\n    },\n    string: {\n      pattern: /\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\r\\n\"])*\"/,\n      greedy: true\n    },\n    // 'class-name' must be matched *after* 'constructor' defined below\n    'class-name': /\\b[A-Z]\\w*/,\n    keyword: /\\b(?:and|as|assert|begin|class|constraint|do|done|downto|else|end|exception|external|for|fun|function|functor|if|in|include|inherit|initializer|lazy|let|method|module|mutable|new|nonrec|object|of|open|or|private|rec|sig|struct|switch|then|to|try|type|val|virtual|when|while|with)\\b/,\n    operator: /\\.{3}|:[:=]|\\|>|->|=(?:==?|>)?|<=?|>=?|[|^?'#!~`]|[+\\-*\\/]\\.?|\\b(?:mod|land|lor|lxor|lsl|lsr|asr)\\b/\n  });\n  Prism.languages.insertBefore('reason', 'class-name', {\n    character: {\n      pattern: /'(?:\\\\x[\\da-f]{2}|\\\\o[0-3][0-7][0-7]|\\\\\\d{3}|\\\\.|[^'\\\\\\r\\n])'/,\n      alias: 'string'\n    },\n    constructor: {\n      // Negative look-ahead prevents from matching things like String.capitalize\n      pattern: /\\b[A-Z]\\w*\\b(?!\\s*\\.)/,\n      alias: 'variable'\n    },\n    label: {\n      pattern: /\\b[a-z]\\w*(?=::)/,\n      alias: 'symbol'\n    }\n  }); // We can't match functions property, so let's not even try.\n\n  delete Prism.languages.reason.function;\n}\n\n/***/ })\n\n}]);","inputSourceMap":{"version":3,"sources":["/Users/destul/Desktop/cs-central/node_modules/refractor/lang/reason.js"],"names":["module","exports","reason","displayName","aliases","Prism","languages","extend","comment","pattern","lookbehind","string","greedy","keyword","operator","insertBefore","character","alias","constructor","label","function"],"mappings":";;;;;;AAAA;;AAEAA,MAAM,CAACC,OAAP,GAAiBC,MAAjB;AACAA,MAAM,CAACC,WAAP,GAAqB,QAArB;AACAD,MAAM,CAACE,OAAP,GAAiB,EAAjB;;AACA,SAASF,MAAT,CAAgBG,KAAhB,EAAuB;AACrBA,OAAK,CAACC,SAAN,CAAgBJ,MAAhB,GAAyBG,KAAK,CAACC,SAAN,CAAgBC,MAAhB,CAAuB,OAAvB,EAAgC;AACvDC,WAAO,EAAE;AACPC,aAAO,EAAE,2BADF;AAEPC,gBAAU,EAAE;AAFL,KAD8C;AAKvDC,UAAM,EAAE;AACNF,aAAO,EAAE,qCADH;AAENG,YAAM,EAAE;AAFF,KAL+C;AASvD;AACA,kBAAc,YAVyC;AAWvDC,WAAO,EAAE,2RAX8C;AAYvDC,YAAQ,EAAE;AAZ6C,GAAhC,CAAzB;AAcAT,OAAK,CAACC,SAAN,CAAgBS,YAAhB,CAA6B,QAA7B,EAAuC,YAAvC,EAAqD;AACnDC,aAAS,EAAE;AACTP,aAAO,EAAE,+DADA;AAETQ,WAAK,EAAE;AAFE,KADwC;AAKnDC,eAAW,EAAE;AACX;AACAT,aAAO,EAAE,uBAFE;AAGXQ,WAAK,EAAE;AAHI,KALsC;AAUnDE,SAAK,EAAE;AACLV,aAAO,EAAE,kBADJ;AAELQ,WAAK,EAAE;AAFF;AAV4C,GAArD,EAfqB,CA6BlB;;AACH,SAAOZ,KAAK,CAACC,SAAN,CAAgBJ,MAAhB,CAAuBkB,QAA9B;AACD,C","file":"x","sourcesContent":["'use strict'\n\nmodule.exports = reason\nreason.displayName = 'reason'\nreason.aliases = []\nfunction reason(Prism) {\n  Prism.languages.reason = Prism.languages.extend('clike', {\n    comment: {\n      pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?\\*\\//,\n      lookbehind: true\n    },\n    string: {\n      pattern: /\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\r\\n\"])*\"/,\n      greedy: true\n    },\n    // 'class-name' must be matched *after* 'constructor' defined below\n    'class-name': /\\b[A-Z]\\w*/,\n    keyword: /\\b(?:and|as|assert|begin|class|constraint|do|done|downto|else|end|exception|external|for|fun|function|functor|if|in|include|inherit|initializer|lazy|let|method|module|mutable|new|nonrec|object|of|open|or|private|rec|sig|struct|switch|then|to|try|type|val|virtual|when|while|with)\\b/,\n    operator: /\\.{3}|:[:=]|\\|>|->|=(?:==?|>)?|<=?|>=?|[|^?'#!~`]|[+\\-*\\/]\\.?|\\b(?:mod|land|lor|lxor|lsl|lsr|asr)\\b/\n  })\n  Prism.languages.insertBefore('reason', 'class-name', {\n    character: {\n      pattern: /'(?:\\\\x[\\da-f]{2}|\\\\o[0-3][0-7][0-7]|\\\\\\d{3}|\\\\.|[^'\\\\\\r\\n])'/,\n      alias: 'string'\n    },\n    constructor: {\n      // Negative look-ahead prevents from matching things like String.capitalize\n      pattern: /\\b[A-Z]\\w*\\b(?!\\s*\\.)/,\n      alias: 'variable'\n    },\n    label: {\n      pattern: /\\b[a-z]\\w*(?=::)/,\n      alias: 'symbol'\n    }\n  }) // We can't match functions property, so let's not even try.\n  delete Prism.languages.reason.function\n}\n"]}}