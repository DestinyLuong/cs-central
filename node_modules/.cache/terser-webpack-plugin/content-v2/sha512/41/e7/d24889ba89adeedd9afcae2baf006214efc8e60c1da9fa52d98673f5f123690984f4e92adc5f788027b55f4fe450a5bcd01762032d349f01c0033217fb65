{"code":"(this[\"webpackJsonpcs-central\"]=this[\"webpackJsonpcs-central\"]||[]).push([[98],{579:function(e,a,t){\"use strict\";function r(e){e.languages.pascal={comment:[/\\(\\*[\\s\\S]+?\\*\\)/,/\\{[\\s\\S]+?\\}/,/\\/\\/.*/],string:{pattern:/(?:'(?:''|[^'\\r\\n])*'|#[&$%]?[a-f\\d]+)+|\\^[a-z]/i,greedy:!0},keyword:[{pattern:/(^|[^&])\\b(?:absolute|array|asm|begin|case|const|constructor|destructor|do|downto|else|end|file|for|function|goto|if|implementation|inherited|inline|interface|label|nil|object|of|operator|packed|procedure|program|record|reintroduce|repeat|self|set|string|then|to|type|unit|until|uses|var|while|with)\\b/i,lookbehind:!0},{pattern:/(^|[^&])\\b(?:dispose|exit|false|new|true)\\b/i,lookbehind:!0},{pattern:/(^|[^&])\\b(?:class|dispinterface|except|exports|finalization|finally|initialization|inline|library|on|out|packed|property|raise|resourcestring|threadvar|try)\\b/i,lookbehind:!0},{pattern:/(^|[^&])\\b(?:absolute|abstract|alias|assembler|bitpacked|break|cdecl|continue|cppdecl|cvar|default|deprecated|dynamic|enumerator|experimental|export|external|far|far16|forward|generic|helper|implements|index|interrupt|iochecks|local|message|name|near|nodefault|noreturn|nostackframe|oldfpccall|otherwise|overload|override|pascal|platform|private|protected|public|published|read|register|reintroduce|result|safecall|saveregisters|softfloat|specialize|static|stdcall|stored|strict|unaligned|unimplemented|varargs|virtual|write)\\b/i,lookbehind:!0}],number:[/(?:[&%]\\d+|\\$[a-f\\d]+)/i,/\\b\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?/i],operator:[/\\.\\.|\\*\\*|:=|<[<=>]?|>[>=]?|[+\\-*\\/]=?|[@^=]/i,{pattern:/(^|[^&])\\b(?:and|as|div|exclude|in|include|is|mod|not|or|shl|shr|xor)\\b/,lookbehind:!0}],punctuation:/\\(\\.|\\.\\)|[()\\[\\]:;,.]/},e.languages.objectpascal=e.languages.pascal}e.exports=r,r.displayName=\"pascal\",r.aliases=[\"objectpascal\"]}}]);","name":"static/js/react-syntax-highlighter_languages_refractor_pascal.a065c971.chunk.js","map":{"version":3,"sources":["static/js/react-syntax-highlighter_languages_refractor_pascal.a065c971.chunk.js"],"names":["this","push","579","module","exports","__webpack_require__","pascal","Prism","languages","comment","string","pattern","greedy","keyword","lookbehind","number","operator","punctuation","objectpascal","displayName","aliases"],"mappings":"CAACA,KAAK,0BAA4BA,KAAK,2BAA6B,IAAIC,KAAK,CAAC,CAAC,IAAI,CAE7EC,IACA,SAAUC,EAAQC,EAASC,GAEjC,aAOA,SAASC,EAAOC,GAMdA,EAAMC,UAAUF,OAAS,CACvBG,QAAS,CAAC,mBAAoB,eAAgB,UAC9CC,OAAQ,CACNC,QAAS,mDACTC,QAAQ,GAEVC,QAAS,CAAC,CAERF,QAAS,iTACTG,YAAY,GACX,CAEDH,QAAS,+CACTG,YAAY,GACX,CAEDH,QAAS,mKACTG,YAAY,GACX,CAEDH,QAAS,mhBACTG,YAAY,IAEdC,OAAQ,CACR,0BACA,kCACAC,SAAU,CAAC,gDAAiD,CAC1DL,QAAS,0EACTG,YAAY,IAEdG,YAAa,0BAEfV,EAAMC,UAAUU,aAAeX,EAAMC,UAAUF,OA1CjDH,EAAOC,QAAUE,EACjBA,EAAOa,YAAc,SACrBb,EAAOc,QAAU,CAAC"},"input":"(this[\"webpackJsonpcs-central\"] = this[\"webpackJsonpcs-central\"] || []).push([[98],{\n\n/***/ 579:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nmodule.exports = pascal;\npascal.displayName = 'pascal';\npascal.aliases = ['objectpascal'];\n\nfunction pascal(Prism) {\n  // Based on Free Pascal\n\n  /* TODO\n  Support inline asm ?\n  */\n  Prism.languages.pascal = {\n    comment: [/\\(\\*[\\s\\S]+?\\*\\)/, /\\{[\\s\\S]+?\\}/, /\\/\\/.*/],\n    string: {\n      pattern: /(?:'(?:''|[^'\\r\\n])*'|#[&$%]?[a-f\\d]+)+|\\^[a-z]/i,\n      greedy: true\n    },\n    keyword: [{\n      // Turbo Pascal\n      pattern: /(^|[^&])\\b(?:absolute|array|asm|begin|case|const|constructor|destructor|do|downto|else|end|file|for|function|goto|if|implementation|inherited|inline|interface|label|nil|object|of|operator|packed|procedure|program|record|reintroduce|repeat|self|set|string|then|to|type|unit|until|uses|var|while|with)\\b/i,\n      lookbehind: true\n    }, {\n      // Free Pascal\n      pattern: /(^|[^&])\\b(?:dispose|exit|false|new|true)\\b/i,\n      lookbehind: true\n    }, {\n      // Object Pascal\n      pattern: /(^|[^&])\\b(?:class|dispinterface|except|exports|finalization|finally|initialization|inline|library|on|out|packed|property|raise|resourcestring|threadvar|try)\\b/i,\n      lookbehind: true\n    }, {\n      // Modifiers\n      pattern: /(^|[^&])\\b(?:absolute|abstract|alias|assembler|bitpacked|break|cdecl|continue|cppdecl|cvar|default|deprecated|dynamic|enumerator|experimental|export|external|far|far16|forward|generic|helper|implements|index|interrupt|iochecks|local|message|name|near|nodefault|noreturn|nostackframe|oldfpccall|otherwise|overload|override|pascal|platform|private|protected|public|published|read|register|reintroduce|result|safecall|saveregisters|softfloat|specialize|static|stdcall|stored|strict|unaligned|unimplemented|varargs|virtual|write)\\b/i,\n      lookbehind: true\n    }],\n    number: [// Hexadecimal, octal and binary\n    /(?:[&%]\\d+|\\$[a-f\\d]+)/i, // Decimal\n    /\\b\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?/i],\n    operator: [/\\.\\.|\\*\\*|:=|<[<=>]?|>[>=]?|[+\\-*\\/]=?|[@^=]/i, {\n      pattern: /(^|[^&])\\b(?:and|as|div|exclude|in|include|is|mod|not|or|shl|shr|xor)\\b/,\n      lookbehind: true\n    }],\n    punctuation: /\\(\\.|\\.\\)|[()\\[\\]:;,.]/\n  };\n  Prism.languages.objectpascal = Prism.languages.pascal;\n}\n\n/***/ })\n\n}]);","inputSourceMap":{"version":3,"sources":["/Users/destul/Desktop/cs-central/node_modules/refractor/lang/pascal.js"],"names":["module","exports","pascal","displayName","aliases","Prism","languages","comment","string","pattern","greedy","keyword","lookbehind","number","operator","punctuation","objectpascal"],"mappings":";;;;;;AAAA;;AAEAA,MAAM,CAACC,OAAP,GAAiBC,MAAjB;AACAA,MAAM,CAACC,WAAP,GAAqB,QAArB;AACAD,MAAM,CAACE,OAAP,GAAiB,CAAC,cAAD,CAAjB;;AACA,SAASF,MAAT,CAAgBG,KAAhB,EAAuB;AACrB;;AACA;AACF;AACA;AACEA,OAAK,CAACC,SAAN,CAAgBJ,MAAhB,GAAyB;AACvBK,WAAO,EAAE,CAAC,kBAAD,EAAqB,cAArB,EAAqC,QAArC,CADc;AAEvBC,UAAM,EAAE;AACNC,aAAO,EAAE,kDADH;AAENC,YAAM,EAAE;AAFF,KAFe;AAMvBC,WAAO,EAAE,CACP;AACE;AACAF,aAAO,EAAE,gTAFX;AAGEG,gBAAU,EAAE;AAHd,KADO,EAMP;AACE;AACAH,aAAO,EAAE,8CAFX;AAGEG,gBAAU,EAAE;AAHd,KANO,EAWP;AACE;AACAH,aAAO,EAAE,kKAFX;AAGEG,gBAAU,EAAE;AAHd,KAXO,EAgBP;AACE;AACAH,aAAO,EAAE,khBAFX;AAGEG,gBAAU,EAAE;AAHd,KAhBO,CANc;AA4BvBC,UAAM,EAAE,CACN;AACA,6BAFM,EAEqB;AAC3B,oCAHM,CA5Be;AAiCvBC,YAAQ,EAAE,CACR,+CADQ,EAER;AACEL,aAAO,EAAE,yEADX;AAEEG,gBAAU,EAAE;AAFd,KAFQ,CAjCa;AAwCvBG,eAAW,EAAE;AAxCU,GAAzB;AA0CAV,OAAK,CAACC,SAAN,CAAgBU,YAAhB,GAA+BX,KAAK,CAACC,SAAN,CAAgBJ,MAA/C;AACD,C","file":"x","sourcesContent":["'use strict'\n\nmodule.exports = pascal\npascal.displayName = 'pascal'\npascal.aliases = ['objectpascal']\nfunction pascal(Prism) {\n  // Based on Free Pascal\n  /* TODO\nSupport inline asm ?\n*/\n  Prism.languages.pascal = {\n    comment: [/\\(\\*[\\s\\S]+?\\*\\)/, /\\{[\\s\\S]+?\\}/, /\\/\\/.*/],\n    string: {\n      pattern: /(?:'(?:''|[^'\\r\\n])*'|#[&$%]?[a-f\\d]+)+|\\^[a-z]/i,\n      greedy: true\n    },\n    keyword: [\n      {\n        // Turbo Pascal\n        pattern: /(^|[^&])\\b(?:absolute|array|asm|begin|case|const|constructor|destructor|do|downto|else|end|file|for|function|goto|if|implementation|inherited|inline|interface|label|nil|object|of|operator|packed|procedure|program|record|reintroduce|repeat|self|set|string|then|to|type|unit|until|uses|var|while|with)\\b/i,\n        lookbehind: true\n      },\n      {\n        // Free Pascal\n        pattern: /(^|[^&])\\b(?:dispose|exit|false|new|true)\\b/i,\n        lookbehind: true\n      },\n      {\n        // Object Pascal\n        pattern: /(^|[^&])\\b(?:class|dispinterface|except|exports|finalization|finally|initialization|inline|library|on|out|packed|property|raise|resourcestring|threadvar|try)\\b/i,\n        lookbehind: true\n      },\n      {\n        // Modifiers\n        pattern: /(^|[^&])\\b(?:absolute|abstract|alias|assembler|bitpacked|break|cdecl|continue|cppdecl|cvar|default|deprecated|dynamic|enumerator|experimental|export|external|far|far16|forward|generic|helper|implements|index|interrupt|iochecks|local|message|name|near|nodefault|noreturn|nostackframe|oldfpccall|otherwise|overload|override|pascal|platform|private|protected|public|published|read|register|reintroduce|result|safecall|saveregisters|softfloat|specialize|static|stdcall|stored|strict|unaligned|unimplemented|varargs|virtual|write)\\b/i,\n        lookbehind: true\n      }\n    ],\n    number: [\n      // Hexadecimal, octal and binary\n      /(?:[&%]\\d+|\\$[a-f\\d]+)/i, // Decimal\n      /\\b\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?/i\n    ],\n    operator: [\n      /\\.\\.|\\*\\*|:=|<[<=>]?|>[>=]?|[+\\-*\\/]=?|[@^=]/i,\n      {\n        pattern: /(^|[^&])\\b(?:and|as|div|exclude|in|include|is|mod|not|or|shl|shr|xor)\\b/,\n        lookbehind: true\n      }\n    ],\n    punctuation: /\\(\\.|\\.\\)|[()\\[\\]:;,.]/\n  }\n  Prism.languages.objectpascal = Prism.languages.pascal\n}\n"]}}