{"code":"(this[\"webpackJsonpcs-central\"]=this[\"webpackJsonpcs-central\"]||[]).push([[126],{605:function(e,s,a){\"use strict\";function t(e){e.languages.scss=e.languages.extend(\"css\",{comment:{pattern:/(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*)/,lookbehind:!0},atrule:{pattern:/@[\\w-]+(?:\\([^()]+\\)|[^(])*?(?=\\s+[{;])/,inside:{rule:/@[\\w-]+/}},url:/(?:[-a-z]+-)?url(?=\\()/i,selector:{pattern:/(?=\\S)[^@;{}()]?(?:[^@;{}()]|#\\{\\$[-\\w]+\\})+(?=\\s*\\{(?:\\}|\\s|[^}]+[:{][^}]+))/m,inside:{parent:{pattern:/&/,alias:\"important\"},placeholder:/%[-\\w]+/,variable:/\\$[-\\w]+|#\\{\\$[-\\w]+\\}/}},property:{pattern:/(?:[\\w-]|\\$[-\\w]+|#\\{\\$[-\\w]+\\})+(?=\\s*:)/,inside:{variable:/\\$[-\\w]+|#\\{\\$[-\\w]+\\}/}}}),e.languages.insertBefore(\"scss\",\"atrule\",{keyword:[/@(?:if|else(?: if)?|for|each|while|import|extend|debug|warn|mixin|include|function|return|content)/i,{pattern:/( +)(?:from|through)(?= )/,lookbehind:!0}]}),e.languages.insertBefore(\"scss\",\"important\",{variable:/\\$[-\\w]+|#\\{\\$[-\\w]+\\}/}),e.languages.insertBefore(\"scss\",\"function\",{placeholder:{pattern:/%[-\\w]+/,alias:\"selector\"},statement:{pattern:/\\B!(?:default|optional)\\b/i,alias:\"keyword\"},boolean:/\\b(?:true|false)\\b/,null:{pattern:/\\bnull\\b/,alias:\"keyword\"},operator:{pattern:/(\\s)(?:[-+*\\/%]|[=!]=|<=?|>=?|and|or|not)(?=\\s)/,lookbehind:!0}}),e.languages.scss.atrule.inside.rest=e.languages.scss}e.exports=t,t.displayName=\"scss\",t.aliases=[]}}]);","name":"static/js/react-syntax-highlighter_languages_refractor_scss.cf762be9.chunk.js","map":{"version":3,"sources":["static/js/react-syntax-highlighter_languages_refractor_scss.cf762be9.chunk.js"],"names":["this","push","605","module","exports","__webpack_require__","scss","Prism","languages","extend","comment","pattern","lookbehind","atrule","inside","rule","url","selector","parent","alias","placeholder","variable","property","insertBefore","keyword","statement","boolean","null","operator","rest","displayName","aliases"],"mappings":"CAACA,KAAK,0BAA4BA,KAAK,2BAA6B,IAAIC,KAAK,CAAC,CAAC,KAAK,CAE9EC,IACA,SAAUC,EAAQC,EAASC,GAEjC,aAOA,SAASC,EAAKC,GACZA,EAAMC,UAAUF,KAAOC,EAAMC,UAAUC,OAAO,MAAO,CACnDC,QAAS,CACPC,QAAS,uCACTC,YAAY,GAEdC,OAAQ,CACNF,QAAS,0CACTG,OAAQ,CACNC,KAAM,YAKVC,IAAK,0BAQLC,SAAU,CAERN,QAAS,iFACTG,OAAQ,CACNI,OAAQ,CACNP,QAAS,IACTQ,MAAO,aAETC,YAAa,UACbC,SAAU,2BAGdC,SAAU,CACRX,QAAS,4CACTG,OAAQ,CACNO,SAAU,6BAIhBd,EAAMC,UAAUe,aAAa,OAAQ,SAAU,CAC7CC,QAAS,CAAC,sGAAuG,CAC/Gb,QAAS,4BACTC,YAAY,MAGhBL,EAAMC,UAAUe,aAAa,OAAQ,YAAa,CAEhDF,SAAU,2BAEZd,EAAMC,UAAUe,aAAa,OAAQ,WAAY,CAC/CH,YAAa,CACXT,QAAS,UACTQ,MAAO,YAETM,UAAW,CACTd,QAAS,6BACTQ,MAAO,WAETO,QAAS,qBACTC,KAAM,CACJhB,QAAS,WACTQ,MAAO,WAETS,SAAU,CACRjB,QAAS,kDACTC,YAAY,KAGhBL,EAAMC,UAAUF,KAAa,OAAEQ,OAAOe,KAAOtB,EAAMC,UAAUF,KA1E/DH,EAAOC,QAAUE,EACjBA,EAAKwB,YAAc,OACnBxB,EAAKyB,QAAU"},"input":"(this[\"webpackJsonpcs-central\"] = this[\"webpackJsonpcs-central\"] || []).push([[126],{\n\n/***/ 605:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nmodule.exports = scss;\nscss.displayName = 'scss';\nscss.aliases = [];\n\nfunction scss(Prism) {\n  Prism.languages.scss = Prism.languages.extend('css', {\n    comment: {\n      pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*)/,\n      lookbehind: true\n    },\n    atrule: {\n      pattern: /@[\\w-]+(?:\\([^()]+\\)|[^(])*?(?=\\s+[{;])/,\n      inside: {\n        rule: /@[\\w-]+/ // See rest below\n\n      }\n    },\n    // url, compassified\n    url: /(?:[-a-z]+-)?url(?=\\()/i,\n    // CSS selector regex is not appropriate for Sass\n    // since there can be lot more things (var, @ directive, nesting..)\n    // a selector must start at the end of a property or after a brace (end of other rules or nesting)\n    // it can contain some characters that aren't used for defining rules or end of selector, & (parent selector), or interpolated variable\n    // the end of a selector is found when there is no rules in it ( {} or {\\s}) or if there is a property (because an interpolated var\n    // can \"pass\" as a selector- e.g: proper#{$erty})\n    // this one was hard to do, so please be careful if you edit this one :)\n    selector: {\n      // Initial look-ahead is used to prevent matching of blank selectors\n      pattern: /(?=\\S)[^@;{}()]?(?:[^@;{}()]|#\\{\\$[-\\w]+\\})+(?=\\s*\\{(?:\\}|\\s|[^}]+[:{][^}]+))/m,\n      inside: {\n        parent: {\n          pattern: /&/,\n          alias: 'important'\n        },\n        placeholder: /%[-\\w]+/,\n        variable: /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/\n      }\n    },\n    property: {\n      pattern: /(?:[\\w-]|\\$[-\\w]+|#\\{\\$[-\\w]+\\})+(?=\\s*:)/,\n      inside: {\n        variable: /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/\n      }\n    }\n  });\n  Prism.languages.insertBefore('scss', 'atrule', {\n    keyword: [/@(?:if|else(?: if)?|for|each|while|import|extend|debug|warn|mixin|include|function|return|content)/i, {\n      pattern: /( +)(?:from|through)(?= )/,\n      lookbehind: true\n    }]\n  });\n  Prism.languages.insertBefore('scss', 'important', {\n    // var and interpolated vars\n    variable: /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/\n  });\n  Prism.languages.insertBefore('scss', 'function', {\n    placeholder: {\n      pattern: /%[-\\w]+/,\n      alias: 'selector'\n    },\n    statement: {\n      pattern: /\\B!(?:default|optional)\\b/i,\n      alias: 'keyword'\n    },\n    boolean: /\\b(?:true|false)\\b/,\n    null: {\n      pattern: /\\bnull\\b/,\n      alias: 'keyword'\n    },\n    operator: {\n      pattern: /(\\s)(?:[-+*\\/%]|[=!]=|<=?|>=?|and|or|not)(?=\\s)/,\n      lookbehind: true\n    }\n  });\n  Prism.languages.scss['atrule'].inside.rest = Prism.languages.scss;\n}\n\n/***/ })\n\n}]);","inputSourceMap":{"version":3,"sources":["/Users/destul/Desktop/cs-central/node_modules/refractor/lang/scss.js"],"names":["module","exports","scss","displayName","aliases","Prism","languages","extend","comment","pattern","lookbehind","atrule","inside","rule","url","selector","parent","alias","placeholder","variable","property","insertBefore","keyword","statement","boolean","null","operator","rest"],"mappings":";;;;;;AAAA;;AAEAA,MAAM,CAACC,OAAP,GAAiBC,IAAjB;AACAA,IAAI,CAACC,WAAL,GAAmB,MAAnB;AACAD,IAAI,CAACE,OAAL,GAAe,EAAf;;AACA,SAASF,IAAT,CAAcG,KAAd,EAAqB;AACnBA,OAAK,CAACC,SAAN,CAAgBJ,IAAhB,GAAuBG,KAAK,CAACC,SAAN,CAAgBC,MAAhB,CAAuB,KAAvB,EAA8B;AACnDC,WAAO,EAAE;AACPC,aAAO,EAAE,sCADF;AAEPC,gBAAU,EAAE;AAFL,KAD0C;AAKnDC,UAAM,EAAE;AACNF,aAAO,EAAE,yCADH;AAENG,YAAM,EAAE;AACNC,YAAI,EAAE,SADA,CACU;;AADV;AAFF,KAL2C;AAWnD;AACAC,OAAG,EAAE,yBAZ8C;AAanD;AACA;AACA;AACA;AACA;AACA;AACA;AACAC,YAAQ,EAAE;AACR;AACAN,aAAO,EAAE,gFAFD;AAGRG,YAAM,EAAE;AACNI,cAAM,EAAE;AACNP,iBAAO,EAAE,GADH;AAENQ,eAAK,EAAE;AAFD,SADF;AAKNC,mBAAW,EAAE,SALP;AAMNC,gBAAQ,EAAE;AANJ;AAHA,KApByC;AAgCnDC,YAAQ,EAAE;AACRX,aAAO,EAAE,2CADD;AAERG,YAAM,EAAE;AACNO,gBAAQ,EAAE;AADJ;AAFA;AAhCyC,GAA9B,CAAvB;AAuCAd,OAAK,CAACC,SAAN,CAAgBe,YAAhB,CAA6B,MAA7B,EAAqC,QAArC,EAA+C;AAC7CC,WAAO,EAAE,CACP,qGADO,EAEP;AACEb,aAAO,EAAE,2BADX;AAEEC,gBAAU,EAAE;AAFd,KAFO;AADoC,GAA/C;AASAL,OAAK,CAACC,SAAN,CAAgBe,YAAhB,CAA6B,MAA7B,EAAqC,WAArC,EAAkD;AAChD;AACAF,YAAQ,EAAE;AAFsC,GAAlD;AAIAd,OAAK,CAACC,SAAN,CAAgBe,YAAhB,CAA6B,MAA7B,EAAqC,UAArC,EAAiD;AAC/CH,eAAW,EAAE;AACXT,aAAO,EAAE,SADE;AAEXQ,WAAK,EAAE;AAFI,KADkC;AAK/CM,aAAS,EAAE;AACTd,aAAO,EAAE,4BADA;AAETQ,WAAK,EAAE;AAFE,KALoC;AAS/CO,WAAO,EAAE,oBATsC;AAU/CC,QAAI,EAAE;AACJhB,aAAO,EAAE,UADL;AAEJQ,WAAK,EAAE;AAFH,KAVyC;AAc/CS,YAAQ,EAAE;AACRjB,aAAO,EAAE,iDADD;AAERC,gBAAU,EAAE;AAFJ;AAdqC,GAAjD;AAmBAL,OAAK,CAACC,SAAN,CAAgBJ,IAAhB,CAAqB,QAArB,EAA+BU,MAA/B,CAAsCe,IAAtC,GAA6CtB,KAAK,CAACC,SAAN,CAAgBJ,IAA7D;AACD,C","file":"x","sourcesContent":["'use strict'\n\nmodule.exports = scss\nscss.displayName = 'scss'\nscss.aliases = []\nfunction scss(Prism) {\n  Prism.languages.scss = Prism.languages.extend('css', {\n    comment: {\n      pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*)/,\n      lookbehind: true\n    },\n    atrule: {\n      pattern: /@[\\w-]+(?:\\([^()]+\\)|[^(])*?(?=\\s+[{;])/,\n      inside: {\n        rule: /@[\\w-]+/ // See rest below\n      }\n    },\n    // url, compassified\n    url: /(?:[-a-z]+-)?url(?=\\()/i,\n    // CSS selector regex is not appropriate for Sass\n    // since there can be lot more things (var, @ directive, nesting..)\n    // a selector must start at the end of a property or after a brace (end of other rules or nesting)\n    // it can contain some characters that aren't used for defining rules or end of selector, & (parent selector), or interpolated variable\n    // the end of a selector is found when there is no rules in it ( {} or {\\s}) or if there is a property (because an interpolated var\n    // can \"pass\" as a selector- e.g: proper#{$erty})\n    // this one was hard to do, so please be careful if you edit this one :)\n    selector: {\n      // Initial look-ahead is used to prevent matching of blank selectors\n      pattern: /(?=\\S)[^@;{}()]?(?:[^@;{}()]|#\\{\\$[-\\w]+\\})+(?=\\s*\\{(?:\\}|\\s|[^}]+[:{][^}]+))/m,\n      inside: {\n        parent: {\n          pattern: /&/,\n          alias: 'important'\n        },\n        placeholder: /%[-\\w]+/,\n        variable: /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/\n      }\n    },\n    property: {\n      pattern: /(?:[\\w-]|\\$[-\\w]+|#\\{\\$[-\\w]+\\})+(?=\\s*:)/,\n      inside: {\n        variable: /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/\n      }\n    }\n  })\n  Prism.languages.insertBefore('scss', 'atrule', {\n    keyword: [\n      /@(?:if|else(?: if)?|for|each|while|import|extend|debug|warn|mixin|include|function|return|content)/i,\n      {\n        pattern: /( +)(?:from|through)(?= )/,\n        lookbehind: true\n      }\n    ]\n  })\n  Prism.languages.insertBefore('scss', 'important', {\n    // var and interpolated vars\n    variable: /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/\n  })\n  Prism.languages.insertBefore('scss', 'function', {\n    placeholder: {\n      pattern: /%[-\\w]+/,\n      alias: 'selector'\n    },\n    statement: {\n      pattern: /\\B!(?:default|optional)\\b/i,\n      alias: 'keyword'\n    },\n    boolean: /\\b(?:true|false)\\b/,\n    null: {\n      pattern: /\\bnull\\b/,\n      alias: 'keyword'\n    },\n    operator: {\n      pattern: /(\\s)(?:[-+*\\/%]|[=!]=|<=?|>=?|and|or|not)(?=\\s)/,\n      lookbehind: true\n    }\n  })\n  Prism.languages.scss['atrule'].inside.rest = Prism.languages.scss\n}\n"]}}