{"code":"(this[\"webpackJsonpcs-central\"]=this[\"webpackJsonpcs-central\"]||[]).push([[16],{506:function(e,r,t){\"use strict\";function n(e){!function(e){var r=/%%?[~:\\w]+%?|!\\S+!/,t={pattern:/\\/[a-z?]+(?=[ :]|$):?|-[a-z]\\b|--[a-z-]+\\b/im,alias:\"attr-name\",inside:{punctuation:/:/}},n=/\"[^\"]*\"/,i=/(?:\\b|-)\\d+\\b/;e.languages.batch={comment:[/^::.*/m,{pattern:/((?:^|[&(])[ \\t]*)rem\\b(?:[^^&)\\r\\n]|\\^(?:\\r\\n|[\\s\\S]))*/im,lookbehind:!0}],label:{pattern:/^:.*/m,alias:\"property\"},command:[{pattern:/((?:^|[&(])[ \\t]*)for(?: ?\\/[a-z?](?:[ :](?:\"[^\"]*\"|\\S+))?)* \\S+ in \\([^)]+\\) do/im,lookbehind:!0,inside:{keyword:/^for\\b|\\b(?:in|do)\\b/i,string:n,parameter:t,variable:r,number:i,punctuation:/[()',]/}},{pattern:/((?:^|[&(])[ \\t]*)if(?: ?\\/[a-z?](?:[ :](?:\"[^\"]*\"|\\S+))?)* (?:not )?(?:cmdextversion \\d+|defined \\w+|errorlevel \\d+|exist \\S+|(?:\"[^\"]*\"|\\S+)?(?:==| (?:equ|neq|lss|leq|gtr|geq) )(?:\"[^\"]*\"|\\S+))/im,lookbehind:!0,inside:{keyword:/^if\\b|\\b(?:not|cmdextversion|defined|errorlevel|exist)\\b/i,string:n,parameter:t,variable:r,number:i,operator:/\\^|==|\\b(?:equ|neq|lss|leq|gtr|geq)\\b/i}},{pattern:/((?:^|[&()])[ \\t]*)else\\b/im,lookbehind:!0,inside:{keyword:/^else\\b/i}},{pattern:/((?:^|[&(])[ \\t]*)set(?: ?\\/[a-z](?:[ :](?:\"[^\"]*\"|\\S+))?)* (?:[^^&)\\r\\n]|\\^(?:\\r\\n|[\\s\\S]))*/im,lookbehind:!0,inside:{keyword:/^set\\b/i,string:n,parameter:t,variable:[r,/\\w+(?=(?:[*\\/%+\\-&^|]|<<|>>)?=)/],number:i,operator:/[*\\/%+\\-&^|]=?|<<=?|>>=?|[!~_=]/,punctuation:/[()',]/}},{pattern:/((?:^|[&(])[ \\t]*@?)\\w+\\b(?:[^^&)\\r\\n]|\\^(?:\\r\\n|[\\s\\S]))*/im,lookbehind:!0,inside:{keyword:/^\\w+\\b/i,string:n,parameter:t,label:{pattern:/(^\\s*):\\S+/m,lookbehind:!0,alias:\"property\"},variable:r,number:i,operator:/\\^/}}],operator:/[&@]/,punctuation:/[()']/}}(e)}e.exports=n,n.displayName=\"batch\",n.aliases=[]}}]);","name":"static/js/react-syntax-highlighter_languages_refractor_batch.92481ff0.chunk.js","map":{"version":3,"sources":["static/js/react-syntax-highlighter_languages_refractor_batch.92481ff0.chunk.js"],"names":["this","push","506","module","exports","__webpack_require__","batch","Prism","variable","parameter","pattern","alias","inside","punctuation","string","number","languages","comment","lookbehind","label","command","keyword","operator","displayName","aliases"],"mappings":"CAACA,KAAK,0BAA4BA,KAAK,2BAA6B,IAAIC,KAAK,CAAC,CAAC,IAAI,CAE7EC,IACA,SAAUC,EAAQC,EAASC,GAEjC,aAOA,SAASC,EAAMC,IAGb,SAAWA,GACT,IAAIC,EAAW,qBACXC,EAAY,CACdC,QAAS,+CACTC,MAAO,YACPC,OAAQ,CACNC,YAAa,MAGbC,EAAS,UACTC,EAAS,gBACbR,EAAMS,UAAUV,MAAQ,CACtBW,QAAS,CAAC,SAAU,CAClBP,QAAS,6DACTQ,YAAY,IAEdC,MAAO,CACLT,QAAS,QACTC,MAAO,YAETS,QAAS,CAAC,CAERV,QAAS,qFACTQ,YAAY,EACZN,OAAQ,CACNS,QAAS,wBACTP,OAAQA,EACRL,UAAWA,EACXD,SAAUA,EACVO,OAAQA,EACRF,YAAa,WAEd,CAEDH,QAAS,wMACTQ,YAAY,EACZN,OAAQ,CACNS,QAAS,4DACTP,OAAQA,EACRL,UAAWA,EACXD,SAAUA,EACVO,OAAQA,EACRO,SAAU,2CAEX,CAEDZ,QAAS,8BACTQ,YAAY,EACZN,OAAQ,CACNS,QAAS,aAEV,CAEDX,QAAS,kGACTQ,YAAY,EACZN,OAAQ,CACNS,QAAS,UACTP,OAAQA,EACRL,UAAWA,EACXD,SAAU,CAACA,EAAU,mCACrBO,OAAQA,EACRO,SAAU,kCACVT,YAAa,WAEd,CAEDH,QAAS,+DACTQ,YAAY,EACZN,OAAQ,CACNS,QAAS,UACTP,OAAQA,EACRL,UAAWA,EACXU,MAAO,CACLT,QAAS,cACTQ,YAAY,EACZP,MAAO,YAETH,SAAUA,EACVO,OAAQA,EACRO,SAAU,QAGdA,SAAU,OACVT,YAAa,SAnFjB,CAqFGN,GA5FLJ,EAAOC,QAAUE,EACjBA,EAAMiB,YAAc,QACpBjB,EAAMkB,QAAU"},"input":"(this[\"webpackJsonpcs-central\"] = this[\"webpackJsonpcs-central\"] || []).push([[16],{\n\n/***/ 506:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nmodule.exports = batch;\nbatch.displayName = 'batch';\nbatch.aliases = [];\n\nfunction batch(Prism) {\n  ;\n\n  (function (Prism) {\n    var variable = /%%?[~:\\w]+%?|!\\S+!/;\n    var parameter = {\n      pattern: /\\/[a-z?]+(?=[ :]|$):?|-[a-z]\\b|--[a-z-]+\\b/im,\n      alias: 'attr-name',\n      inside: {\n        punctuation: /:/\n      }\n    };\n    var string = /\"[^\"]*\"/;\n    var number = /(?:\\b|-)\\d+\\b/;\n    Prism.languages.batch = {\n      comment: [/^::.*/m, {\n        pattern: /((?:^|[&(])[ \\t]*)rem\\b(?:[^^&)\\r\\n]|\\^(?:\\r\\n|[\\s\\S]))*/im,\n        lookbehind: true\n      }],\n      label: {\n        pattern: /^:.*/m,\n        alias: 'property'\n      },\n      command: [{\n        // FOR command\n        pattern: /((?:^|[&(])[ \\t]*)for(?: ?\\/[a-z?](?:[ :](?:\"[^\"]*\"|\\S+))?)* \\S+ in \\([^)]+\\) do/im,\n        lookbehind: true,\n        inside: {\n          keyword: /^for\\b|\\b(?:in|do)\\b/i,\n          string: string,\n          parameter: parameter,\n          variable: variable,\n          number: number,\n          punctuation: /[()',]/\n        }\n      }, {\n        // IF command\n        pattern: /((?:^|[&(])[ \\t]*)if(?: ?\\/[a-z?](?:[ :](?:\"[^\"]*\"|\\S+))?)* (?:not )?(?:cmdextversion \\d+|defined \\w+|errorlevel \\d+|exist \\S+|(?:\"[^\"]*\"|\\S+)?(?:==| (?:equ|neq|lss|leq|gtr|geq) )(?:\"[^\"]*\"|\\S+))/im,\n        lookbehind: true,\n        inside: {\n          keyword: /^if\\b|\\b(?:not|cmdextversion|defined|errorlevel|exist)\\b/i,\n          string: string,\n          parameter: parameter,\n          variable: variable,\n          number: number,\n          operator: /\\^|==|\\b(?:equ|neq|lss|leq|gtr|geq)\\b/i\n        }\n      }, {\n        // ELSE command\n        pattern: /((?:^|[&()])[ \\t]*)else\\b/im,\n        lookbehind: true,\n        inside: {\n          keyword: /^else\\b/i\n        }\n      }, {\n        // SET command\n        pattern: /((?:^|[&(])[ \\t]*)set(?: ?\\/[a-z](?:[ :](?:\"[^\"]*\"|\\S+))?)* (?:[^^&)\\r\\n]|\\^(?:\\r\\n|[\\s\\S]))*/im,\n        lookbehind: true,\n        inside: {\n          keyword: /^set\\b/i,\n          string: string,\n          parameter: parameter,\n          variable: [variable, /\\w+(?=(?:[*\\/%+\\-&^|]|<<|>>)?=)/],\n          number: number,\n          operator: /[*\\/%+\\-&^|]=?|<<=?|>>=?|[!~_=]/,\n          punctuation: /[()',]/\n        }\n      }, {\n        // Other commands\n        pattern: /((?:^|[&(])[ \\t]*@?)\\w+\\b(?:[^^&)\\r\\n]|\\^(?:\\r\\n|[\\s\\S]))*/im,\n        lookbehind: true,\n        inside: {\n          keyword: /^\\w+\\b/i,\n          string: string,\n          parameter: parameter,\n          label: {\n            pattern: /(^\\s*):\\S+/m,\n            lookbehind: true,\n            alias: 'property'\n          },\n          variable: variable,\n          number: number,\n          operator: /\\^/\n        }\n      }],\n      operator: /[&@]/,\n      punctuation: /[()']/\n    };\n  })(Prism);\n}\n\n/***/ })\n\n}]);","inputSourceMap":{"version":3,"sources":["/Users/destul/Desktop/cs-central/node_modules/refractor/lang/batch.js"],"names":["module","exports","batch","displayName","aliases","Prism","variable","parameter","pattern","alias","inside","punctuation","string","number","languages","comment","lookbehind","label","command","keyword","operator"],"mappings":";;;;;;AAAA;;AAEAA,MAAM,CAACC,OAAP,GAAiBC,KAAjB;AACAA,KAAK,CAACC,WAAN,GAAoB,OAApB;AACAD,KAAK,CAACE,OAAN,GAAgB,EAAhB;;AACA,SAASF,KAAT,CAAeG,KAAf,EAAsB;AACpB;;AAAC,GAAC,UAASA,KAAT,EAAgB;AAChB,QAAIC,QAAQ,GAAG,oBAAf;AACA,QAAIC,SAAS,GAAG;AACdC,aAAO,EAAE,8CADK;AAEdC,WAAK,EAAE,WAFO;AAGdC,YAAM,EAAE;AACNC,mBAAW,EAAE;AADP;AAHM,KAAhB;AAOA,QAAIC,MAAM,GAAG,SAAb;AACA,QAAIC,MAAM,GAAG,eAAb;AACAR,SAAK,CAACS,SAAN,CAAgBZ,KAAhB,GAAwB;AACtBa,aAAO,EAAE,CACP,QADO,EAEP;AACEP,eAAO,EAAE,4DADX;AAEEQ,kBAAU,EAAE;AAFd,OAFO,CADa;AAQtBC,WAAK,EAAE;AACLT,eAAO,EAAE,OADJ;AAELC,aAAK,EAAE;AAFF,OARe;AAYtBS,aAAO,EAAE,CACP;AACE;AACAV,eAAO,EAAE,oFAFX;AAGEQ,kBAAU,EAAE,IAHd;AAIEN,cAAM,EAAE;AACNS,iBAAO,EAAE,uBADH;AAENP,gBAAM,EAAEA,MAFF;AAGNL,mBAAS,EAAEA,SAHL;AAIND,kBAAQ,EAAEA,QAJJ;AAKNO,gBAAM,EAAEA,MALF;AAMNF,qBAAW,EAAE;AANP;AAJV,OADO,EAcP;AACE;AACAH,eAAO,EAAE,uMAFX;AAGEQ,kBAAU,EAAE,IAHd;AAIEN,cAAM,EAAE;AACNS,iBAAO,EAAE,2DADH;AAENP,gBAAM,EAAEA,MAFF;AAGNL,mBAAS,EAAEA,SAHL;AAIND,kBAAQ,EAAEA,QAJJ;AAKNO,gBAAM,EAAEA,MALF;AAMNO,kBAAQ,EAAE;AANJ;AAJV,OAdO,EA2BP;AACE;AACAZ,eAAO,EAAE,6BAFX;AAGEQ,kBAAU,EAAE,IAHd;AAIEN,cAAM,EAAE;AACNS,iBAAO,EAAE;AADH;AAJV,OA3BO,EAmCP;AACE;AACAX,eAAO,EAAE,iGAFX;AAGEQ,kBAAU,EAAE,IAHd;AAIEN,cAAM,EAAE;AACNS,iBAAO,EAAE,SADH;AAENP,gBAAM,EAAEA,MAFF;AAGNL,mBAAS,EAAEA,SAHL;AAIND,kBAAQ,EAAE,CAACA,QAAD,EAAW,iCAAX,CAJJ;AAKNO,gBAAM,EAAEA,MALF;AAMNO,kBAAQ,EAAE,iCANJ;AAONT,qBAAW,EAAE;AAPP;AAJV,OAnCO,EAiDP;AACE;AACAH,eAAO,EAAE,8DAFX;AAGEQ,kBAAU,EAAE,IAHd;AAIEN,cAAM,EAAE;AACNS,iBAAO,EAAE,SADH;AAENP,gBAAM,EAAEA,MAFF;AAGNL,mBAAS,EAAEA,SAHL;AAINU,eAAK,EAAE;AACLT,mBAAO,EAAE,aADJ;AAELQ,sBAAU,EAAE,IAFP;AAGLP,iBAAK,EAAE;AAHF,WAJD;AASNH,kBAAQ,EAAEA,QATJ;AAUNO,gBAAM,EAAEA,MAVF;AAWNO,kBAAQ,EAAE;AAXJ;AAJV,OAjDO,CAZa;AAgFtBA,cAAQ,EAAE,MAhFY;AAiFtBT,iBAAW,EAAE;AAjFS,KAAxB;AAmFD,GA9FA,EA8FEN,KA9FF;AA+FF,C","file":"x","sourcesContent":["'use strict'\n\nmodule.exports = batch\nbatch.displayName = 'batch'\nbatch.aliases = []\nfunction batch(Prism) {\n  ;(function(Prism) {\n    var variable = /%%?[~:\\w]+%?|!\\S+!/\n    var parameter = {\n      pattern: /\\/[a-z?]+(?=[ :]|$):?|-[a-z]\\b|--[a-z-]+\\b/im,\n      alias: 'attr-name',\n      inside: {\n        punctuation: /:/\n      }\n    }\n    var string = /\"[^\"]*\"/\n    var number = /(?:\\b|-)\\d+\\b/\n    Prism.languages.batch = {\n      comment: [\n        /^::.*/m,\n        {\n          pattern: /((?:^|[&(])[ \\t]*)rem\\b(?:[^^&)\\r\\n]|\\^(?:\\r\\n|[\\s\\S]))*/im,\n          lookbehind: true\n        }\n      ],\n      label: {\n        pattern: /^:.*/m,\n        alias: 'property'\n      },\n      command: [\n        {\n          // FOR command\n          pattern: /((?:^|[&(])[ \\t]*)for(?: ?\\/[a-z?](?:[ :](?:\"[^\"]*\"|\\S+))?)* \\S+ in \\([^)]+\\) do/im,\n          lookbehind: true,\n          inside: {\n            keyword: /^for\\b|\\b(?:in|do)\\b/i,\n            string: string,\n            parameter: parameter,\n            variable: variable,\n            number: number,\n            punctuation: /[()',]/\n          }\n        },\n        {\n          // IF command\n          pattern: /((?:^|[&(])[ \\t]*)if(?: ?\\/[a-z?](?:[ :](?:\"[^\"]*\"|\\S+))?)* (?:not )?(?:cmdextversion \\d+|defined \\w+|errorlevel \\d+|exist \\S+|(?:\"[^\"]*\"|\\S+)?(?:==| (?:equ|neq|lss|leq|gtr|geq) )(?:\"[^\"]*\"|\\S+))/im,\n          lookbehind: true,\n          inside: {\n            keyword: /^if\\b|\\b(?:not|cmdextversion|defined|errorlevel|exist)\\b/i,\n            string: string,\n            parameter: parameter,\n            variable: variable,\n            number: number,\n            operator: /\\^|==|\\b(?:equ|neq|lss|leq|gtr|geq)\\b/i\n          }\n        },\n        {\n          // ELSE command\n          pattern: /((?:^|[&()])[ \\t]*)else\\b/im,\n          lookbehind: true,\n          inside: {\n            keyword: /^else\\b/i\n          }\n        },\n        {\n          // SET command\n          pattern: /((?:^|[&(])[ \\t]*)set(?: ?\\/[a-z](?:[ :](?:\"[^\"]*\"|\\S+))?)* (?:[^^&)\\r\\n]|\\^(?:\\r\\n|[\\s\\S]))*/im,\n          lookbehind: true,\n          inside: {\n            keyword: /^set\\b/i,\n            string: string,\n            parameter: parameter,\n            variable: [variable, /\\w+(?=(?:[*\\/%+\\-&^|]|<<|>>)?=)/],\n            number: number,\n            operator: /[*\\/%+\\-&^|]=?|<<=?|>>=?|[!~_=]/,\n            punctuation: /[()',]/\n          }\n        },\n        {\n          // Other commands\n          pattern: /((?:^|[&(])[ \\t]*@?)\\w+\\b(?:[^^&)\\r\\n]|\\^(?:\\r\\n|[\\s\\S]))*/im,\n          lookbehind: true,\n          inside: {\n            keyword: /^\\w+\\b/i,\n            string: string,\n            parameter: parameter,\n            label: {\n              pattern: /(^\\s*):\\S+/m,\n              lookbehind: true,\n              alias: 'property'\n            },\n            variable: variable,\n            number: number,\n            operator: /\\^/\n          }\n        }\n      ],\n      operator: /[&@]/,\n      punctuation: /[()']/\n    }\n  })(Prism)\n}\n"]}}