{"code":"(this[\"webpackJsonpcs-central\"]=this[\"webpackJsonpcs-central\"]||[]).push([[39],{525:function(e,n,a){\"use strict\";function t(e){e.languages.erlang={comment:/%.+/,string:{pattern:/\"(?:\\\\.|[^\\\\\"\\r\\n])*\"/,greedy:!0},\"quoted-function\":{pattern:/'(?:\\\\.|[^\\\\'\\r\\n])+'(?=\\()/,alias:\"function\"},\"quoted-atom\":{pattern:/'(?:\\\\.|[^\\\\'\\r\\n])+'/,alias:\"atom\"},boolean:/\\b(?:true|false)\\b/,keyword:/\\b(?:fun|when|case|of|end|if|receive|after|try|catch)\\b/,number:[/\\$\\\\?./,/\\d+#[a-z0-9]+/i,/(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:e[+-]?\\d+)?/i],function:/\\b[a-z][\\w@]*(?=\\()/,variable:{pattern:/(^|[^@])(?:\\b|\\?)[A-Z_][\\w@]*/,lookbehind:!0},operator:[/[=\\/<>:]=|=[:\\/]=|\\+\\+?|--?|[=*\\/!]|\\b(?:bnot|div|rem|band|bor|bxor|bsl|bsr|not|and|or|xor|orelse|andalso)\\b/,{pattern:/(^|[^<])<(?!<)/,lookbehind:!0},{pattern:/(^|[^>])>(?!>)/,lookbehind:!0}],atom:/\\b[a-z][\\w@]*/,punctuation:/[()[\\]{}:;,.#|]|<<|>>/}}e.exports=t,t.displayName=\"erlang\",t.aliases=[]}}]);","name":"static/js/react-syntax-highlighter_languages_refractor_erlang.876483af.chunk.js","map":{"version":3,"sources":["static/js/react-syntax-highlighter_languages_refractor_erlang.876483af.chunk.js"],"names":["this","push","525","module","exports","__webpack_require__","erlang","Prism","languages","comment","string","pattern","greedy","quoted-function","alias","quoted-atom","boolean","keyword","number","function","variable","lookbehind","operator","atom","punctuation","displayName","aliases"],"mappings":"CAACA,KAAK,0BAA4BA,KAAK,2BAA6B,IAAIC,KAAK,CAAC,CAAC,IAAI,CAE7EC,IACA,SAAUC,EAAQC,EAASC,GAEjC,aAOA,SAASC,EAAOC,GACdA,EAAMC,UAAUF,OAAS,CACvBG,QAAS,MACTC,OAAQ,CACNC,QAAS,wBACTC,QAAQ,GAEVC,kBAAmB,CACjBF,QAAS,8BACTG,MAAO,YAETC,cAAe,CACbJ,QAAS,wBACTG,MAAO,QAETE,QAAS,qBACTC,QAAS,0DACTC,OAAQ,CAAC,SAAU,iBAAkB,0CACrCC,SAAU,sBACVC,SAAU,CAERT,QAAS,gCACTU,YAAY,GAEdC,SAAU,CAAC,+GAAgH,CAEzHX,QAAS,iBACTU,YAAY,GACX,CAEDV,QAAS,iBACTU,YAAY,IAEdE,KAAM,gBACNC,YAAa,yBAtCjBrB,EAAOC,QAAUE,EACjBA,EAAOmB,YAAc,SACrBnB,EAAOoB,QAAU"},"input":"(this[\"webpackJsonpcs-central\"] = this[\"webpackJsonpcs-central\"] || []).push([[39],{\n\n/***/ 525:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nmodule.exports = erlang;\nerlang.displayName = 'erlang';\nerlang.aliases = [];\n\nfunction erlang(Prism) {\n  Prism.languages.erlang = {\n    comment: /%.+/,\n    string: {\n      pattern: /\"(?:\\\\.|[^\\\\\"\\r\\n])*\"/,\n      greedy: true\n    },\n    'quoted-function': {\n      pattern: /'(?:\\\\.|[^\\\\'\\r\\n])+'(?=\\()/,\n      alias: 'function'\n    },\n    'quoted-atom': {\n      pattern: /'(?:\\\\.|[^\\\\'\\r\\n])+'/,\n      alias: 'atom'\n    },\n    boolean: /\\b(?:true|false)\\b/,\n    keyword: /\\b(?:fun|when|case|of|end|if|receive|after|try|catch)\\b/,\n    number: [/\\$\\\\?./, /\\d+#[a-z0-9]+/i, /(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:e[+-]?\\d+)?/i],\n    function: /\\b[a-z][\\w@]*(?=\\()/,\n    variable: {\n      // Look-behind is used to prevent wrong highlighting of atoms containing \"@\"\n      pattern: /(^|[^@])(?:\\b|\\?)[A-Z_][\\w@]*/,\n      lookbehind: true\n    },\n    operator: [/[=\\/<>:]=|=[:\\/]=|\\+\\+?|--?|[=*\\/!]|\\b(?:bnot|div|rem|band|bor|bxor|bsl|bsr|not|and|or|xor|orelse|andalso)\\b/, {\n      // We don't want to match <<\n      pattern: /(^|[^<])<(?!<)/,\n      lookbehind: true\n    }, {\n      // We don't want to match >>\n      pattern: /(^|[^>])>(?!>)/,\n      lookbehind: true\n    }],\n    atom: /\\b[a-z][\\w@]*/,\n    punctuation: /[()[\\]{}:;,.#|]|<<|>>/\n  };\n}\n\n/***/ })\n\n}]);","inputSourceMap":{"version":3,"sources":["/Users/destul/Desktop/cs-central/node_modules/refractor/lang/erlang.js"],"names":["module","exports","erlang","displayName","aliases","Prism","languages","comment","string","pattern","greedy","alias","boolean","keyword","number","function","variable","lookbehind","operator","atom","punctuation"],"mappings":";;;;;;AAAA;;AAEAA,MAAM,CAACC,OAAP,GAAiBC,MAAjB;AACAA,MAAM,CAACC,WAAP,GAAqB,QAArB;AACAD,MAAM,CAACE,OAAP,GAAiB,EAAjB;;AACA,SAASF,MAAT,CAAgBG,KAAhB,EAAuB;AACrBA,OAAK,CAACC,SAAN,CAAgBJ,MAAhB,GAAyB;AACvBK,WAAO,EAAE,KADc;AAEvBC,UAAM,EAAE;AACNC,aAAO,EAAE,uBADH;AAENC,YAAM,EAAE;AAFF,KAFe;AAMvB,uBAAmB;AACjBD,aAAO,EAAE,6BADQ;AAEjBE,WAAK,EAAE;AAFU,KANI;AAUvB,mBAAe;AACbF,aAAO,EAAE,uBADI;AAEbE,WAAK,EAAE;AAFM,KAVQ;AAcvBC,WAAO,EAAE,oBAdc;AAevBC,WAAO,EAAE,yDAfc;AAgBvBC,UAAM,EAAE,CACN,QADM,EAEN,gBAFM,EAGN,wCAHM,CAhBe;AAqBvBC,YAAQ,EAAE,qBArBa;AAsBvBC,YAAQ,EAAE;AACR;AACAP,aAAO,EAAE,+BAFD;AAGRQ,gBAAU,EAAE;AAHJ,KAtBa;AA2BvBC,YAAQ,EAAE,CACR,8GADQ,EAER;AACE;AACAT,aAAO,EAAE,gBAFX;AAGEQ,gBAAU,EAAE;AAHd,KAFQ,EAOR;AACE;AACAR,aAAO,EAAE,gBAFX;AAGEQ,gBAAU,EAAE;AAHd,KAPQ,CA3Ba;AAwCvBE,QAAI,EAAE,eAxCiB;AAyCvBC,eAAW,EAAE;AAzCU,GAAzB;AA2CD,C","file":"x","sourcesContent":["'use strict'\n\nmodule.exports = erlang\nerlang.displayName = 'erlang'\nerlang.aliases = []\nfunction erlang(Prism) {\n  Prism.languages.erlang = {\n    comment: /%.+/,\n    string: {\n      pattern: /\"(?:\\\\.|[^\\\\\"\\r\\n])*\"/,\n      greedy: true\n    },\n    'quoted-function': {\n      pattern: /'(?:\\\\.|[^\\\\'\\r\\n])+'(?=\\()/,\n      alias: 'function'\n    },\n    'quoted-atom': {\n      pattern: /'(?:\\\\.|[^\\\\'\\r\\n])+'/,\n      alias: 'atom'\n    },\n    boolean: /\\b(?:true|false)\\b/,\n    keyword: /\\b(?:fun|when|case|of|end|if|receive|after|try|catch)\\b/,\n    number: [\n      /\\$\\\\?./,\n      /\\d+#[a-z0-9]+/i,\n      /(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:e[+-]?\\d+)?/i\n    ],\n    function: /\\b[a-z][\\w@]*(?=\\()/,\n    variable: {\n      // Look-behind is used to prevent wrong highlighting of atoms containing \"@\"\n      pattern: /(^|[^@])(?:\\b|\\?)[A-Z_][\\w@]*/,\n      lookbehind: true\n    },\n    operator: [\n      /[=\\/<>:]=|=[:\\/]=|\\+\\+?|--?|[=*\\/!]|\\b(?:bnot|div|rem|band|bor|bxor|bsl|bsr|not|and|or|xor|orelse|andalso)\\b/,\n      {\n        // We don't want to match <<\n        pattern: /(^|[^<])<(?!<)/,\n        lookbehind: true\n      },\n      {\n        // We don't want to match >>\n        pattern: /(^|[^>])>(?!>)/,\n        lookbehind: true\n      }\n    ],\n    atom: /\\b[a-z][\\w@]*/,\n    punctuation: /[()[\\]{}:;,.#|]|<<|>>/\n  }\n}\n"]}}