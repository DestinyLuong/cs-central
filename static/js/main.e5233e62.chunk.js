(this["webpackJsonpcs-central"]=this["webpackJsonpcs-central"]||[]).push([[0],{11:function(e,t,n){},143:function(e,t,n){},155:function(e){e.exports=JSON.parse('[{"lessonNumber":"1","disabled":false,"path":"wmcode-lesson1","topic":"Operators and Assignment","folderLocation":"./wmcodeDownloads/wm_lesson1.zip","folderName":"lesson1","additionalInfo":"File contains autograded assignment practice."},{"lessonNumber":"2","disabled":false,"path":"wmcode-lesson2","topic":"Assignment Cont\'d, and Functions","folderLocation":"./wmcodeDownloads/wm_lesson2.zip","folderName":"lesson2","additionalInfo":"Practice using operators and functions by writing calculator methods."},{"lessonNumber":"3","disabled":false,"path":"wmcode-lesson3","topic":"Functions Cont\'d","folderLocation":"./wmcodeDownloads/wm_lesson3.zip","folderName":"lesson3","additionalInfo":"Solving math problems with functions, with an emphasis on helper methods."},{"lessonNumber":"4","disabled":false,"path":"wmcode-lesson4","topic":"Control, Part 1: Conditional Statements","folderLocation":"./wmcodeDownloads/wm_lesson4.zip","folderName":"lesson4","additionalInfo":"Practice using if-elif-else blocks."},{"lessonNumber":"5","disabled":false,"path":"wmcode-lesson5","topic":"Control, Part 2: Boolean Values","folderLocation":"./wmcodeDownloads/wm_lesson5.zip","folderName":"lesson5","additionalInfo":"Using and returning booleans to solve problems."},{"lessonNumber":"6","disabled":true,"path":"wmcode-lesson6","topic":"Control, Part 3: The While Statement","folderLocation":"./wmcodeDownloads/wm_lesson6.zip","folderName":"lesson6","additionalInfo":"Using the \'while\' loop in methods to simplify problem-solving."},{"lessonNumber":"7","disabled":true,"path":"wmcode-lesson7","topic":"Iterables, Part 1: Lists","folderLocation":"./wmcodeDownloads/wm_lesson7.zip","folderName":"lesson7","additionalInfo":"Constructing and accessing items in a list."},{"lessonNumber":"8","disabled":true,"path":"wmcode-lesson8","topic":"List Applications","folderLocation":"./wmcodeDownloads/wm_lesson8.zip","folderName":"lesson8","additionalInfo":"Writing methods that take advantage of Python lists."},{"lessonNumber":"9","disabled":true,"path":"wmcode-lesson9","topic":"Iterables, Part 2: Dictionaries","folderLocation":"","folderName":"","additionalInfo":"No file."}]')},156:function(e){e.exports=JSON.parse('[{"lessonNumber":"1","disabled":false,"path":"/prepcs-lesson1","topic":"Welcome to PREP!","folderName":"No Folder Today :)","additionalInfo":"Welcome friends! Hope you have a wonderful time learning CS with us :)"},{"lessonNumber":"2","disabled":false,"path":"/prepcs-lesson2","topic":"Python Syntax","folderName":"No Folder Today :)","additionalInfo":"Operators, operands, expressions, data types."},{"lessonNumber":"3","disabled":false,"path":"/prepcs-lesson3","topic":"Functions and If-Statements","folderName":"No Folder Today :)","additionalInfo":"Built in functions, assignment, custom functions, if statements"},{"lessonNumber":"4","disabled":false,"path":"/prepcs-lesson4","topic":"Control","folderLocation":"./prepDownloads/prep_lesson4.zip","folderName":"lesson4","additionalInfo":"Elif (else if) and else clause, environment diagrams."},{"lessonNumber":"5","disabled":false,"path":"/prepcs-lesson5","topic":"Control: The \'While\' Loop","folderLocation":"./prepDownloads/prep_lesson5.zip","folderName":"lesson5","additionalInfo":"The while loop."},{"lessonNumber":"6","disabled":false,"path":"/prepcs-lesson6","topic":"Iterables and the \'For\' Loop","folderLocation":"./prepDownloads/prep_lesson6.zip","folderName":"lesson6","additionalInfo":"Iterables, for loops."},{"lessonNumber":"7","disabled":false,"path":"/prepcs-lesson7","topic":"Higher-Order Functions","folderLocation":"./prepDownloads/prep_lesson7.zip","folderName":"lesson7","additionalInfo":"Helper functions, higher-order functions."},{"lessonNumber":"8","disabled":false,"path":"/prepcs-lesson8","topic":"Lambda Expressions","folderName":"None Today!","additionalInfo":"Lambda Expressions, HOF simplification."},{"lessonNumber":"9","disabled":false,"path":"/prepcs-lesson9","topic":"Recursion","folderLocation":"./prepDownloads/prep_lesson9.zip","folderName":"lesson9","additionalInfo":"Recursion: factorial, fibonacci."},{"lessonNumber":"10","disabled":false,"path":"/prepcs-lesson10","topic":"Recursion Practice","folderLocation":"./prepDownloads/prep_lesson10.zip","folderName":"lesson10","additionalInfo":"Recursion review, practice problems."},{"lessonNumber":"11","disabled":false,"path":"/prepcs-lesson11","topic":"More Recursion Practice","folderLocation":"./prepDownloads/prep_lesson11.zip","folderName":"lesson11","additionalInfo":"Recursion practice problems."},{"lessonNumber":"12","disabled":false,"path":"/prepcs-lesson12","topic":"Trees","folderName":"None Today!","additionalInfo":"Data abstraction, trees."},{"lessonNumber":"13","disabled":true,"path":"/prepcs-lesson13","topic":"Summative Review 1","folderLocation":"./prepDownloads/*******","folderName":"lesson13","additionalInfo":"Review of course topics, practice problems."},{"lessonNumber":"14","disabled":true,"path":"/prepcs-lesson14","topic":"Summative Review 2","folderLocation":"./prepDownloads/*******","folderName":"lesson14","additionalInfo":"More review of course topics, practice problems, and ending remarks. We hope you enjoyed learning CS with us!"}]')},416:function(e,t,n){"use strict";n.r(t);var s=n(1),o=n.n(s),i=n(63),r=n.n(i),a=(n(143),n(11),n(37)),c=n(38),l=n(41),d=n(39),h=n(12),u=n(438),j=n(432),b=n(90),p=n(439),m=n(166),f=n(0),x=function(e){Object(l.a)(n,e);var t=Object(d.a)(n);function n(){var e;Object(a.a)(this,n);for(var o=arguments.length,i=new Array(o),r=0;r<o;r++)i[r]=arguments[r];return(e=t.call.apply(t,[this].concat(i))).state={activeItem:"home"},e.handleItemClick=function(t,n){var s=n.name;return e.setState({activeItem:s})},e.contextRef=Object(s.createRef)(),e}return Object(c.a)(n,[{key:"render",value:function(){var e=this.state.activeItem;return Object(f.jsx)(f.Fragment,{children:Object(f.jsxs)(u.a,{stackable:!0,textAlign:"center",verticalAlign:"middle",columns:1,children:[Object(f.jsx)(u.a.Row,{style:{marginBottom:50},children:Object(f.jsxs)(j.a,{size:"large",secondary:!0,borderless:!0,fluid:!0,stackable:!0,fixed:"top",color:"green",inverted:!0,style:{paddingTop:10,paddingBottom:10,paddingLeft:20,paddingRight:20},children:[Object(f.jsxs)(j.a.Item,{as:h.b,to:"/",name:"Home",content:"Home",active:"Home"===e,onClick:this.handleItemClick,children:[Object(f.jsx)(b.a,{name:"home",size:"large"}),Object(f.jsx)("p",{children:" Home "})]}),Object(f.jsxs)(j.a.Menu,{position:"right",children:[Object(f.jsx)(j.a.Item,{as:h.b,to:"/wmcode",name:"WMCode",content:"WMCode",active:"WMCode"===e,onClick:this.handleItemClick}),Object(f.jsx)(j.a.Item,{as:h.b,to:"/prepcs",name:"PREP CS",content:"PREP CS",active:"PREP CS"===e,onClick:this.handleItemClick}),Object(f.jsx)(j.a.Item,{children:this.props.button})]})]})}),Object(f.jsxs)(u.a.Row,{columns:2,textAlign:"center",children:[Object(f.jsx)(u.a.Column,{width:5,children:Object(f.jsxs)(f.Fragment,{children:[Object(f.jsx)(p.a,{as:"h1",style:{color:"#700C02"},children:Object(f.jsx)("b",{children:this.props.title})}),Object(f.jsx)(p.a,{as:"h4",children:this.props.description})]})}),Object(f.jsx)(u.a.Column,{width:11,children:Object(f.jsx)(m.a,{src:this.props.img})})]})]})})}}]),n}(s.Component),O=n(29),g=n(437),w=function(){var e=Object(O.b)().loginWithRedirect;return Object(f.jsx)(g.a,{color:"purple",onClick:function(){return e()},children:"Log In"})},y=function(){var e=Object(O.b)().logout;return Object(f.jsx)(g.a,{color:"purple",onClick:function(){return e({returnTo:window.location.origin})},children:"Log Out"})},v=function(){return Object(O.b)().isAuthenticated?Object(f.jsx)(y,{}):Object(f.jsx)(w,{})},T=function(){return Object(f.jsx)("div",{children:Object(f.jsx)(v,{})})},k=n(431);s.Component;var C=function(e){return Object(f.jsx)("div",{children:Object(f.jsx)(x,{img:e.img,title:e.title,description:e.description})})},_=n(442);var S=function(e){return Object(f.jsx)("div",{class:"footer",children:Object(f.jsx)(_.a,{vertical:!0,children:Object(f.jsxs)(u.a,{stackable:!0,children:[Object(f.jsxs)(u.a.Row,{children:[Object(f.jsx)(u.a.Column,{width:5,children:Object(f.jsx)(h.b,{to:"/",children:Object(f.jsx)(p.a,{as:"h4",children:"Home"})})}),Object(f.jsx)(u.a.Column,{width:6,children:Object(f.jsx)(h.b,{to:"/wmcode",children:Object(f.jsx)(p.a,{as:"h4",children:"WMCode"})})}),Object(f.jsx)(u.a.Column,{width:5,children:Object(f.jsx)(h.b,{to:"/prepcs",children:Object(f.jsx)(p.a,{as:"h4",children:"PREP CS"})})})]}),Object(f.jsxs)(u.a.Row,{children:[Object(f.jsx)(u.a.Column,{width:1}),Object(f.jsx)(u.a.Column,{width:5,textAlign:"left",children:Object(f.jsx)(p.a,{as:"h6",children:"Jesus Villalobos and Cristian Moran, 2021."})}),Object(f.jsx)(u.a.Column,{width:4}),Object(f.jsx)(u.a.Column,{width:5,textAlign:"right",children:Object(f.jsx)(p.a,{as:"h6",children:"CS Central has no official affiliation with UC Berkeley."})}),Object(f.jsx)(u.a.Column,{width:1})]})]})})})},I=n.p+"static/media/LandingPage.17ddb814.png";var N=function(e){return Object(f.jsx)("div",{style:{backgroundColor:e.background?"#EDEAE5":"",paddingTop:75,paddingBottom:75,marginTop:75},children:Object(f.jsx)(u.a,{stackable:!0,padded:"horizontally",verticalAlign:"middle",children:Object(f.jsxs)(u.a.Row,{columns:3,children:[Object(f.jsxs)(u.a.Column,{width:8,verticalAlign:"middle",textAlign:"center",children:[Object(f.jsx)(p.a,{as:"h1",children:Object(f.jsx)("b",{children:e.firstTitle})}),Object(f.jsx)("p",{children:e.firstDescription})]}),Object(f.jsxs)(u.a.Column,{width:8,verticalAlign:"middle",textAlign:"center",children:[Object(f.jsx)(p.a,{as:"h1",children:Object(f.jsx)("b",{children:e.secondTitle})}),Object(f.jsx)("p",{children:e.secondDescription})]})]})})})};var L=function(e){return Object(f.jsx)("div",{style:{backgroundColor:e.background?"#EDEAE5":""},children:Object(f.jsx)(u.a,{stackable:!0,padded:!0,textAlign:"center",verticalAlign:"middle",children:Object(f.jsx)(u.a.Row,{columns:1,children:Object(f.jsxs)(u.a.Column,{width:16,style:{paddingTop:40},children:[Object(f.jsx)(p.a,{as:"h2",style:{lineHeight:1.75},children:e.bold?Object(f.jsx)("b",{children:e.quote}):e.quote}),Object(f.jsx)(p.a,{as:"h3",children:e.author})]})})})})},P=n(114),E=n(436),R=n(13),A=n(434),F=n(433),D=function(e){Object(l.a)(n,e);var t=Object(d.a)(n);function n(e){var s;return Object(a.a)(this,n),(s=t.call(this,e)).componentDidMount=function(e){},s.handleChange=function(e,t){var n=t.name,o=t.value;s.setState(Object(P.a)({},n,o))},s.handleSubmit=function(e){e.preventDefault(),s.setState({userId:Object(E.a)(),submittedFirstName:s.state.firstName,submittedLastName:s.state.lastName,submittedUserName:s.state.userName,submittedEmail:s.state.email,submittedIdentity:s.state.identity,saved:!s.state.saved,modalOpen:!s.state.modalOpen,redirectUrl:"/"+s.state.identity},(function(){console.log(s.state),console.log("identity: "+s.state.submittedIdentity),console.log("url -- "+s.state.redirectUrl)}));s.state.submittedFirstName,s.state.submittedLastName,s.state.submittedUserName,s.state.submittedEmail,s.state.submittedIdentity},s.state={userId:"",authId:"",firstName:"",lastName:"",userName:"",email:"",identity:"",submittedFirstName:"",submittedLastName:"",submittedUserName:"",submittedEmail:"",submittedIdentity:"",saved:!1,modalOpen:!0,redirectUrl:""},s}return Object(c.a)(n,[{key:"render",value:function(){var e=this;return this.state.saved&&this.state.identity?(console.log("Should be redirecting to: "+this.state.submittedIdentity),Object(f.jsx)(R.a,{push:!0,to:this.state.redirectUrl})):Object(f.jsxs)(A.a,{as:F.a,onSubmit:function(t){return e.handleSubmit(t)},open:this.state.modalOpen,size:"large",children:[Object(f.jsx)(p.a,{icon:"lightbulb outline",content:"Welcome to Learning-Platform",as:"h2"}),Object(f.jsxs)(A.a.Content,{children:[Object(f.jsx)(A.a.Description,{children:Object(f.jsxs)(p.a,{as:"h3",children:["Please fill out this form to get started with your coding adventure",Object(f.jsx)("br",{}),Object(f.jsx)("br",{})]})}),Object(f.jsxs)(F.a.Group,{widths:"equal",children:[Object(f.jsx)(F.a.Input,{label:"First Name",required:!0,fluid:!0,type:"text",name:"firstName",placeholder:"First name",value:this.state.firstName,onChange:this.handleChange}),Object(f.jsx)(F.a.Input,{label:"Last Name",required:!0,fluid:!0,type:"text",name:"lastName",placeholder:"Last name",value:this.state.lastName,onChange:this.handleChange})]}),Object(f.jsxs)(F.a.Group,{widths:"equal",children:[Object(f.jsx)(F.a.Input,{label:"Username",required:!0,fluid:!0,type:"text",name:"userName",placeholder:"Username",value:this.state.userName,onChange:this.handleChange}),Object(f.jsx)(F.a.Input,{label:"Email",required:!0,fluid:!0,type:"text",name:"email",placeholder:"Email",value:this.state.email,onChange:this.handleChange})]}),Object(f.jsxs)(F.a.Group,{inline:!0,children:[Object(f.jsx)("label",{children:"Identity"}),Object(f.jsx)(F.a.Radio,{label:"Pre-Engineering Program Student",value:"prepcs",name:"identity",checked:"prepcs"===this.state.identity,onChange:this.handleChange}),Object(f.jsx)(F.a.Radio,{label:"Wave-Maker Code Student",value:"wmcode",name:"identity",checked:"wmcode"===this.state.identity,onChange:this.handleChange}),Object(f.jsx)(F.a.Radio,{label:"Visitor",value:"visitor",name:"identity",checked:"visitor"===this.state.identity,onChange:this.handleChange})]})]}),Object(f.jsx)(A.a.Actions,{children:Object(f.jsx)(g.a,{type:"submit",color:"green",icon:"save",content:"Save"})})]})}}]),n}(s.Component),W=Object(O.c)(D);n(440),n(430);var H=function(e){return Object(f.jsxs)("div",{children:[Object(f.jsx)(C,{img:I,title:"Welcome to CS Central!",description:" An independent learning and preparation hub for students interested STEM, with a focus on Computer Science."}),Object(f.jsx)(L,{bold:!0,quote:"The world is complicated and messy, with lots of loose ends, and the teacher's job is to impose order on the confusion, to convert a chaotic set of episodes into a coherent narrative.",author:"I. Stewart"}),Object(f.jsx)(N,{background:!0,firstTitle:"About CS Central",firstDescription:"CS Central was started upon the firm belief that anyone  and everyone can learn to code, no matter their background. We are a group  of college students interested in recycling our success in computer science.",secondTitle:"Our Mission",secondDescription:"CS Central is determined to offer resources to aspiring computer  scientists. We want to inspire and empower students to build the future they want  to see, and will provide them with the support they need to get there."}),Object(f.jsxs)("div",{style:{paddingTop:100,paddingBottom:100},children:[Object(f.jsx)("div",{style:{paddingTop:35,paddingBottom:35},children:Object(f.jsxs)(u.a,{stackable:!0,padded:!0,textAlign:"center",children:[Object(f.jsx)(u.a.Row,{children:Object(f.jsx)(b.a,{name:"student",size:"massive",color:"blue",inverted:!0,circular:!0})}),Object(f.jsx)(u.a.Row,{children:Object(f.jsx)(p.a,{as:"h1",children:Object(f.jsx)("b",{children:"WMCode"})})}),Object(f.jsx)(u.a.Row,{children:Object(f.jsx)(u.a.Column,{width:8,children:"WMCode is an introduction-to-computer-science course taught in Richmond, CA to underserved high school students. For the majority of these students, CS Central is their first interaction with computer science, so we strive to inspire them to pursue a STEM or computer science field."})})]})}),Object(f.jsx)("div",{style:{paddingTop:35,paddingBottom:35},children:Object(f.jsxs)(u.a,{stackable:!0,padded:!0,textAlign:"center",children:[Object(f.jsx)(u.a.Row,{children:Object(f.jsx)(b.a,{name:"users",size:"massive",color:"blue",inverted:!0,circular:!0})}),Object(f.jsx)(u.a.Row,{children:Object(f.jsx)(p.a,{as:"h1",children:Object(f.jsx)("b",{children:"Pre-Engineering Program"})})}),Object(f.jsx)(u.a.Row,{children:Object(f.jsx)(u.a.Column,{width:8,children:"In conjuction with the UC Berkeley Pre-Engineering Program (PREP), CS Central guides incoming first year students through an introduction to the UC Berkeley computer science curriculum."})})]})})]}),Object(f.jsx)(S,{})]})},z=n.p+"static/media/WMCodeInfo.20d566ef.png";var U=function(e){return Object(f.jsxs)("div",{children:[Object(f.jsx)(C,{title:"Wave-Maker Code (WMCode)",description:"Introductory computer science course taught in Richmond, CA.",img:z}),Object(f.jsx)(L,{bold:!0,quote:"Awaken people's curiosity. It is enough to open minds, do not overload them.  Put there just a spark.",author:"A. France"}),Object(f.jsx)(N,{background:!0,firstTitle:"Hello World",firstDescription:"This is cool",media:Object(f.jsx)(_.a,{placeholder:!0,children:"PlaceHolder Image"})}),Object(f.jsx)(S,{})]})},M=n.p+"static/media/PREPHome.2a9321c4.png";var B=function(e){return Object(f.jsxs)("div",{children:[Object(f.jsx)(C,{title:"Pre-Engineering Program (PREP) Computer Science",description:"A preparatory course for the rigors of UC Berkeley Computer Science.",img:M}),Object(f.jsx)(L,{bold:!0,quote:"Questions are the important thing, answers are less important.  Learning to ask a good question is the heart of intelligence. Learning the answer--well, answers are for students. Questions are for thinkers.",author:"R. Schank (in 'The Connosseur's Guide to the Mind')"}),Object(f.jsx)(N,{background:!0,firstTitle:"Math 53 sucks",firstDescription:"Description",secondTitle:"Cris is Cool :)",secondDescription:"Math is stupid!!!",media:Object(f.jsx)(_.a,{placeholder:!0,children:"PlaceHolder Image"})}),Object(f.jsx)(S,{})]})},Y=n.p+"static/media/SampleLesson.2abc37eb.png";var q=function(e){return Object(f.jsxs)("div",{children:[Object(f.jsx)(C,{title:"Sample Lesson",description:"A sneak peek of the material that we teach to our students.",img:Y}),Object(f.jsx)(L,{bold:!0,quote:"Being abstract is something profoundly different from being vague... The purpose of abstraction is not to be vague, but to create a new semantic  level in which one can be absolutely precise.",author:"E. Dijkstra"}),Object(f.jsx)(N,{background:!0,firstTitle:"This is the Sample Lesson",firstDescription:"Describe it here :)"}),Object(f.jsx)(S,{})]})},Q=n.p+"static/media/Contact.acb21bc4.png";var V=function(e){return Object(f.jsxs)("div",{children:[Object(f.jsx)(C,{title:"Contact",description:"Any questions, comments, concerns or suggestions are welcome!",img:Q}),Object(f.jsx)(N,{background:!0,firstTitle:"Contact Us!",firstDescription:"*Insert the form here*"}),Object(f.jsx)(S,{})]})};var G=function(){return Object(f.jsxs)("div",{children:[Object(f.jsx)(C,{title:"Pre-Engineering Program (PREP) Computer Science",description:"A preparatory course for the rigors of UC Berkeley Computer Science."}),Object(f.jsx)("h1",{children:"Hello"}),Object(f.jsx)("p",{children:"They never taught us this in 61a :(( or 61b.."})]})},X=n(435),J=function(e){Object(l.a)(n,e);var t=Object(d.a)(n);function n(){return Object(a.a)(this,n),t.apply(this,arguments)}return Object(c.a)(n,[{key:"render",value:function(){var e=this.props.data.map((function(e){return Object(f.jsxs)(X.a.Row,{disabled:e.disabled,children:[Object(f.jsx)(X.a.Cell,{collapsing:!0,children:e.lessonNumber}),Object(f.jsx)(X.a.Cell,{children:e.disabled?e.topic:Object(f.jsx)(f.Fragment,{children:Object(f.jsx)(h.b,{to:e.path,children:e.topic})})}),Object(f.jsxs)(X.a.Cell,{children:[Object(f.jsx)(b.a,{name:"folder"}),e.disabled?e.folderName:Object(f.jsx)(f.Fragment,{children:Object(f.jsx)("a",{href:e.folderLocation,download:!0,children:e.folderName})})]}),Object(f.jsx)(X.a.Cell,{children:e.additionalInfo})]})}));return Object(f.jsxs)(X.a,{celled:!0,striped:!0,selectable:!0,sortable:!0,stackable:!0,textAlign:"left",verticalAlign:"center",children:[Object(f.jsx)(X.a.Header,{children:Object(f.jsxs)(X.a.Row,{children:[Object(f.jsx)(X.a.HeaderCell,{width:2,children:"Lesson Number"}),Object(f.jsx)(X.a.HeaderCell,{width:8,children:"Lesson Topic and Information"}),Object(f.jsxs)(X.a.HeaderCell,{width:3,children:[Object(f.jsx)(b.a,{name:"folder"})," Folder Download"]}),Object(f.jsx)(X.a.HeaderCell,{width:3,children:"Additional Information / Notes"})]})}),Object(f.jsx)(X.a.Body,{children:e})]})}}]),n}(o.a.Component),Z=n(155);var K=function(e){return Object(f.jsxs)("div",{children:[Object(f.jsx)(C,{img:z,title:"Welcome to WMCode!",description:" CS Central is happy to take this opportunity to  show you the beauty of computer science."}),Object(f.jsx)(L,{bold:!0,quote:"Awaken people's curiosity. It is enough to open minds, do not overload them.  Put there just a spark.",author:"A. France"}),Object(f.jsx)("br",{}),Object(f.jsx)("br",{}),Object(f.jsx)(J,{data:Z}),Object(f.jsx)(S,{})]})},$=n(156),ee=(n(15),function(e){Object(l.a)(n,e);var t=Object(d.a)(n);function n(e){var s;return Object(a.a)(this,n),(s=t.call(this,e)).handleItemClick=function(e,t){var n=t.name,o=t.page;return s.setState({activeItem:n,activePage:o})},s.state={activeItem:"3",activePage:[Object(f.jsxs)("div",{children:[Object(f.jsx)(p.a,{as:"h3",children:Object(f.jsx)("b",{children:"Practice Problem Solutions"})}),Object(f.jsx)("p",{children:"Moving forward, solutions to practice problems will be posted on their respective page the night of the lesson. For example, the solutions to Lesson 7 practice problems are posted the evening of August 2nd."}),Object(f.jsx)("p",{children:"While we may get to cover some problems during the lessons, we cannot guarantee that we will always have time. So, if you have questions or would like to work out the problems with your peers or the instructors, please drop by Office Hours. We are more than happy to help you figure out the problems and answer any questions you may have :)"}),Object(f.jsx)("p",{children:"You can find the links to OH on the slide 2 of this section!!"}),Object(f.jsx)("p",{children:Object(f.jsx)(h.b,{to:"/prepcs-lesson6",children:"Lesson 6 Solutions"})}),Object(f.jsx)("p",{children:Object(f.jsx)(h.b,{to:"/prepcs-lesson7",children:"Lesson 7 Solutions"})}),Object(f.jsx)("p",{children:Object(f.jsx)(h.b,{to:"/prepcs-lesson9",children:"Lesson 9 Solutions"})})]})]},s}return Object(c.a)(n,[{key:"render",value:function(){var e=this.state.activeItem,t=[Object(f.jsxs)("div",{children:[Object(f.jsx)(p.a,{as:"h3",children:Object(f.jsx)("b",{children:"Welcome In!"})}),Object(f.jsx)("p",{children:"We're happy to have you here, and look forward to helping you be successful! We're happy to have you here, and look forward to helping you be successful! Feel free to explore the website and the available materials. We will release materials at 6pm the day before they are going to be taught."}),Object(f.jsx)("p",{children:"Future announcements will be posted here, so be sure to check back regularly!"})]})],n=[Object(f.jsxs)("div",{children:[Object(f.jsx)(p.a,{as:"h3",children:Object(f.jsx)("b",{children:"Office Hours"})}),Object(f.jsx)("p",{children:"As you may have already seen in your emails, we will be holding office hours throughout the week to make sure you have a space to ask any questions you have, and have them answered. Current dates and times are listed below, and we may add more times if we see office hours are popular! Drop by to ask anything ... CS-related, Cal-related, or anything else!"}),Object(f.jsxs)("p",{children:[Object(f.jsx)("b",{children:"Karen's OH:"})," Mondays and Wednesdays, 5-6pm.",Object(f.jsx)("a",{target:"_blank",rel:"noopener noreferrer",href:"https://berkeley.zoom.us/j/92460458306?pwd=RVlJN0lLU29JNzcySzFVTzFNd1BNdz09",children:"JOIN MEETING"})]}),Object(f.jsxs)("p",{children:[Object(f.jsx)("b",{children:"Cristian's OH:"})," Tuesdays and Thursdays, 5-6pm.",Object(f.jsx)("a",{target:"_blank",rel:"noopener noreferrer",href:"https://berkeley.zoom.us/j/99662937200",children:"JOIN MEETING"})]})]})],s=[Object(f.jsxs)("div",{children:[Object(f.jsx)(p.a,{as:"h3",children:Object(f.jsx)("b",{children:"Practice Problem Solutions"})}),Object(f.jsx)("p",{children:"Moving forward, solutions to practice problems will be posted on their respective page the night of the lesson. For example, the solutions to Lesson 7 practice problems are posted the evening of August 2nd."}),Object(f.jsx)("p",{children:"While we may get to cover some problems during the lessons, we cannot guarantee that we will always have time. So, if you have questions or would like to work out the problems with your peers or the instructors, please drop by Office Hours. We are more than happy to help you figure out the problems and answer any questions you may have :)"}),Object(f.jsx)("p",{children:"You can find the links to OH on the slide 2 of this section!!"}),Object(f.jsx)("p",{children:Object(f.jsx)(h.b,{to:"/prepcs-lesson6",children:"Lesson 6 Solutions"})}),Object(f.jsx)("p",{children:Object(f.jsx)(h.b,{to:"/prepcs-lesson7",children:"Lesson 7 Solutions"})}),Object(f.jsx)("p",{children:Object(f.jsx)(h.b,{to:"/prepcs-lesson9",children:"Lesson 9 Solutions"})})]})];return Object(f.jsx)("div",{class:"carousel",children:Object(f.jsx)(_.a,{children:Object(f.jsxs)(u.a,{children:[Object(f.jsx)(u.a.Row,{children:Object(f.jsx)("div",{class:"carousel-slides",children:Object(f.jsx)(_.a,{basic:!0,children:this.state.activePage})})}),Object(f.jsx)(u.a.Row,{children:Object(f.jsx)("div",{class:"pagination",children:Object(f.jsxs)(j.a,{pagination:!0,size:"mini",children:[Object(f.jsx)(j.a.Item,{disabled:!1,name:"1",page:t,active:"1"===e,onClick:this.handleItemClick}),Object(f.jsx)(j.a.Item,{disabled:!1,name:"2",page:n,active:"2"===e,onClick:this.handleItemClick}),Object(f.jsx)(j.a.Item,{disabled:!1,name:"3",page:s,active:"3"===e,onClick:this.handleItemClick}),Object(f.jsx)(j.a.Item,{disabled:!0,name:"4",active:"4"===e,onClick:this.handleItemClick}),Object(f.jsx)(j.a.Item,{disabled:!0,name:"5",active:"12"===e,onClick:this.handleItemClick})]})})})]})})})}}]),n}(o.a.Component));var te=function(e){return Object(f.jsxs)("div",{children:[Object(f.jsx)("br",{}),Object(f.jsx)("br",{}),Object(f.jsx)("br",{}),Object(f.jsx)(C,{img:M,title:"Welcome to PREP Computer Science!",description:" CS Central is happy to take this opportunity to  introduce you to UC Berkeley Computer Science."}),Object(f.jsx)(L,{bold:!0,quote:"Questions are the important thing, answers are less important.  Learning to ask a good question is the heart of intelligence. Learning the answer--well, answers are for students. Questions are for thinkers.",author:"R. Schank (in 'The Connosseur's Guide to the Mind')."}),Object(f.jsx)(ee,{}),Object(f.jsx)(J,{data:$}),Object(f.jsx)(S,{})]})},ne=n.p+"static/media/VisitorHome.0a25315e.png";var se=function(e){return Object(f.jsx)("div",{children:Object(f.jsx)(C,{img:ne,title:"Welcome to LearningPlatform, *~Visitor~*",description:" LearningPlatform is happy to offer you insight into how  we teach our students the beauty of computer science."})})};var oe=function(e){return Object(f.jsx)("div",{class:"embedded",children:Object(f.jsx)("iframe",{src:e.src,frameborder:"0",allowfullscreen:"true",mozallowfullscreen:"true",webkitallowfullscreen:"true"})})};var ie=function(){return Object(f.jsxs)("div",{children:[Object(f.jsx)(x,{}),Object(f.jsxs)("div",{className:"wmcode-page",children:[Object(f.jsx)(p.a,{as:"h1",children:"Lesson 1 - Operators and Assignment"}),Object(f.jsx)("a",{href:"./wmcodeDownloads/wm_lesson1.zip",download:!0,children:Object(f.jsx)(g.a,{basic:!0,color:"blue",children:"Download Lesson"})}),Object(f.jsx)("br",{})," ",Object(f.jsx)("br",{}),Object(f.jsx)("br",{}),Object(f.jsx)(oe,{src:"https://docs.google.com/presentation/d/e/2PACX-1vQELueLHOSR69k8hUUuE275Yhce7Vm-nJKxXXlDBQYWim8nIA0cAsZw5b9CBHDt-hfrR7zafDxlOzLG/embed?start=false&loop=false&delayms=3000"}),Object(f.jsx)("h2",{children:"Lesson Content:"}),Object(f.jsx)("h3",{children:"Operators Review:"}),"Take a minute and go through each of these review problems. Do your best to figure out what Python would interpret each expression to be.",Object(f.jsx)("p",{children:Object(f.jsx)("b",{children:"TRY THEM IN THE terminal BEFORE MOVING ON"})}),Object(f.jsxs)("pre",{children:[">>> 3 == 3.0","\n","___","\n",">>> 10 % 7","\n","___","\n",">>> 9739 % 10","\n","___","\n",">>> 84 / 12","\n","___","\n",">>> 5756 // 10","\n","___","\n",">>> 2 ** 4","\n","___","\n",">>> 75 % 5","\n","___"]}),"Solutions and Explanations:",Object(f.jsxs)("pre",{children:[">>> 3 == 3.0","         ","# --\x3e Both sides evaluate to the same value","\n","True","\n",">>> 10 % 7","           ","# --\x3e The remainder of division is 3","\n","3","\n",">>> 9739 % 10","        ","# --\x3e When you divide, 9 is left over. Any number % 10 will always give the last digit.","\n","9","\n",">>> 84 / 12","          ","# --\x3e Regular division outputs the decimal form","\n","7.0","\n",">>> 5756 // 10","       ","# --\x3e 5756 / 10 = 575.6 --\x3e Floor division by 10 will always cut off the last digit","\n","575","\n",">>> 2 ** 4","           ","# --\x3e 2 * 2 * 2 * 2","\n","32","\n",">>> 75 % 5","           ","# --\x3e There is no remainder because 5 goes into 75 evenly","\n","0"]}),"Now, you may ask: How does Python evaluate these math operations? The answer is quite simple. We, implicitly, take the exact same steps as Python. They are:",Object(f.jsxs)("ol",{children:[Object(f.jsx)("li",{children:"Evaluate the Operator --\x3e the math symbol"}),Object(f.jsx)("li",{children:"Evaluate the Operands --\x3e whatever is on either side of the symbol"}),Object(f.jsx)("li",{children:"Apply the Operator to the Operands --\x3e Perform the operation"})]}),Object(f.jsx)("h3",{children:"Assignment:"}),"Assignment is how we ",Object(f.jsx)("i",{children:"assign"})," a value to a variable or keyword in Python. An assignment is characterized by three things:",Object(f.jsxs)("ul",{children:[Object(f.jsx)("li",{children:"A left side"}),Object(f.jsx)("li",{children:"A single equals sign"}),Object(f.jsx)("li",{children:"A right side"})]}),"Python will read that assignment statement and take the following steps, in this exact order:",Object(f.jsxs)("ul",{children:[Object(f.jsx)("li",{children:"Evaluate whatever is on the right side"}),Object(f.jsx)("ul",{children:Object(f.jsx)("li",{children:"The order of execution of math operations, if it is a math expression, for example"})}),Object(f.jsx)("li",{children:"Assign that value to whatever variable or keyword is on the left"})]}),"After this process, you can think of the variable or keyword as a"," ",Object(f.jsx)("i",{children:"container"})," for whatever value was stored within it. You can refer to this value simply by calling that variable. BUT you can change what is inside of each of these containers by ",Object(f.jsx)("i",{children:"reassigning"})," its value.",Object(f.jsx)("p",{children:"Use the terminal to experiment with assigment!!"}),Object(f.jsxs)("pre",{children:[">>> x = 49","\n",">>> y = 11","\n",">>> x + y","\n","60","\n",">>> x","      ","# --\x3e The operation that was executed does not change x's value","\n","49","\n",">>> y","      ","# --\x3e The operation that was executed does not change y's value","\n","11","\n",">>> w = (x * y) - (x + y)","\n",">>> w","\n","479","\n",">>> (w // 10) - x + y","      ","# --\x3e Values of w, x, and y never changed","\n","9","\n",">>> x = w","           ","# --\x3e Reassignment","\n",">>> y = w // y","      ","# --\x3e Reassignment","\n",">>> x","\n","479","\n",">>> y","\n","43","\n",">>> w","      ","# --\x3e NOTE: w's value never changed","\n","479"]}),Object(f.jsx)("h3",{children:"Intro to Functions:"}),"Functions are a way of working with unknown values, and producing a desired output.",Object(f.jsx)("br",{}),Object(f.jsx)("br",{}),"Functions have a name and a body, where operations are carried out",Object(f.jsx)("br",{}),Object(f.jsx)("br",{}),"See Lesson 3 for more on functions!!!"]}),Object(f.jsx)(S,{})]})};var re=function(){return Object(f.jsxs)("div",{children:[Object(f.jsx)(x,{}),Object(f.jsxs)("div",{className:"wmcode-page",children:[Object(f.jsx)(p.a,{as:"h1",children:"Lesson 2 - Assignment Cont'd, and Functions"}),Object(f.jsx)("a",{href:"./wmcodeDownloads/wm_lesson2.zip",download:!0,children:Object(f.jsx)(g.a,{basic:!0,color:"blue",children:"Download Lesson"})}),Object(f.jsx)("br",{})," ",Object(f.jsx)("br",{}),Object(f.jsx)("br",{}),Object(f.jsx)(oe,{src:"https://docs.google.com/presentation/d/e/2PACX-1vT4tenv432KCZyFADvjqj5kUiGWVhbVL4SjLhZdhc8_YEmTiydI0mZgXEno_9eec3WNN_RINpzDf26h/embed?start=false&loop=false&delayms=3000"}),Object(f.jsxs)("div",{children:[Object(f.jsx)("h2",{children:"Lesson Content:"}),Object(f.jsx)("h3",{children:"Functions:"}),"Functions are a way of working with unknown values, and producing a desired value for all combinations. Functions are instantiated by the"," ",Object(f.jsx)("b",{style:{color:"blue"},children:"def"})," statement and are made up of 4 parts -- each necessary for understandable code. They are:",Object(f.jsxs)("ul",{children:[Object(f.jsx)("li",{children:"Function Name"}),Object(f.jsx)("li",{children:"Parameters"}),Object(f.jsx)("li",{children:"Docstring"}),Object(f.jsx)("li",{children:"Function Body"})]}),"Let's write the ",Object(f.jsx)("b",{style:{color:"blue"},children:"add()"})," function together, part by part, and then put it together at the end.",Object(f.jsx)("h3",{children:"Function Names:"}),"Function names are given based on what the purpose of a function is. If a function counts the number of students at MWA, we might call that function ",Object(f.jsx)("b",{style:{color:"blue"},children:"count_wave_makers"}),". If we want a function that creates a story, we might name it"," ",Object(f.jsx)("b",{style:{color:"blue"},children:"create_story"}),". Function names are always written in ",Object(f.jsx)("b",{style:{color:"blue"},children:'"snake_case"'}),"; this means that instead of spaces, we use underscores.",Object(f.jsxs)("pre",{children:["this_is_written_in_snake_case","\n","\n","so_is_this","\n","\n","count_17th_wave","\n","\n","# --\x3e These are all valid function names","\n","\n","# --\x3e However, in practice, function names should be short so they can be referred to easily.","\n","\n","# Following these guidelines, a good name for our function, add, is just that. The first line of our function will be:","\n","\n","def add"]}),Object(f.jsx)("h3",{children:"Function Parameters:"}),"Functions use parameters to refer to user inputs within the function body. Parameters make any input vague, and that is a good thing for writing good functions. We refer to input by using the parameters of the function. Parameters of any function are defined within a set of parenthesis, ",Object(f.jsx)("b",{style:{color:"blue"},children:"()"}),", and seperated by commas. The statement is ended with a colon,"," ",Object(f.jsx)("b",{style:{color:"blue"},children:":"}),".",Object(f.jsxs)("pre",{children:["# Our add() function is going to take in two parameters: ",Object(f.jsx)("b",{children:"x"})," ","and ",Object(f.jsx)("b",{children:"y"}),". We will refer to objects passed in using these two parameters.","\n","\n","# So far, our function looks like this:","\n","\n","def add(x, y):","\n"]}),Object(f.jsx)("h3",{children:"Function Docstring:"}),"The ",Object(f.jsx)("b",{style:{color:"blue"},children:"docstring"})," of a function is where the description of a function goes. This text is a comment that gives us two things:",Object(f.jsxs)("ol",{children:[Object(f.jsx)("li",{children:"A Function Description"}),Object(f.jsx)("ul",{children:Object(f.jsxs)("li",{children:["The description tells exactly what the function should do, and how we should expect it to work once it is fully implemented. The docstring is necessary for ",Object(f.jsx)("i",{children:"other people"})," to understand your code, not so much for python."]})}),Object(f.jsx)("li",{children:"Test Cases"}),Object(f.jsx)("ul",{children:Object(f.jsx)("li",{children:"Test cases are written exactly how we'd see them in the Python terminal. They show us examples of how the function should work with different kinds of inputs."})})]}),Object(f.jsxs)("pre",{children:["# A valid docstring for our function,"," ",Object(f.jsx)("b",{style:{color:"blue"},children:"add"})," contains a good description about its implementation,","\n","#","       ","and provides examples, test cases, of how it should work. It may look like this:","\n","\n",'"""add is a function that takes in two numbers, x and y, and returns their sum',"\n",">>> add(3, 5)","\n","8","\n",">>> add(98, -12)","\n","86","\n",'"""',"\n","\n","# Putting what we have together, our function, so far, is:","\n","\n","def add(x, y):","\n","    ",'"""add is a function that takes in two numbers, x and y, and returns their sum',"\n","    ",">>> add(3, 5)","\n","    ","8","\n","    ",">>> add(98, -12)","\n","    ","86","\n","    ",'"""',"\n"]}),Object(f.jsx)("h3",{children:"Function Body:"}),"The function body is where the magic of the function truly happens. This is where the parameters are manipulated and operations are executed. The key is to always refer to parameter names, and never specific values. If you do that, your function will only work for those specific values. Referring to values loosely using parameters allows functions to work exactly the same on any parameters.",Object(f.jsx)("br",{}),Object(f.jsx)("br",{}),Object(f.jsx)("b",{children:"NOTE:"})," The ",Object(f.jsx)("b",{style:{color:"blue"},children:"return"})," statement is very important in functions. This is the very last thing in any function and it will exit the function body. Anything that you want a function to do needs to happen before returning.",Object(f.jsxs)("pre",{children:["# For our function, ",Object(f.jsx)("b",{style:{color:"blue"},children:"add"}),", a valid function body is as follows:","\n","\n","sum = x + y","     ","--\x3e parameter values x and y are summed together and stored in the sum variable","\n","return sum","      ","--\x3e we return that sum and exit out of the function","\n","\n","# putting our function together, we have:","\n","\n","def add(x, y):","\n","    ",'"""add is a function that takes in two numbers, x and y, and returns their sum',"\n","    ",">>> add(3, 5)","\n","    ","8","\n","    ",">>> add(98, -12)","\n","    ","86","\n","    ",'"""',"\n","    ","sum = x + y","\n","    ","return sum","\n"]}),Object(f.jsx)("h3",{children:"CONGRATS! YOU JUST WROTE YOUR FIRST FUNCTION!!!"})]})]}),Object(f.jsx)(S,{})]})};var ae=function(){return Object(f.jsxs)("div",{children:[Object(f.jsx)(x,{}),Object(f.jsxs)("div",{className:"wmcode-page",children:[Object(f.jsx)(p.a,{as:"h1",children:"Lesson 3 - Functions Cont'd"}),Object(f.jsx)("a",{href:"./wmcodeDownloads/wm_lesson3.zip",download:!0,children:Object(f.jsx)(g.a,{basic:!0,color:"blue",children:"Download Lesson"})}),Object(f.jsx)("br",{})," ",Object(f.jsx)("br",{}),Object(f.jsx)("br",{}),Object(f.jsx)(oe,{src:"https://docs.google.com/presentation/d/e/2PACX-1vRhuQOwdNTsFaWH2tf3KlJB2ysWB5vjbcUKOabIU1x_ZSVyxW-bTCpVe9nZg5jo_kHyuMC46IoNgegm/embed?start=false&loop=false&delayms=3000"}),Object(f.jsxs)("div",{children:[Object(f.jsx)("h2",{children:"Lesson Content:"}),Object(f.jsx)("h3",{children:"Calculator Review"}),"An in-depth analysis of what is really happening in the calculator project.",Object(f.jsx)("br",{}),Object(f.jsx)("br",{}),"Acceptable code for this project is:",Object(f.jsxs)("pre",{children:["def add(x, y):","\n","    ",'"""Docstring"""',"\n","    ","added = x + y","\n","    ","return added","\n","\n","def subtract(x, y):","\n","    ",'"""Docstring"""',"\n","    ","subtracted = x - y","\n","    ","return subtracted","\n","\n","def divide(x, y):","\n","    ",'"""Docstring"""',"\n","    ","divided = x / y","\n","    ","return divided","\n","\n","def divide_whole(x, y):","\n","    ",'"""Docstring"""',"\n","    ","return x // y","              ","--\x3e NOTICE: It is acceptable to simply return the desired value","\n","\n","def power(x, y):","\n","    ",'"""Docstring"""',"\n","    ","return x ** y","              ","--\x3e NOTICE PT2: Assignment is not necessary","\n","\n","def remainder(x, y):","\n","    ",'"""Docstring"""',"\n","    ","return x % y","               ","--\x3e Simple returns are used more often","\n"]}),Object(f.jsx)("h3",{children:"The Cardinal Rule:"}),Object(f.jsx)("b",{style:{color:"blue"},children:"IF YOU REPEAT YOURSELF MORE THAN ONCE, WRITE A FUNCION!!!"}),Object(f.jsx)("h3",{children:"Coding Practice:"}),"A walk-through and demonstration of the power of functions. Important notes on how function decomposition really cleans up code, and makes programming easier.",Object(f.jsx)("h3",{children:"Demonstration Functions:"}),Object(f.jsxs)("pre",{children:["from operator import abs, add, mul","\n","\n","def hypotenuse(x, y):","\n","    ",'"""Takes in the lengths of two triangle legs, and outputs the length of that',"\n","    ","triangle's corresponding hypotenuse.","\n","\n","    ",">>> hypotenuse(9, 12)","\n","    ","15","\n","    ",">>> hypotenuse(10, 14)","\n","    ","17","\n","    ",'"""',"\n","    ","##YOUR CODE HERE##","\n","\n","def distance_between(x1, y1, x2, y2):","\n","    ",'"""The distance_between function takes in the x and y coordinates of two',"\n","    ","points on a plane, and returns the distance between them. It may be useful","\n","    ","to write helper functions!","\n","\n","    ","NOTE: Can distance be negative?","\n","\n","    ",">>> distance_between(5, 5, 10, 10)","\n","    ","7.0710678118654755","\n","    ",">>> distance_between(0, 0, 20, 20)","\n","    ","26.8701","\n","    ",'"""',"\n","    ","##YOUR CODE HERE##","\n","\n","def sqrt(x):","\n","    ",'"""The square root function takes in a single number, and returns its',"\n","    ","square root.","\n","\n","    ",">>> sqrt(49)","\n","    ","7","\n","    ",">>> sqrt(99)","\n","    ","9.9498743710662","\n","    ",'"""',"\n","    ","##YOUR CODE HERE##","\n","\n","def square(x):","\n","    ",'"""Returns the squared value of the given term.',"\n","\n","    ",">>> square(9)","\n","    ","81","\n","    ",">>> square(8)","\n","    ","64","\n","    ",'"""',"\n","    ","##YOUR CODE HERE##","\n","            "]}),Object(f.jsx)("h3",{children:"Independent Practice / Exploration Functions:"}),Object(f.jsxs)("pre",{children:["def discriminant(a, b, c):","\n","    ",'"""The discriminant takes in the coefficients, a, b, and c, of a quadratic',"\n","    ","function in the form (ax^2 + bx + c) and returns its discriminant","\n","\n","    ",">>> discriminant(4, 2, 5)","\n","    ","-78","\n","    ",">>> discriminant(2, 3, 1)","\n","    ","1","\n","    ",'"""',"\n","    ","##YOUR CODE HERE##","\n","\n","def right_triangle_area(base, height):","\n","    ",'"""Takes in the base and height of an arbitrary right triangle, and returns',"\n","    ","the area of the given triangle.","\n","    ","Assume that all inputs produce a proper right triangle.","\n","\n","    ",">>> right_triangle_area(10, 5)","\n","    ","25","\n","    ",">>> right_triangle_area(16, 8)","\n","    ","64","\n","    ",'"""',"\n","    ","##YOUR CODE HERE##","\n","\n","def second_to_last(x):","\n","    ",'"""Takes in an arbitrary number, and returns the second digit from the right;',"\n","    ","the second to last digit. Assume that all inputs have at least 2 digits.","\n","\n","    ",">>> second_to_last(9893473478)","\n","    ","7","\n","    ",">>> second_to_last(64)","\n","    ","6","\n","    ",'"""',"\n","    ","##YOUR CODE HERE##","\n","\n","def mul_second_to_lasts(num1, num2):","\n","    ",'"""Computes the second to last digits of two constants, num1 and num2, and',"\n","    ","returns their value when multiplied together.","\n","\n","    ",">>> mul_second_to_lasts(98348973, 98)","     ","--\x3e 7 * 9","\n","    ","63","\n","    ",">>> mul_second_to_lasts(18, 45823)","        ","--\x3e 1 * 2","\n","    ","2","\n","    ",'"""',"\n","    ","##YOUR CODE HERE##","\n","\n","def feet_in_to_cm(feet, inches):","\n","    ",'"""Converts an arbitrary height in feet an inches to its equivalent in',"\n","    ","centimeters. Consider using a helper function!","\n","    ","NOTE: One inch is equal to 2.54 centimeters.","\n","\n","    ",">>> feet_in_to_cm(6, 5)","\n","    ","198.58","\n","    ",">>> feet_in_to_cm(98, 7)","\n","    ","3004.82","\n","    ",'"""',"\n","    ","##YOUR CODE HERE##","\n","\n","def cm_helper(x):","\n","    ",'"""Takes in an argument x and returns its value after being multiplied by',"\n","    ","a factor of 2.54.","\n","\n","    ","Note where this function is.","\n","\n","    ",">>> cm_helper(53)","\n","    ","55.54","\n","    ",'"""',"\n","    ","##YOUR CODE HERE##","\n","            "]}),Object(f.jsx)("h1",{children:"..."})]})]}),Object(f.jsx)(S,{})]})};var ce=function(){return Object(f.jsxs)("div",{className:"wmcode-page",children:[Object(f.jsx)(x,{}),Object(f.jsxs)("div",{children:[Object(f.jsx)(p.a,{as:"h1",children:"Lesson 4 - Conditional Statements "}),Object(f.jsx)("a",{href:"./wmcodeDownloads/wm_lesson4.zip",download:!0,children:Object(f.jsx)(g.a,{basic:!0,color:"blue",children:"Download Lesson"})}),Object(f.jsx)("br",{})," ",Object(f.jsx)("br",{}),Object(f.jsx)("br",{}),Object(f.jsx)(oe,{src:"https://docs.google.com/presentation/d/e/2PACX-1vQTyWrA7EKOhqeJUr7U9WH0S0z-_qlvt8Sog_tuSBQc9Y6AJ3PYw8e554ZwHaDLplUrwmNEXeO9PHVA/embed?start=false&loop=false&delayms=3000"})]}),Object(f.jsxs)("div",{children:[Object(f.jsx)("br",{}),Object(f.jsx)("h2",{children:"Lesson Content:"}),Object(f.jsx)("h3",{children:"Conditional Statements - Motivation"}),"When solving any problem, we, as humans will almost always go through a simple process in our heads: going through all possible outcomes of a situation. Let\u2019s follow this simple situation that we have all gone through:",Object(f.jsx)("br",{}),Object(f.jsx)("br",{}),"You are trying to figure out what to wear on a given day, by looking at the weather. What process do you go through, implicitly?",Object(f.jsx)("br",{}),Object(f.jsx)("h4",{children:"Step 1 - The Easiest Solution"}),"For any given day, we as Californians, will first evaluate the easiest solution. Before looking outside, the first step we take will be something like:",Object(f.jsxs)("pre",{children:["If it is 75\xb0 or hotter:","\n","Then I don\u2019t need to wear a sweater. I can go out in a t-shirt."]}),Object(f.jsx)("h4",{children:"Step 2 - The Next Best Solution"}),"Then, having not looked outside yet, we will look for the next easiest solution to what to wear. If we get to this point, we will know that it is not sunny outside, so our new evaluation will be something like:",Object(f.jsxs)("pre",{children:["Else, if it\u2019s colder than 75\xb0, but 65\xb0 or warmer:","\n","Then I\u2019ll put on a hoodie. The weather won\u2019t be that bad."]}),Object(f.jsx)("h4",{children:"Step 3 - The Catch-All Solution"}),"Having gone through our best-possible outcomes, we will have to default to one solution. Because it is the catch-all does not mean that it\u2019s a bad solution; it means that we will always have a solution for all possible situations.",Object(f.jsxs)("pre",{children:["Otherwise, if it\u2019s less than 65\xb0 outside:","\n","Then I\u2019ll put on a jacket, to be ready for any kind of weather."]}),Object(f.jsx)("h4",{children:"Does This Sound Familiar?"}),"This is the exact same problem-solving strategy that we all go through, implicitly. We don\u2019t necessarily do it consciously, but we go through each of these steps.",Object(f.jsx)("i",{children:"Python wants us to EXPLICITLY tell it when to go into any of these situations (Python calls them \u201ccases\u201d)."}),Object(f.jsx)("br",{}),Object(f.jsx)("h4",{children:"Let's Put it All Together"}),"Putting together our example, we get this chunk of execution:",Object(f.jsxs)("pre",{children:["If it is 75\xb0 or hotter:","\n","    ","Then I don\u2019t need to wear a sweater. I can go out in a t-shirt.","\n","Else, if it\u2019s colder than 75\xb0, but 65\xb0 or warmer:","\n","    ","Then I\u2019ll put on a hoodie. The weather won\u2019t be that bad.","\n","Otherwise, if it\u2019s less than 65\xb0 outside:","\n","    ","Then I\u2019ll put on a jacket, to be ready for any kind of weather."]}),Object(f.jsx)("h3",{children:"How Do We Get Python to Understand This?"}),Object(f.jsxs)("h4",{children:["Step 1: The ",Object(f.jsx)("b",{style:{color:"blue"},children:"if"})," Statement"]}),"The ",Object(f.jsx)("b",{style:{color:"blue"},children:"if"})," statement is the most basic element of control flow in Python, and is essential for catching special cases in any program.",Object(f.jsx)("br",{}),"In our example, the most basic solution for our example is"," ",Object(f.jsx)("b",{style:{color:"blue"},children:"if"})," the weather is 75\xb0 or warmer."," ",Object(f.jsx)("b",{style:{color:"blue"},children:"if"})," this is true, then there is no need to evaluate the other options; we found the best one already.",Object(f.jsx)("br",{}),Object(f.jsxs)("h4",{children:["Step 2: The ",Object(f.jsx)("b",{style:{color:"blue"},children:"else if"})," Statement"]}),"The ",Object(f.jsx)("b",{style:{color:"blue"},children:"elif"})," statement can be thought of as the \u201cnext best option\u201d when trying to find a solution. It is short for \u201celse if.\u201d",Object(f.jsx)("br",{}),"In our example, it might not be the best that it is less than 75\xb0, but, being 65\xb0 or warmer is actually not that bad. So, we go with that one; our solution has been reached.",Object(f.jsx)("br",{}),Object(f.jsxs)("h4",{children:["Step 3: The ",Object(f.jsx)("b",{style:{color:"blue"},children:"else"})," Statement"]}),"The else statement is the \u201ccatch-all\u201d solution, when trying to find one. We reach this option after exhausting all possible solutions, and are confident that it will work to cover any situation.",Object(f.jsx)("br",{}),"In our example, it\u2019s unfortunate that the weather outside would be less than 65\xb0, but we know, and are confident that wearing a jacket will work for ANY weather below that threshold. And with that, we have found a solution.",Object(f.jsx)("h3",{children:"The Python Translation of This Form of Thinking"}),"As we discussed last week, Python speaks and understands humans in terms of functions and their output. We could write a function with the very same process that we went through to choose what to wear based on the weather.",Object(f.jsx)("br",{}),"A valid name, parameter, docstring, and body for this function is:",Object(f.jsxs)("pre",{children:["def choose_clothes(temperature):","\n","    ",'"""Takes in the temperature, in degrees Fahrenheit, and makes a suggestion on what to wear.',"\n","\n","    ",">>> choose_clothes(80)","\n","    ","'You do not need a sweater. A t-shirt will be fine.'","\n","    ",">>> choose_clothes(-32)","\n","    ","'You should wear a jacket to be ready for any weather.'","\n","    ",'"""',"\n","    ",'response = "This will be changed."',"\n","    ","if temperature >= 75:","\n","        ",'response = "You do not need a sweater. A t-shirt will be fine."',"\n","    ","elif temperature >= 65:","\n","        ",'response = "The weather will not be that bad. Wear a hoodie."',"\n","    ","else:","\n","        ",'response = "You should wear a jacket to be ready for any weather."',"\n","    ","return response"]}),Object(f.jsx)("h3",{children:"Final Notes"}),"We have gone over 3 special Python statements: if, elif, and else. Some things to remember:",Object(f.jsxs)("ul",{children:[Object(f.jsx)("li",{children:"You can use multiple if statements if you so desire. It is aesthetically nicer and better practice to use elif statements, though."}),Object(f.jsx)("li",{children:"You can use as many elif statements as you need. You may need only one; you may need 10; you may not need any at all."}),Object(f.jsx)("li",{children:"You should always have an else block in your conditional statements. This is to make sure that you always have a solution."})]}),Object(f.jsx)("h1",{children:"..."})]}),Object(f.jsx)(S,{})]})};var le=function(){return Object(f.jsxs)("div",{className:"wmcode-page",children:[Object(f.jsx)(x,{}),Object(f.jsxs)("div",{children:[Object(f.jsx)(p.a,{as:"h1",children:"Lesson 5 - Booleans"}),Object(f.jsx)("a",{href:"./wmcodeDownloads/wm_lesson5.zip",download:!0,children:Object(f.jsx)(g.a,{basic:!0,color:"blue",children:"Download Lesson"})}),Object(f.jsx)("br",{})," ",Object(f.jsx)("br",{}),Object(f.jsx)("br",{}),Object(f.jsx)(oe,{src:"https://docs.google.com/presentation/d/e/2PACX-1vQyrNJIQSFlBhPE513yeLkuhEAXhUvtfrIBo32Lg9wfTJc88Lk9klKNbL8JXwur8XQV7BkS1Lzrd7Cp/embed?start=false&loop=false&delayms=3000"}),Object(f.jsx)("br",{})]}),Object(f.jsxs)("div",{children:[Object(f.jsx)("h2",{children:"Lesson Content:"}),Object(f.jsx)("h3",{children:"Boolean Values - Motivation"}),"To motivate what Boolean value is, and what it does, let's play a guessing game.",Object(f.jsx)("br",{}),"** See the slides for a full demo of the guessing game **",Object(f.jsx)("h3",{children:"Coding Demo"}),"To gain a better understanding of what is going one, it is best that we write what Python is actually interpreting under its magical hood.",Object(f.jsx)("br",{}),"First, we intuitively write out our code with helper functions that will determine what is happening in comparisons, without any effort. We compare their return values to ",Object(f.jsx)("b",{children:"True"})," and ",Object(f.jsx)("b",{children:"False"})," because it makes sense. Here's what we will have at this point:",Object(f.jsxs)("pre",{children:["real_num = 10","\n","\n","def over_under(guess):","\n","\u201c\u201c\u201cover_under is a guessing game that uses user input to generate hints.\u201d\u201d\u201d","\n","    ","if guess == real_num:","\n","        ","print(\u201cYay! You guessed it!\u201d)","\n","    ","elif is_over(guess) == True:","\n","        ","print(\u201cTry something lower than that.\u201d)","\n","    ","elif is_under(guess) == True:","\n","    ","print(\u201cTry something bigger.\u201d)","\n"]}),"After deciding that this implementation WILL work for anything, then we can move onto out helper functions, and decide how to write them. **See the video for more about these helpers.** After writing them, they may look like:",Object(f.jsxs)("pre",{children:["def is_over(guess):","\n","    ","return guess > real_num","\n","\n","def is_under(guess):","\n","    ","return guess < real_num","\n"]}),Object(f.jsx)("h3",{children:"What Just Happened?"}),Object(f.jsx)("h4",{children:"As humans, we ask ourselves:"}),Object(f.jsx)("i",{children:"\u201cIs the current guess over or under the true value?\u201d"}),Object(f.jsx)("br",{}),"We get, as a response:",Object(f.jsx)("i",{children:"\u201cYes\u201d"})," or ",Object(f.jsx)("i",{children:"\u201cNo\u201d"}),".",Object(f.jsx)("h4",{children:"Python is a little more sophisticated. It asks:"}),Object(f.jsx)("i",{style:{color:"blue"},children:"is_over(guess)"})," or"," ",Object(f.jsx)("i",{style:{color:"blue"},children:"is_under(guess)"}),"?",Object(f.jsx)("br",{}),"It expects:",Object(f.jsx)("i",{style:{color:"orange"},children:"True"})," or"," ",Object(f.jsx)("i",{style:{color:"orange"},children:"False"}),".",Object(f.jsx)("h3",{children:"Comparing Humans and Python"}),"Both humans, and Python seek either of a:",Object(f.jsxs)("ul",{children:[Object(f.jsx)("li",{children:"Positive response, or"}),Object(f.jsx)("li",{children:"Negative response,"})]}),"And will do something differently depending on the response. For us, it is very easy to determine what is over/under, left/right, next/last, etc.",Object(f.jsx)("br",{}),"But, we have various different ways of expressing these things; a funny look, a slap on the wrist, getting yelled at, etc.",Object(f.jsx)("br",{}),"For Python, there are only certain things that can represent either a yes or no. These values are split into two categories:",Object(f.jsxs)("ul",{children:[Object(f.jsx)("li",{children:"False-y values, and"}),Object(f.jsx)("li",{children:"Truth-y values"})]}),Object(f.jsx)("h3",{children:"Python Boolean Values"}),Object(f.jsx)("h4",{children:"False-y Values:"}),"Python has 4 types of ",Object(f.jsx)("b",{children:"False"})," values:",Object(f.jsxs)("ul",{children:[Object(f.jsx)("li",{children:"Empty objects"}),Object(f.jsxs)("ul",{children:[Object(f.jsx)("li",{children:"Strings, Array, Lists, and Dictionaries"}),Object(f.jsx)("li",{children:"We will talk more about all of these in later lessons."})]}),Object(f.jsx)("li",{children:"The number 0"}),Object(f.jsxs)("li",{children:["The value ",Object(f.jsx)("i",{style:{color:"orange"},children:"null"}),", and"]}),Object(f.jsxs)("li",{children:["The value ",Object(f.jsx)("i",{style:{color:"orange"},children:"False"})]})]}),Object(f.jsx)("h4",{children:"Truth-y Values"}),"Python has one main type of ",Object(f.jsx)("b",{children:"True"})," value.",Object(f.jsxs)("ul",{children:[Object(f.jsxs)("li",{children:["Everything that is not ",Object(f.jsx)("b",{children:"False"})]}),Object(f.jsxs)("ul",{children:[Object(f.jsx)("li",{children:"Objects with data stored in them."}),Object(f.jsx)("li",{children:"Any number not 0, and"}),Object(f.jsxs)("li",{children:["The value ",Object(f.jsx)("i",{style:{color:"orange"},children:"True"})]})]})]}),Object(f.jsx)("h3",{children:"Refactoring Our Code"}),"Though our functions from earlier were nice, and pretty, they were actually quite clunky. By taking advantage of boolean identities, we can actually make things a lot easier to read, and completely get rid of our helper functions.",Object(f.jsx)("br",{}),"Our new function may look something like this:",Object(f.jsxs)("pre",{children:["real_num = 10","\n","def over_under(guess):","\n","    ","\u201c\u201c\u201cover_under is a guessing game that uses user input to generate hints.\u201d\u201d\u201d","\n","    ","if guess == real_num:","\n","        ","print(\u201cYay! You guessed it!\u201d)","\n","    ","elif guess > real_num:","\n","        ","print(\u201cTry something lower than that.\u201d)","\n","    ","elif guess < real_num:","\n","        ","print(\u201cTry something bigger.\u201d)","\n"]}),"(See the video for more notes on how this is actually better!)",Object(f.jsx)("h3",{children:"Now, Why Are Booleans Useful?"}),"Boolean values serve as additional levels of robustness for our code.",Object(f.jsx)("br",{}),"Booleans make special cases easy to catch, with minimal code.",Object(f.jsx)("br",{}),"Keeps redundancy away.",Object(f.jsx)("br",{}),"We don\u2019t have to write functions to explicitly tell Python what is good or bad.",Object(f.jsx)("h3",{children:"Final Note"}),"If you are ever curious about what something in Python's boolean return value is, you can use the built-in Python"," ",Object(f.jsx)("b",{style:{color:"blue"},children:"bool()"})," function with your item as the parameter, and Python will tell you!!",Object(f.jsx)("h1",{children:"..."})]}),Object(f.jsx)(S,{})]})};var de=function(){return Object(f.jsxs)("div",{children:[Object(f.jsx)(x,{}),Object(f.jsxs)("div",{className:"wmcode-page",children:[Object(f.jsx)(p.a,{as:"h1",children:"Lesson "}),Object(f.jsx)(oe,{})]}),Object(f.jsx)(S,{})]})};var he=function(){return Object(f.jsxs)("div",{children:[Object(f.jsx)(x,{}),Object(f.jsxs)("div",{className:"wmcode-page",children:[Object(f.jsx)(p.a,{as:"h1",children:"Lesson "}),Object(f.jsx)(oe,{})]}),Object(f.jsx)(S,{})]})};var ue=function(){return Object(f.jsxs)("div",{children:[Object(f.jsx)(x,{}),Object(f.jsxs)("div",{className:"wmcode-page",children:[Object(f.jsx)(p.a,{as:"h1",children:"Lesson "}),Object(f.jsx)(oe,{})]}),Object(f.jsx)(S,{})]})};var je=function(){return Object(f.jsxs)("div",{children:[Object(f.jsx)(x,{}),Object(f.jsxs)("div",{className:"wmcode-page",children:[Object(f.jsx)(p.a,{as:"h1",children:"Lesson "}),Object(f.jsx)(oe,{})]}),Object(f.jsx)(S,{})]})};var be=function(e){return!!e.src?Object(f.jsx)("div",{class:"embedded",children:Object(f.jsx)("iframe",{width:"560",height:"315",src:e.src,title:"YouTube video player",frameborder:"0",allow:"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; fullscreen;",allowfullscreen:!0})}):Object(f.jsx)("div",{style:{textAlign:"center",margin:"10em"},children:Object(f.jsx)(p.a,{as:"h3",children:"Coming Soon!"})})};var pe=function(e){return Object(f.jsxs)("div",{children:[Object(f.jsx)(x,{}),Object(f.jsx)(p.a,{as:"h1",children:e.header}),Object(f.jsx)("a",{href:e.lessonDownload,download:!0,children:Object(f.jsx)(g.a,{basic:!0,color:"blue",children:"Download Lesson Folder"})}),Object(f.jsx)(p.a,{as:"h3",children:"Description:"}),Object(f.jsx)(p.a,{as:"h4",children:e.description}),Object(f.jsxs)(p.a,{as:"h3",children:["Slides",Object(f.jsx)("a",{href:e.slideLink,target:"_blank",rel:"noopener noreferrer",children:"(link)"}),":"]}),Object(f.jsx)(oe,{src:e.slideSrc}),Object(f.jsx)(p.a,{as:"h3",children:"Recording:"}),Object(f.jsx)(be,{src:e.videoSrc}),e.children,Object(f.jsx)(S,{})]})};var me=function(){return Object(f.jsx)(pe,{header:"Welcome to PREP!",description:"Hello everyone! Welcome to PREP CS 2021. Today, we'll introduce the CS instructors, show the set up for the class, and provide logistics. We will go over how to download Python, the text editor, and how to use the terminal to create folders and organize files.",slideSrc:"https://docs.google.com/presentation/d/e/2PACX-1vSx-nn2Z3LpzeM-J9xufvDpZms5n8SdB1eZn0_JrYmADSb2_sdN4p_g_-A0dBMzkf9la6_Lgr7p3-my/embed?start=false&loop=false&delayms=3000",prevLesson:null,nextLesson:"",released:!0,videoSrc:"https://www.youtube.com/embed/R-88HPjWN-k",slideLink:"https://docs.google.com/presentation/d/16-TB_tYLa2fRPUUI3vaibTFIufKwhFVqgPRfYtwIp7A/edit?usp=sharing"})};var fe=function(){return Object(f.jsx)(pe,{header:"Python Syntax",description:"An introduction to Python, including data types and its basic syntax. Definitions for  different python operators and how to evaluate expressions using orders of operations, analogies, and examples. Keep  in mind that the actual language we're using doesn't matter too much, since what we're trying to teach here are features that are common to every programming language. This is a skill that will be useful for both CS10 and CS61A. :)",slideSrc:"https://docs.google.com/presentation/d/e/2PACX-1vT4buFB6NV7iMWVAY4IziZE6ZKLoZEOATn6Hmusg0x8Mq2AmeLo0R4oB-itT2deqESoRmXCSHh3MZHa/embed?start=false&loop=false&delayms=3000",prevLesson:"",nextLesson:"",released:!0,videoSrc:"https://www.youtube.com/embed/j1iVh5eHGxI",slideLink:"https://docs.google.com/presentation/d/1PBOv_KWu_MJi5Ax-tSFCiTR0yz6PxNxAxzyoIx9M284/edit?usp=sharing"})};var xe=function(){return Object(f.jsx)(pe,{header:"Functions and If-Statements",description:"Today's lesson will include how assignments are made. It will also focus on functions: their anatomy, how to write them, and when they are necessary. We will also introduce if-statements: their  structure and examples. ",slideSrc:"https://docs.google.com/presentation/d/e/2PACX-1vQz89eLN_PxZd94zgRAeotYg3dFyob3dFV1NYmP2jzG9hqKJ0b871Y4mpXMjutIeXLZSVSRM5GlZgbT/embed?start=false&loop=false&delayms=3000",prevLesson:"",nextLesson:"",videoSrc:"https://www.youtube.com/embed/GbNe2si14sg",slideLink:"https://docs.google.com/presentation/d/1fPmNOmagso5gyqxniew7uQE5onsu3bbUblHCHN-WbvM/edit?usp=sharing"})};var Oe=function(){return Object(f.jsx)(pe,{header:"Control",description:"This lesson expands on if-statements by adding on elif and else. After the examples of the if-elif-else  control block we will seek help from environment diagrams. ",slideSrc:"https://docs.google.com/presentation/d/e/2PACX-1vQvchYex4y1esn7nbRjOPzfH2NdtvoPEvNqjEr74cDGj5ajb5lomUR4SML-JYVc4E4mMt__w99bsNGR/embed?start=false&loop=false&delayms=3000",prevLesson:null,nextLesson:"",videoSrc:"https://www.youtube.com/embed/ymTeLrLzsIM",lessonDownload:"./prepDownloads/prep_lesson4.zip",slideLink:"https://docs.google.com/presentation/d/1t6F-lPGgsKP5yCIXonO_3z3uwd0-dN_iwfoDMZPyy9Y/edit?usp=sharing"})};var ge=function(){return Object(f.jsx)(pe,{header:"Control: The 'While' Loop",description:" The while loop is a great addition to any coder\u2019s toolbox. In this lesson we will introduce the while loop: how it works and why we would include them in our code with practice problems to follow up.",slideSrc:"https://docs.google.com/presentation/d/e/2PACX-1vRdU8YMN8JVxd4xFE6Wbs2GTR33mRv6094Trrfsu4QrS0OPH0ReLLEIuKf7jcUfug0tOOkrt-QnUmLC/embed?start=false&loop=false&delayms=3000",prevLesson:null,nextLesson:"",videoSrc:"https://www.youtube.com/embed/6qdTU_qO3bo",lessonDownload:"./prepDownloads/prep_lesson5.zip",slideLink:"https://docs.google.com/presentation/d/1MbGrY7KQdsk_I-ycXg8aH3ochx48QhI_RVK4lj_9P-U/edit?usp=sharing"})},we=n(157),ye=n.n(we);n(417);var ve=function(e){return Object(f.jsx)("div",{className:"codeblock",children:Object(f.jsx)(ye.a,{className:"python",children:e.code})})};var Te=function(){return Object(f.jsx)(f.Fragment,{children:Object(f.jsxs)(pe,{header:"Iterables and the 'For' Loop",description:"What are iterables? What are the different types of iterables? Today we will discuss for loops and when to use them instead of while loops.",slideSrc:"https://docs.google.com/presentation/d/e/2PACX-1vRjODe7bzL9NYyw9p-EyNZJ6lFu4CV0gzFQS0vjxICy3aeVsvqIc3BsahWS3frP9-SPm_A5qMt_SARL/embed?start=false&loop=false&delayms=3000",prevLesson:null,nextLesson:"",videoSrc:"https://www.youtube.com/embed/BKh9iRQQDxM",slideLink:"https://docs.google.com/presentation/d/1DyzrfbdbxW_4RtJQ1B48QXbIDuxh0fkmVJSJzgY2SBk/edit?usp=sharing",lessonDownload:"./prepDownloads/prep_lesson6.zip",children:[Object(f.jsx)(p.a,{as:"h3",children:"Practice Problem Solutions:"}),Object(f.jsx)(ve,{code:'\n##############################################\n######### PRACTICE PROBLEM SOLUTIONS #########\n##############################################\n\n\ndef first_names_for(lst):\n    """Takes in a list of people, with each person listed as a tuple, and returns\n    a list of the first names of everyone in the list. The overall format of lst is:\n    [(first1, last1, age1), (first2, last2, age2) ...]\n\n    >>> first_names(first_list)\n    [\'Fairy\', \'Prince\', \'Princess\']\n    >>> first_names(second_list)\n    [\'Tomas\', \'Winnie\', \'Oski\', \'Mickey\']\n    """\n    firsts = []\n    for people in lst:\n        name = people[0]  # access the first element of the i-th item in lst\n        firsts.append(name)\n    return firsts\n\n\ndef tup_to_dict_for(lst):\n    """Takes in a list of 2-item tuples and returns a dictionary with the items\n    as key-value pairs in the format {firstItem: secondItem, ...}\n\n    >>> tup_to_dict_for(first_list) \n    {"Fairy": "Godmother", "Prince": "Charming", "Princess": "Fiona"}\n    """\n    d = {}\n    for tup in lst:\n        first, second = tup[0], tup[1]\n        d[first] = second\n    return d\n\n    # NOTE THE TEST WILL SAY THIS FAILS, BUT ITS JUST THAT ITS SINGLE QUOTES\n    # INSTEAD OF DOUBLE QUOTES\n\n\ndef last_names(lst):\n    """Takes in a list of people, with each person listed as a tuple, and returns\n    a list of the first names of everyone in the list. The overall format of lst is:\n    [(first1, last1, age1), (first2, last2, age2) ...]\n\n    >>> last_names(first_list)\n    [\'Godmother\', \'Charming\', \'Fiona\']\n    >>> last_names(second_list)\n    [\'The Train\', \'The Pooh\', \'Bear\', \'Mouse\']\n    """\n    firsts = []\n    for people in lst:\n        name = people[1]\n        firsts.append(name)\n    return firsts\n\n\ndef zip_lists(lst1, lst2):\n    """Takes 2 lists and puts them together as key value pairs of a dictionary.\n    Dictionary structure should be: {i-th elem of lst1: i-th elem of lst2 ...}\n\n    >>> zip_lists([1, 2, 3], ["one", "two", "three"])\n    {1: \'one\', 2: \'two\', 3: \'three\'}\n    """\n    if len(lst1) != len(lst2):\n        return                  # this ensures that we have the same number of elements\n    d = {}\n    for i in range(len(lst1)):\n        item1, item2 = lst1[i], lst2[i]\n        d[item1] = item2\n    return d\n\n\ndef unzip_dict(d):\n    """Takes a dictionary and returns its key-value pairs stored as 2-item tuples\n    within a list. Format of tuples should be (<key>, <value>)\n\n    >>> unzip_dict({1: \'one\', 2: \'two\', 3: \'three\'})\n    [(1, \'one\'), (2, \'two\'), (3, \'three)]\n    """\n    lst = []\n    for key in d.keys():\n        val = d[key]\n        tup = tuple((key, val))\n        lst.append(tup)\n    return lst\n\n'})]})})};var ke=function(){return Object(f.jsx)(pe,{header:"Higher-Order Functions",description:"Today's lesson focuses on Higher Order Functions (or HOFs for short)! These are functions that either return another function or pass in a function as a parameter. After some examples we discuss their practical uses.",slideSrc:"https://docs.google.com/presentation/d/e/2PACX-1vQtqn14Q2srW5C5hGVJpqTq6oSota1izvQ65nd0C4cKw69yikqc55Qoxy1_GEbxQG2W7hyiAvQ5O2Rk/embed?start=false&loop=false&delayms=3000",prevLesson:null,nextLesson:"",slideLink:"https://docs.google.com/presentation/d/1-goU-UOy7GQaGVfITzajwlgCCS4LXB8iN_lcFM9Q-xY/edit?usp=sharing",children:Object(f.jsx)(ve,{code:'\ndef iter_calc(fn):\n    """Write a reusable HOF that first takes in a built in method, FN, that uses\n    two arguments, and then a numerical index. Perform calls to FN with \n    successive digts from 1 up to the specified index. USE HOF\'s.\n\n    >>> iter_calc(add)(5) # 1 + 2 + 3 + 4 + 5\n    15\n    >>> iter_calc(pow)(4) # 1 ** 2 ** 3 ** 4\n    1\n    >>> iter_calc(mul)(5) # 1 * 2 * 3 * 4 * 5 --\x3e this is reverse factorial\n    120\n    """\n    def calc(n):\n        so_far = 1            # every operation starts off with 1\n        for i in range(2, n + 1):\n            so_far = fn(so_far, i)\n        return so_far\n    return calc\n\n\ndef find_item(lst, item):\n    """Write a function that first takes in a list of tuples, and a specified key. \n    Without assigning any variables or using any loops, iterate through all the tuples \n    and return a list with those that contain the specified value.\n\n    >>> find_item([(True, 17), ("Hello", 21, False), (17 , "GO BEARS")], 17)\n    [(True, 17), (17, \'GO BEARS\')]\n    >>> find_item([(21, 3, 18), (True, False), (True, True, 18), (13, False)], True)\n    [(True, False), (True, True, 18)]\n    """\n    def finder(index, rv):\n        if index >= len(lst):\n            # at the end of the lst\n            return rv\n        elif item in lst[index]:\n            # item is present in the current tuple\n            rv.append(lst[index])\n            return finder(index + 1, rv)\n        else:\n            # item not in tuple, and not at the end of lst. move onto next tuple.\n            return finder(index + 1, rv)\n    return finder(0, [])\n          '})})};var Ce=function(){return Object(f.jsx)(pe,{header:"Lambda Expressions",description:"An introduction to a very specific function called a lambda function. These can be used to simplify Higher Order Functions, and you will see them A LOT in CS61A. We will also include environment diagrams to help visualize how they work.",slideSrc:"https://docs.google.com/presentation/d/e/2PACX-1vTztLqZNeRBbZ8_3CyDTlMiSVRda8KeB-ylQeQdWQLxlq6H7k0TpTZnmkMVBjL32ESRE9wi_Q-xJBgO/embed?start=false&loop=false&delayms=3000",prevLesson:null,nextLesson:"",videoSrc:"https://www.youtube.com/embed/yfbzAifM6FI",slideLink:"https://docs.google.com/presentation/d/1096r3NaKhVamcRhd_-w667iAlTnBHyINfjeqvdaFBRA/edit?usp=sharing"})};var _e=function(){return Object(f.jsxs)(pe,{header:"Recursion",description:"Recursion is a very important topic in computer science, and it can be tricky at first! Recursion is essentially when a function calls itself in its body. All three of us struggled (and still struggle!) with recursion at some point, and by far the most important step one can take to master it is to practice continously. Subsequently, we'll go over some practice in the second half of this lesson.",slideSrc:"https://docs.google.com/presentation/d/e/2PACX-1vQgsTEgtHfQy4spy13gpH2pSf0jH2Vp9P0Fuphg0sRJHbnnV1xDTfYXNsQtE2g_74-ZWfg9vMGn3nf-/embed?start=false&loop=false&delayms=3000",prevLesson:null,nextLesson:"",slideLink:"https://docs.google.com/presentation/d/1WvbeP9aJ__6h1V7jSOXIMbfclHczygiEMflrcXmqJSs/edit?usp=sharing",lessonDownload:"./prepDownloads/prep_lesson9.zip",videoSrc:"https://www.youtube.com/embed/hFAgvMiIkHI",children:[Object(f.jsx)(p.a,{as:"h3",children:"Practice Problem Solutions:"}),Object(f.jsx)(ve,{code:'\n"""\nNOTE: THERE WERE ERRORS IN THE DOCTESTS. IF YOUR CODE IS OUTPUTTING THE RIGHT THING\nTHEN IT IS MOST LIKELY RIGHT. CHECK DOWN BELOW FOR THE ERRORS. THERE ARE COMMENTS\nIN THE DOCSTRINGS WHERE THE ERRORS WERE.\n"""\n\n\nfn = lambda x: lambda y: pow(x, y)\n\ndef map_recursive(start, end, f):\n    """Implement map_to_range from Tuesday\'s lesson recursively\n    \n    >>> map_recursive(0, 10, fn(2))         ## there was accidentally two 128\'s in doctest\n    1\n    2\n    4\n    8\n    16\n    32\n    64\n    128        \n    256\n    512\n    """\n    if start == end:\n        return\n    print(f(start))\n    return map_recursive(start + 1, end, f)\n\n\ndef fib(i):\n    """Return the i-th term of the Fibonacci Sequence.\n    \n    >>> fib(2)    # --\x3e 0 + 1\n    1\n    >>> fib(5)    # --\x3e 2 + 3\n    5\n    >>> fib(10)   # --\x3e 21 + 34\n    55\n    """\n    if i == 0:\n        return 0\n    elif i == 1:\n        return 1\n    else:\n        return fib(i - 1) + fib(i - 2)\n\n\ndef factorial_hof(n):\n    """Now that we have defined factorial using iteration and recursion,\n    implement it using a higher order function. You are not allowed to use\n    operators outside of the function calls. \n    --\x3e Think about what we can do to store a counter\n\n    >>> factorial_hof(5)\n    120\n    >>> factorial_hof(6) ## error in this doctect\n    720\n    """\n    def helper(x, y):\n        if x == 0:\n            return y\n        else:\n            return helper(x - 1, y * x)\n    return helper(n, 1)\n'})]})};var Se=function(){return Object(f.jsx)(pe,{header:"Recursion Practice",description:"This is a day dedicated to extra recursion practice since practice is a very useful way to get a clear  understanding of things. We will talk about the Recursive Leap of Faith and further review practice problems which  require recursive solutions.",slideSrc:"https://docs.google.com/presentation/d/e/2PACX-1vTRlbGbTBh60VeI4P2Alf25MWV9sLqdIFuF0uQF9KWot049rqfQ0O0Ewn7G0dtAJ1QlGWxhbEM4U2le/embed?start=false&loop=false&delayms=3000",prevLesson:null,nextLesson:"",slideLink:"https://docs.google.com/presentation/d/1odeBEYNATTknnwYUI_DjgX2Chw-1TiMpAFspaonqW0w/edit?usp=sharing",lessonDownload:"./prepDownloads/prep_lesson10.zip"})};var Ie=function(){return Object(f.jsx)(pe,{header:"Recursion Practice",description:"More recursion practice! This lesson includes the examples repeat-digits, ping-pong, and compress.",slideSrc:"https://docs.google.com/presentation/d/e/2PACX-1vTT5NPR5C8z75JsKh6OEsml7FhXhPRm7AMQF-SE0SGOIlSKj236Pbz7whKZYbLOSvduL01lKPtyB-dr/embed?start=false&loop=false&delayms=3000",prevLesson:null,nextLesson:"",slideLink:"https://docs.google.com/presentation/d/1ZOwdl71_wb0Kykwi2glBSVSzk0NNKvF6kCHQFc9y7C8/edit?usp=sharing",lessonDownload:"./prepDownloads/prep_lesson11.zip"})};var Ne=function(){return Object(f.jsx)(pe,Object(P.a)({header:"Trees",description:"Moving on from recursion, this lesson will go over Trees. We will go over their structure, why they  are special, when to use them, and how to traverse them.",slideSrc:"https://docs.google.com/presentation/d/e/2PACX-1vQWaia1luX6xwuNUsII5fas2NdwR6SE4TgiiU5luCpMBQPHw5SRhJ2yVTi_Opu5iZkbmc16PKt5azX2/embed?start=false&loop=false&delayms=3000",prevLesson:null,nextLesson:""},"slideSrc","https://docs.google.com/presentation/d/1c7hLPkfoiuhXeJeaTAF5VgzkQXh1kE_MHZVnjZ0_UHE/edit?usp=sharing"))};var Le=function(){return Object(f.jsx)(pe,{header:"Recursion Practice",description:"We're done with content!! Now on to review. This lesson is a summative review of what we have covered so far.",slideSrc:"https://docs.google.com/presentation/d/e/2PACX-1vTFA1vZi8v-BUDXx-0-d8g1WV-25pOGiTi1LnwsSWZ7hP0yLluguMdxvUk1ProiIltcD39zXIwURZMA/embed?start=false&loop=false&delayms=3000",prevLesson:null,nextLesson:""})};var Pe=function(){return Object(f.jsx)(pe,{header:"Recursion Practice",description:"Further summative review of past topics. We'll give advice, and talk about what's next to come. Congrats!! You made it to the end of PREP CS!!! :D",slideSrc:"https://docs.google.com/presentation/d/e/2PACX-1vTWGb83cWgOUYv2eryniaflrBE2SNR66eOdQ5xdmYDWOZ-9GwyMz7kjp0cGefNCtcz6LHc66oiOuVnn/embed?start=false&loop=false&delayms=3000",prevLesson:null,nextLesson:""})};n(148);var Ee=function(){return Object(f.jsx)(h.a,{basename:"/cs-central",children:Object(f.jsxs)(R.d,{children:[Object(f.jsx)(R.b,{exact:!0,path:"/",children:Object(f.jsx)(H,{})}),Object(f.jsx)(R.b,{path:"/wmcode-info",children:Object(f.jsx)(U,{})}),Object(f.jsx)(R.b,{path:"/prepcs-info",children:Object(f.jsx)(B,{})}),Object(f.jsx)(R.b,{path:"/sample-lesson",children:Object(f.jsx)(q,{})}),Object(f.jsx)(R.b,{path:"/contact",children:Object(f.jsx)(V,{})}),Object(f.jsx)(R.b,{path:"/practice",children:Object(f.jsx)(G,{})}),Object(f.jsx)(R.b,{path:"/user-info",children:Object(f.jsx)(W,{})}),Object(f.jsx)(R.b,{path:"/wmcode",children:Object(f.jsx)(K,{})}),Object(f.jsx)(R.b,{path:"/prepcs",children:Object(f.jsx)(te,{})}),Object(f.jsx)(R.b,{path:"/visitor",children:Object(f.jsx)(se,{})}),Object(f.jsx)(R.b,{path:"/wmcode-lesson1",children:Object(f.jsx)(ie,{})}),Object(f.jsx)(R.b,{path:"/wmcode-lesson2",children:Object(f.jsx)(re,{})}),Object(f.jsx)(R.b,{path:"/wmcode-lesson3",children:Object(f.jsx)(ae,{})}),Object(f.jsx)(R.b,{path:"/wmcode-lesson4",children:Object(f.jsx)(ce,{})}),Object(f.jsx)(R.b,{path:"/wmcode-lesson5",children:Object(f.jsx)(le,{})}),Object(f.jsx)(R.b,{path:"/wmcode-lesson6",children:Object(f.jsx)(de,{})}),Object(f.jsx)(R.b,{path:"/wmcode-lesson7",children:Object(f.jsx)(he,{})}),Object(f.jsx)(R.b,{path:"/wmcode-lesson8",children:Object(f.jsx)(ue,{})}),Object(f.jsx)(R.b,{path:"/wmcode-lesson9",children:Object(f.jsx)(je,{})}),Object(f.jsx)(R.b,{path:"/prepcs-lesson1",children:Object(f.jsx)(me,{})}),Object(f.jsx)(R.b,{path:"/prepcs-lesson2",children:Object(f.jsx)(fe,{})}),Object(f.jsx)(R.b,{path:"/prepcs-lesson3",children:Object(f.jsx)(xe,{})}),Object(f.jsx)(R.b,{path:"/prepcs-lesson4",children:Object(f.jsx)(Oe,{})}),Object(f.jsx)(R.b,{path:"/prepcs-lesson5",children:Object(f.jsx)(ge,{})}),Object(f.jsx)(R.b,{path:"/prepcs-lesson6",children:Object(f.jsx)(Te,{})}),Object(f.jsx)(R.b,{path:"/prepcs-lesson7",children:Object(f.jsx)(ke,{})}),Object(f.jsx)(R.b,{path:"/prepcs-lesson8",children:Object(f.jsx)(Ce,{})}),Object(f.jsx)(R.b,{path:"/prepcs-lesson9",children:Object(f.jsx)(_e,{})}),Object(f.jsx)(R.b,{path:"/prepcs-lesson10",children:Object(f.jsx)(Se,{})}),Object(f.jsx)(R.b,{path:"/prepcs-lesson11",children:Object(f.jsx)(Ie,{})}),Object(f.jsx)(R.b,{path:"/prepcs-lesson12",children:Object(f.jsx)(Ne,{})}),Object(f.jsx)(R.b,{path:"/prepcs-lesson13",children:Object(f.jsx)(Le,{})}),Object(f.jsx)(R.b,{path:"/prepcs-lesson14",children:Object(f.jsx)(Pe,{})})]})})};r.a.render(Object(f.jsx)(h.a,{children:Object(f.jsx)(Ee,{})}),document.getElementById("root"))}},[[416,152,153]]]);
//# sourceMappingURL=main.e5233e62.chunk.js.map